// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.9
// source: store_delivery_type_pickup.proto

package logistics

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoreDeliveryTypePickupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoreDeliveryTypePickupId) Reset() {
	*x = StoreDeliveryTypePickupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreDeliveryTypePickupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDeliveryTypePickupId) ProtoMessage() {}

func (x *StoreDeliveryTypePickupId) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDeliveryTypePickupId.ProtoReflect.Descriptor instead.
func (*StoreDeliveryTypePickupId) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{0}
}

func (x *StoreDeliveryTypePickupId) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateStoreDeliveryTypePickup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreCode      int32 `protobuf:"varint,1,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	DeliveryTypeId int32 `protobuf:"varint,2,opt,name=delivery_type_id,json=deliveryTypeId,proto3" json:"delivery_type_id,omitempty"`
	MaxCells       int32 `protobuf:"varint,3,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
	IsActive       bool  `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *CreateStoreDeliveryTypePickup) Reset() {
	*x = CreateStoreDeliveryTypePickup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoreDeliveryTypePickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoreDeliveryTypePickup) ProtoMessage() {}

func (x *CreateStoreDeliveryTypePickup) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoreDeliveryTypePickup.ProtoReflect.Descriptor instead.
func (*CreateStoreDeliveryTypePickup) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStoreDeliveryTypePickup) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *CreateStoreDeliveryTypePickup) GetDeliveryTypeId() int32 {
	if x != nil {
		return x.DeliveryTypeId
	}
	return 0
}

func (x *CreateStoreDeliveryTypePickup) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

func (x *CreateStoreDeliveryTypePickup) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type ListStoreDeliveryTypePickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	Sort   string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ListStoreDeliveryTypePickupRequest) Reset() {
	*x = ListStoreDeliveryTypePickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoreDeliveryTypePickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoreDeliveryTypePickupRequest) ProtoMessage() {}

func (x *ListStoreDeliveryTypePickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoreDeliveryTypePickupRequest.ProtoReflect.Descriptor instead.
func (*ListStoreDeliveryTypePickupRequest) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{2}
}

func (x *ListStoreDeliveryTypePickupRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListStoreDeliveryTypePickupRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListStoreDeliveryTypePickupRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListStoreDeliveryTypePickupRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type ListStoreDeliveryTypePickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*StoreDeliveryTypePickup `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListStoreDeliveryTypePickupResponse) Reset() {
	*x = ListStoreDeliveryTypePickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoreDeliveryTypePickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoreDeliveryTypePickupResponse) ProtoMessage() {}

func (x *ListStoreDeliveryTypePickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoreDeliveryTypePickupResponse.ProtoReflect.Descriptor instead.
func (*ListStoreDeliveryTypePickupResponse) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{3}
}

func (x *ListStoreDeliveryTypePickupResponse) GetResults() []*StoreDeliveryTypePickup {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListStoreDeliveryTypePickupResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type StoreDeliveryTypePickup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Store           *Store             `protobuf:"bytes,2,opt,name=store,proto3" json:"store,omitempty"`
	DeliveryType    *DeliveryTypeShort `protobuf:"bytes,3,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	MaxCells        int32              `protobuf:"varint,4,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
	BusyCells       int32              `protobuf:"varint,5,opt,name=busy_cells,json=busyCells,proto3" json:"busy_cells,omitempty"`
	FreeCells       int32              `protobuf:"varint,6,opt,name=free_cells,json=freeCells,proto3" json:"free_cells,omitempty"`
	IsActive        bool               `protobuf:"varint,7,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	IsActiveByCells bool               `protobuf:"varint,8,opt,name=is_active_by_cells,json=isActiveByCells,proto3" json:"is_active_by_cells,omitempty"`
	CreatedAt       string             `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string             `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Postal          string             `protobuf:"bytes,11,opt,name=postal,proto3" json:"postal,omitempty"`
	Street          string             `protobuf:"bytes,12,opt,name=street,proto3" json:"street,omitempty"`
	House           string             `protobuf:"bytes,13,opt,name=house,proto3" json:"house,omitempty"`
	Housing         string             `protobuf:"bytes,14,opt,name=housing,proto3" json:"housing,omitempty"`
	Floor           string             `protobuf:"bytes,15,opt,name=floor,proto3" json:"floor,omitempty"`
	Rels            []*Rel             `protobuf:"bytes,16,rep,name=rels,proto3" json:"rels,omitempty"`
}

func (x *StoreDeliveryTypePickup) Reset() {
	*x = StoreDeliveryTypePickup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreDeliveryTypePickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDeliveryTypePickup) ProtoMessage() {}

func (x *StoreDeliveryTypePickup) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDeliveryTypePickup.ProtoReflect.Descriptor instead.
func (*StoreDeliveryTypePickup) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{4}
}

func (x *StoreDeliveryTypePickup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreDeliveryTypePickup) GetStore() *Store {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *StoreDeliveryTypePickup) GetDeliveryType() *DeliveryTypeShort {
	if x != nil {
		return x.DeliveryType
	}
	return nil
}

func (x *StoreDeliveryTypePickup) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

func (x *StoreDeliveryTypePickup) GetBusyCells() int32 {
	if x != nil {
		return x.BusyCells
	}
	return 0
}

func (x *StoreDeliveryTypePickup) GetFreeCells() int32 {
	if x != nil {
		return x.FreeCells
	}
	return 0
}

func (x *StoreDeliveryTypePickup) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *StoreDeliveryTypePickup) GetIsActiveByCells() bool {
	if x != nil {
		return x.IsActiveByCells
	}
	return false
}

func (x *StoreDeliveryTypePickup) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StoreDeliveryTypePickup) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *StoreDeliveryTypePickup) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *StoreDeliveryTypePickup) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *StoreDeliveryTypePickup) GetHouse() string {
	if x != nil {
		return x.House
	}
	return ""
}

func (x *StoreDeliveryTypePickup) GetHousing() string {
	if x != nil {
		return x.Housing
	}
	return ""
}

func (x *StoreDeliveryTypePickup) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

func (x *StoreDeliveryTypePickup) GetRels() []*Rel {
	if x != nil {
		return x.Rels
	}
	return nil
}

type UpdateStoreDeliveryTypePickup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StoreCode      int32 `protobuf:"varint,2,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	DeliveryTypeId int32 `protobuf:"varint,3,opt,name=delivery_type_id,json=deliveryTypeId,proto3" json:"delivery_type_id,omitempty"`
	MaxCells       int32 `protobuf:"varint,4,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
	IsActive       bool  `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdateStoreDeliveryTypePickup) Reset() {
	*x = UpdateStoreDeliveryTypePickup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoreDeliveryTypePickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreDeliveryTypePickup) ProtoMessage() {}

func (x *UpdateStoreDeliveryTypePickup) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreDeliveryTypePickup.ProtoReflect.Descriptor instead.
func (*UpdateStoreDeliveryTypePickup) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateStoreDeliveryTypePickup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStoreDeliveryTypePickup) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *UpdateStoreDeliveryTypePickup) GetDeliveryTypeId() int32 {
	if x != nil {
		return x.DeliveryTypeId
	}
	return 0
}

func (x *UpdateStoreDeliveryTypePickup) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

func (x *UpdateStoreDeliveryTypePickup) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type SuggestStoreDeliveryTypePickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *SuggestStoreDeliveryTypePickupRequest) Reset() {
	*x = SuggestStoreDeliveryTypePickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestStoreDeliveryTypePickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestStoreDeliveryTypePickupRequest) ProtoMessage() {}

func (x *SuggestStoreDeliveryTypePickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestStoreDeliveryTypePickupRequest.ProtoReflect.Descriptor instead.
func (*SuggestStoreDeliveryTypePickupRequest) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{6}
}

func (x *SuggestStoreDeliveryTypePickupRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SuggestStoreDeliveryTypePickupRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type SuggestStoreDeliveryTypePickup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsActive  bool   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	StoreCode int32  `protobuf:"varint,4,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	Postal    string `protobuf:"bytes,5,opt,name=postal,proto3" json:"postal,omitempty"`
	Street    string `protobuf:"bytes,6,opt,name=street,proto3" json:"street,omitempty"`
	House     string `protobuf:"bytes,7,opt,name=house,proto3" json:"house,omitempty"`
	Housing   string `protobuf:"bytes,8,opt,name=housing,proto3" json:"housing,omitempty"`
	Floor     string `protobuf:"bytes,9,opt,name=floor,proto3" json:"floor,omitempty"`
}

func (x *SuggestStoreDeliveryTypePickup) Reset() {
	*x = SuggestStoreDeliveryTypePickup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestStoreDeliveryTypePickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestStoreDeliveryTypePickup) ProtoMessage() {}

func (x *SuggestStoreDeliveryTypePickup) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestStoreDeliveryTypePickup.ProtoReflect.Descriptor instead.
func (*SuggestStoreDeliveryTypePickup) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{7}
}

func (x *SuggestStoreDeliveryTypePickup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SuggestStoreDeliveryTypePickup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SuggestStoreDeliveryTypePickup) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *SuggestStoreDeliveryTypePickup) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *SuggestStoreDeliveryTypePickup) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *SuggestStoreDeliveryTypePickup) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *SuggestStoreDeliveryTypePickup) GetHouse() string {
	if x != nil {
		return x.House
	}
	return ""
}

func (x *SuggestStoreDeliveryTypePickup) GetHousing() string {
	if x != nil {
		return x.Housing
	}
	return ""
}

func (x *SuggestStoreDeliveryTypePickup) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

type SuggestStoreDeliveryTypePickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*SuggestStoreDeliveryTypePickup `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32                             `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SuggestStoreDeliveryTypePickupResponse) Reset() {
	*x = SuggestStoreDeliveryTypePickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_pickup_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestStoreDeliveryTypePickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestStoreDeliveryTypePickupResponse) ProtoMessage() {}

func (x *SuggestStoreDeliveryTypePickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_pickup_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestStoreDeliveryTypePickupResponse.ProtoReflect.Descriptor instead.
func (*SuggestStoreDeliveryTypePickupResponse) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_pickup_proto_rawDescGZIP(), []int{8}
}

func (x *SuggestStoreDeliveryTypePickupResponse) GetResults() []*SuggestStoreDeliveryTypePickup {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SuggestStoreDeliveryTypePickupResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_store_delivery_type_pickup_proto protoreflect.FileDescriptor

var file_store_delivery_type_pickup_proto_rawDesc = []byte{
	0x0a, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x19, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x7e, 0x0a, 0x22, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x79, 0x0a, 0x23, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x91, 0x04, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75,
	0x73, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x62, 0x75, 0x73, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x65,
	0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66,
	0x72, 0x65, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x62, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x79, 0x43, 0x65, 0x6c,
	0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e,
	0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x65, 0x6c, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x52, 0x65, 0x6c, 0x52, 0x04, 0x72, 0x65, 0x6c, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65, 0x6c,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65, 0x6c,
	0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x55, 0x0a, 0x25, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xf6, 0x01, 0x0a, 0x1e, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f,
	0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x22,
	0x83, 0x01, 0x0a, 0x26, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xea, 0x06, 0x0a, 0x1e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x91, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x2d, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x2d, 0x74, 0x79, 0x70, 0x65, 0x2d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x85, 0x01, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x1a, 0x22, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a,
	0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2d, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x80, 0x01, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x24, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x49, 0x64, 0x1a, 0x22, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x12, 0x27,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2d, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x28, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x22, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x32, 0x27, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x77, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x24,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x74, 0x79, 0x70,
	0x65, 0x2d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa2, 0x01,
	0x0a, 0x07, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x12, 0x30, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x2d, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_store_delivery_type_pickup_proto_rawDescOnce sync.Once
	file_store_delivery_type_pickup_proto_rawDescData = file_store_delivery_type_pickup_proto_rawDesc
)

func file_store_delivery_type_pickup_proto_rawDescGZIP() []byte {
	file_store_delivery_type_pickup_proto_rawDescOnce.Do(func() {
		file_store_delivery_type_pickup_proto_rawDescData = protoimpl.X.CompressGZIP(file_store_delivery_type_pickup_proto_rawDescData)
	})
	return file_store_delivery_type_pickup_proto_rawDescData
}

var file_store_delivery_type_pickup_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_store_delivery_type_pickup_proto_goTypes = []interface{}{
	(*StoreDeliveryTypePickupId)(nil),              // 0: logistics.StoreDeliveryTypePickupId
	(*CreateStoreDeliveryTypePickup)(nil),          // 1: logistics.CreateStoreDeliveryTypePickup
	(*ListStoreDeliveryTypePickupRequest)(nil),     // 2: logistics.ListStoreDeliveryTypePickupRequest
	(*ListStoreDeliveryTypePickupResponse)(nil),    // 3: logistics.ListStoreDeliveryTypePickupResponse
	(*StoreDeliveryTypePickup)(nil),                // 4: logistics.StoreDeliveryTypePickup
	(*UpdateStoreDeliveryTypePickup)(nil),          // 5: logistics.UpdateStoreDeliveryTypePickup
	(*SuggestStoreDeliveryTypePickupRequest)(nil),  // 6: logistics.SuggestStoreDeliveryTypePickupRequest
	(*SuggestStoreDeliveryTypePickup)(nil),         // 7: logistics.SuggestStoreDeliveryTypePickup
	(*SuggestStoreDeliveryTypePickupResponse)(nil), // 8: logistics.SuggestStoreDeliveryTypePickupResponse
	(*Store)(nil),             // 9: logistics.Store
	(*DeliveryTypeShort)(nil), // 10: logistics.DeliveryTypeShort
	(*Rel)(nil),               // 11: logistics.Rel
	(*emptypb.Empty)(nil),     // 12: google.protobuf.Empty
}
var file_store_delivery_type_pickup_proto_depIdxs = []int32{
	4,  // 0: logistics.ListStoreDeliveryTypePickupResponse.results:type_name -> logistics.StoreDeliveryTypePickup
	9,  // 1: logistics.StoreDeliveryTypePickup.store:type_name -> logistics.Store
	10, // 2: logistics.StoreDeliveryTypePickup.delivery_type:type_name -> logistics.DeliveryTypeShort
	11, // 3: logistics.StoreDeliveryTypePickup.rels:type_name -> logistics.Rel
	7,  // 4: logistics.SuggestStoreDeliveryTypePickupResponse.results:type_name -> logistics.SuggestStoreDeliveryTypePickup
	2,  // 5: logistics.StoreDeliveryTypePickupService.List:input_type -> logistics.ListStoreDeliveryTypePickupRequest
	1,  // 6: logistics.StoreDeliveryTypePickupService.Create:input_type -> logistics.CreateStoreDeliveryTypePickup
	0,  // 7: logistics.StoreDeliveryTypePickupService.Get:input_type -> logistics.StoreDeliveryTypePickupId
	5,  // 8: logistics.StoreDeliveryTypePickupService.Update:input_type -> logistics.UpdateStoreDeliveryTypePickup
	0,  // 9: logistics.StoreDeliveryTypePickupService.Delete:input_type -> logistics.StoreDeliveryTypePickupId
	6,  // 10: logistics.StoreDeliveryTypePickupService.Suggest:input_type -> logistics.SuggestStoreDeliveryTypePickupRequest
	3,  // 11: logistics.StoreDeliveryTypePickupService.List:output_type -> logistics.ListStoreDeliveryTypePickupResponse
	4,  // 12: logistics.StoreDeliveryTypePickupService.Create:output_type -> logistics.StoreDeliveryTypePickup
	4,  // 13: logistics.StoreDeliveryTypePickupService.Get:output_type -> logistics.StoreDeliveryTypePickup
	4,  // 14: logistics.StoreDeliveryTypePickupService.Update:output_type -> logistics.StoreDeliveryTypePickup
	12, // 15: logistics.StoreDeliveryTypePickupService.Delete:output_type -> google.protobuf.Empty
	8,  // 16: logistics.StoreDeliveryTypePickupService.Suggest:output_type -> logistics.SuggestStoreDeliveryTypePickupResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_store_delivery_type_pickup_proto_init() }
func file_store_delivery_type_pickup_proto_init() {
	if File_store_delivery_type_pickup_proto != nil {
		return
	}
	file_store_proto_init()
	file_delivery_type_proto_init()
	file_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_store_delivery_type_pickup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreDeliveryTypePickupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_pickup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoreDeliveryTypePickup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_pickup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoreDeliveryTypePickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_pickup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoreDeliveryTypePickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_pickup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreDeliveryTypePickup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_pickup_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoreDeliveryTypePickup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_pickup_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestStoreDeliveryTypePickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_pickup_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestStoreDeliveryTypePickup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_pickup_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestStoreDeliveryTypePickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_store_delivery_type_pickup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_store_delivery_type_pickup_proto_goTypes,
		DependencyIndexes: file_store_delivery_type_pickup_proto_depIdxs,
		MessageInfos:      file_store_delivery_type_pickup_proto_msgTypes,
	}.Build()
	File_store_delivery_type_pickup_proto = out.File
	file_store_delivery_type_pickup_proto_rawDesc = nil
	file_store_delivery_type_pickup_proto_goTypes = nil
	file_store_delivery_type_pickup_proto_depIdxs = nil
}
