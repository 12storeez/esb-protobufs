syntax = "proto3";

option go_package = "go/logistics";

package logistics;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service Messages {
  rpc Create (Message) returns (MessageId) {
    option (google.api.http) = {
      post: "/v1/messages"
      body: "*"
    };
  }

  rpc Get (MessageId) returns (Message) {
    option (google.api.http) = {
      get: "/v1/messages/{message_id}"
    };
  }

  rpc List (ListMessagesRequest) returns (ListMessagesResponse) {
    option (google.api.http) = {
      get: "/v1/messages"
    };
  }

  rpc Update (Message) returns (Message) {
    option (google.api.http) = {
      patch: "/v1/messages/{message_id}"
      body: "*"
    };
  }

  rpc Upsert (Message) returns (Message) {
    option (google.api.http) = {
      put: "/v1/messages"
      body: "*"
    };
  }

  rpc Delete (MessageId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/messages/{message_id}"
    };
  }

  rpc AddTransportCompany(MessageToTransportCompany) returns (MessageToTransportCompany) {
    option (google.api.http) = {
      post: "/v1/messages/{message_id}/transport-companies"
      body: "*"
    };
  }

  rpc DeleteTransportCompany(MessageToTransportCompany) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/messages/{message_id}/transport-companies/{transport_company_id}"
    };
  }
}

enum BorderType {
  less = 0;
  none = 1;
  greater = 2;
}

message MessageToTransportCompany {
  int32 message_id = 1;
  int32 transport_company_id = 2;
  string value = 3;
}

message MessageId {
  int32 message_id = 1;
}

message Message {
  int32 message_id = 1;
  int32 zone_id = 2;
  int32 delivery_method_id = 3;
  int32 payment_method_id = 4;
  BorderType price_border = 5;
  BorderType product_quantity_border = 6;
  string created = 7;
  string updated = 8;
  repeated MessageTransportCompanyValue transport_companies_values = 9;
  int32 id = 10;
}

message MessageTransportCompanyValue {
  int32 transport_company_id = 1;
  string value = 2;
}

message ListMessagesRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message ListMessagesResponse {
  repeated Message results = 1;
  int32 total = 2;
}