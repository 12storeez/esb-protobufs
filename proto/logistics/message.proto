syntax = "proto3";

option go_package = "go/logistics";

package logistics;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service MessageService {
  rpc List(ListMessageRequest) returns (ListMessageResponse) {
    option (google.api.http) = {
      get: "/api/v1/message"
    };
  }

  rpc Create(Message) returns (Message) {
    option (google.api.http) = {
      post: "/api/v1/message"
      body: "*"
    };
  }

  rpc Get(MessageId) returns (Message) {
    option (google.api.http) = {
      get: "/api/v1/message/{id}"
    };
  }

  rpc Update(Message) returns (Message) {
    option (google.api.http) = {
      patch: "/api/v1/message/{id}"
      body: "*"
    };
  }

  rpc Delete(MessageId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/message/{id}"
    };
  }

  rpc Suggest(SuggestMessageRequest) returns (SuggestMessageResponse) {
    option (google.api.http) = {
      get: "/api/v1/message/suggest"
    };
  }
}

// Database relationship for message, where
// - id - identifier for the related entity
// - name - display name of the related entity
// - rel - entity name
// - href - link to the rel, id
message Rel {
  int32  id = 1;
  string name = 2;
  string rel = 3;
  string href = 4;
}

message MessageId {
  int32 id = 1;
}

message Message {
  int32    id = 1;
  string   text = 2;
  repeated Rel rels = 3;
  string   created_at = 4;
  string   updated_at = 5;
}

message ListMessageRequest {
  int32   limit = 1;
  int32   offset = 2;
  string  search = 3;
  string  sort = 4;
}

message ListMessageResponse {
  repeated Message results = 1;
  int32            total = 2;
}

message SuggestMessageRequest {
  int32  limit = 1;
  string search = 2;
}

message SuggestMessageResponse {
  int32  id = 1;
  string text = 2;
}