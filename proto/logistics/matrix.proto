syntax = "proto3";

option go_package = "go/logistics";

package logistics;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service Matrices {

  rpc Create(CreateMatrixRequest) returns (CreateMatrixResponse) {
    option (google.api.http) = {
      post: "/v1/matrices"
      body: "*"
    };
  }

  rpc Get(GetMatrixRequest) returns (Matrix) {
    option (google.api.http) = {
      get: "/v1/matrices/{id}"
    };
  }

  rpc List(ListMatrixRequest) returns (ListMatrixResponse) {
    option (google.api.http) = {
      get: "/v1/matrices"
    };
  }

  rpc Update(UpdateMatrixRequest) returns (Matrix) {
    option (google.api.http) = {
      patch: "/v1/matrices/{matrix_id}"
      body: "*"
    };
  }

  rpc Delete(DeleteMatrixRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/matrices/{matrix_id}"
    };
  }

  rpc AddDeliveryIntervals(AddDeliveryIntervalsRequest) returns (AddDeliveryIntervalsResponse) {
    option (google.api.http) = {
      post: "/v1/matrices/{matrix_id}/intervals"
      body: "interval_id"
    };
  }

  rpc DeleteDeliveryIntervals(DeleteDeliveryIntervalsRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/matrices/{matrix_id}/intervals/{interval_id}"
    };
  }

}

message DeleteDeliveryIntervalsRequest {
  int32 matrix_id = 1;
  int32 interval_id = 2;
}

message AddDeliveryIntervalsResponse {
  int32 matrix_id = 1;
  int32 interval_id = 2;
}

message AddDeliveryIntervalsRequest {
  int32 matrix_id = 1;
  int32 interval_id = 2;
}

message DeleteMatrixRequest {
  int32 matrix_id = 1;
}

message UpdateMatrixRequest {
  int32 matrix_id = 1;
  Matrix matrix = 2;
}

message CreateMatrixRequest {
  int32 zone_id = 1;
  string cutoff_time = 2;
  int32 gap_days = 3;
  int32 consolidation_days = 4;
  int32 delivery_method_id = 5;
  int32 payment_method_id = 6;
  double total_less = 7;
  double total_more = 8;
  double total = 9;
  int32 delivery_min_days = 10;
}

message CreateMatrixResponse {
  int32 matrix_id = 1;
}

message ListMatrixRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message ListMatrixResponse {
  repeated Matrix results = 1;
  int32 total = 2;
}

message GetMatrixRequest {
  int32 id = 1;
}

message Matrix {
  int32 id = 1;
  int32 zone_id = 2;
  string cutoff_time = 3;
  int32 gap_days = 4;
  int32 consolidation_days = 5;
  int32 delivery_method_id = 6;
  int32 payment_method_id = 7;
  double total_less = 8;
  double total_more = 9;
  double total = 10;
  int32 delivery_min_days = 11;
  string created = 12;
  string updated = 13;
  repeated int32 intervals_ids = 14;
}
