syntax = "proto3";

option go_package = "go/geo";

package geo;

service geo {
  // Suggest по странам. Возвращет страны из БД
  rpc SuggestCountry(SuggestCountryParams) returns (SuggestCountryResponse) {
  }
  // Детальная информация по стране из БД
  rpc CountryDetails(CountryDetailsParams) returns (Country) {
  }
  // Suggest по городам. Если ничего не найдено - возвращает список городов по умолчанию (см. DefaultCityList)
  // Первый возвращаемый город - город, определённый по IP (если удалось)
  rpc SuggestCity(SuggestCityParams) returns (SuggestCityResponse) {
  }
  // Детали города (используется нормализация дадаты)
  rpc CityDetails(CityDetailsParams) returns (City) {
  }
  // Детали города по GeoID
  rpc CityDetailsByGeoID(CityDetailsByGeoIDParams) returns (City) {
  }
  // Метод возвращает список городов по-умолчанию, в зависимости от количества заказов
  rpc DefaultCityList(DefaultCityListParams) returns (SuggestCityResponse) {
  }
  // Определение города по IP (MaxMind & Dadata + cache)
  rpc CityDetailsByIP(CityDetailsByIPParams) returns (City) {
  }
  // Suggest по адресам
  rpc SuggestAddress(SuggestAddressParams) returns (SuggestAddressResponse) {
  }
  // Нормализация адреса
  rpc AddressDetails(AddressDetailsParams) returns (Address) {
  }
  // Детали адреса по GeoID
  rpc AddressDetailsByGeoID(AddressDetailsByGeoIDParams) returns (Address) {
  }
  // Детали страны по номеру телефона
  rpc CountryDetailsByPhone(CountryDetailsByPhoneRequest) returns (CountryDetailsByPhoneResponse) {
  }
}

enum LocaleType {
  nil = 0;
  ru = 1;
  en = 2;
}

// Country ...
message SuggestCountryParams {
  LocaleType locale = 1;
  string     search = 2;
  int32      limit = 3;
  int32      offset = 4;
}

message SuggestCountryResponse {
  bool                    success = 1;
  int32                   total = 2;
  repeated SuggestCountry result = 3;
}

message SuggestCountry {
  string    id = 1;
  string    suggest = 2;
  string    title = 3;
  string    subtitle = 4;
  string    iso_code = 5;
  Phone     phone = 6;
}

message CountryDetailsParams {
  LocaleType  locale = 1;
  string      iso_code = 2;
}

message Country {
  string          id = 1;
  string          full_title = 2;
  string          type = 3;
  CountryDetails  country = 4;
  string          postal_code = 5;
  string          postal_code_format = 6;
  string          currency_code = 7;
  Phone           phone = 8;
  Location        location = 9;
}

message Phone  {
  int32           prefix = 1;
  repeated string masks = 2;
  string          primary_mask = 3;
}

// City ...
message SuggestCityParams {
  LocaleType locale = 1;
  string     country_iso_code = 2;
  string     search = 3;
  int32      limit = 4;
  int32      offset = 5;
  string     ip = 6;
}

message SuggestCityResponse {
  bool                 success = 1;
  int32                total = 2;
  repeated SuggestCity result = 3;
}

message SuggestCity {
  string    id = 1;
  string    suggest = 2;
  string    title = 3;
  string    subtitle = 4;
}

message CityDetailsParams {
  LocaleType locale = 1;
  string     country_iso_code = 2;

  // для России передавать полученный suggest из SuggestCity. Метод использует нормализацию Dadata
  // для остальных передавать id
  string     query = 3;
}

message CityDetailsByGeoIDParams {
  LocaleType locale = 1;
  string     country_iso_code = 2;
  string     id = 3; // fiasID или geoID
}

message City {
  string          id = 1;
  string          full_title = 2;
  string          type = 3;
  CountryDetails  country = 4;
  RegionDetails   region = 5;
  State           state = 6;
  Details         city = 7;
  string          postal_code = 8;
  string          postal_code_format = 9;
  string          currency_code = 10;
  Phone           phone = 11;
  Location        location = 12;
  CityAdditional  additional = 13;
}

message Details {
  string id = 1;
  string fias = 2;
  string title = 3;
  string full_title = 4;
  string type = 5;
}

message RegionDetails {
  string id = 1;
  string fias = 2;
  string title = 3;
  string full_title = 4;
  string type = 5;

  string iso_code = 6;
}

message HouseDetails {
  string  id = 1;
  string  fias = 2;
  string  title = 3;
  string  full_title = 4;
  string  type = 5;

  string  building = 6;
  string  block = 7;
}

message CountryDetails {
  string id = 1;
  string title = 2;
  string full_title = 3;
  string type = 4;
  string iso_code = 5;
  string capital_id = 6;
  string capital_title = 7;
}

message State {
  string  title = 1;
  string  iso_code = 2;
}

message Location  {
  double  latitude = 1;
  double  longitude = 2;
}

message CityAdditional {
  string fias_level = 1;
}

message CityDetailsByIPParams {
  LocaleType locale = 1;
  string     ip = 2;
}

// Address ...
message SuggestAddressParams {
  LocaleType   locale = 1;
  string       country_iso_code = 2;
  string       city_id = 3;
  string       search = 4;
  int32        limit = 5;
  int32        offset = 6;
}

message SuggestAddressResponse {
  bool                    success = 1;
  int32                   total = 2;
  repeated SuggestAddress result = 3;
}

message SuggestAddress {
  string  id = 1;  // fiasID или geoID или query_for_details (полная строка адреса)
  string  suggest = 2;
  string  title = 3;
  string  subtitle = 4;
}

// нормализация
message AddressDetailsParams {
  LocaleType locale = 1;
  string     country_iso_code = 2;
  string     query = 3;
}

message AddressDetailsByGeoIDParams {
  LocaleType locale = 1;
  string     country_iso_code = 2;
  string     id = 3;
  string     city_id = 4;
}

message Address {
  // fias_id for dadata and place_id for google
  string              id = 1;
  string              full_title = 2;
  string              type = 3;
  CountryDetails      country = 4;
  RegionDetails       region = 5;
  State               state = 6;
  Details             city = 7;
  Details             settlement = 8;
  Details             street = 9;
  HouseDetails        house = 10;
  string              postal_code = 11;
  string              postal_code_format = 12;
  string              currency_code = 13;
  Phone               phone = 14;
  Location            location = 15;
  AddressAdditional   additional = 16;
}

message AddressAdditional {
  bool    is_in_mkad = 1;
  bool    is_in_kad = 2;
  string  fias_level = 3;
}

message DefaultCityListParams {
  string  ip = 1;
  string  country_iso_code = 2;
}

message CountryDetailsByPhoneRequest {
  string phone_number = 1;
}

message CountryDetailsByPhoneResponse {
  string phone_number = 1;
  Country country = 2;
}
