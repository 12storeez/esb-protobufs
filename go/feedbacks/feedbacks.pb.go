// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.2
// source: feedbacks.proto

package feedbacks

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateNPSParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Rate      int32  `protobuf:"varint,2,opt,name=rate,proto3" json:"rate,omitempty"`
	StoreCode int32  `protobuf:"varint,3,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	OrderDate string `protobuf:"bytes,4,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	OrderId   string `protobuf:"bytes,5,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Comment   string `protobuf:"bytes,6,opt,name=comment,proto3" json:"comment,omitempty"`
	Source    string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *UpdateNPSParams) Reset() {
	*x = UpdateNPSParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNPSParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNPSParams) ProtoMessage() {}

func (x *UpdateNPSParams) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNPSParams.ProtoReflect.Descriptor instead.
func (*UpdateNPSParams) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{0}
}

func (x *UpdateNPSParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateNPSParams) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *UpdateNPSParams) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *UpdateNPSParams) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *UpdateNPSParams) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdateNPSParams) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *UpdateNPSParams) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type NewNPSParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rate      int32  `protobuf:"varint,1,opt,name=rate,proto3" json:"rate,omitempty"`
	StoreCode int32  `protobuf:"varint,2,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	OrderDate string `protobuf:"bytes,3,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	OrderId   string `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Comment   string `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	Source    string `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *NewNPSParams) Reset() {
	*x = NewNPSParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewNPSParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNPSParams) ProtoMessage() {}

func (x *NewNPSParams) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNPSParams.ProtoReflect.Descriptor instead.
func (*NewNPSParams) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{1}
}

func (x *NewNPSParams) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *NewNPSParams) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *NewNPSParams) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *NewNPSParams) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *NewNPSParams) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *NewNPSParams) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

type NewNpsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NewNpsResponse) Reset() {
	*x = NewNpsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewNpsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNpsResponse) ProtoMessage() {}

func (x *NewNpsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNpsResponse.ProtoReflect.Descriptor instead.
func (*NewNpsResponse) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{2}
}

func (x *NewNpsResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CanBeSavedParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *CanBeSavedParams) Reset() {
	*x = CanBeSavedParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CanBeSavedParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CanBeSavedParams) ProtoMessage() {}

func (x *CanBeSavedParams) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CanBeSavedParams.ProtoReflect.Descriptor instead.
func (*CanBeSavedParams) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{3}
}

func (x *CanBeSavedParams) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type PatchParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StoreId      int32   `protobuf:"varint,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Location     int32   `protobuf:"varint,3,opt,name=location,proto3" json:"location,omitempty"`
	Type         int32   `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Rate         int32   `protobuf:"varint,5,opt,name=rate,proto3" json:"rate,omitempty"`
	Improvements []int32 `protobuf:"varint,6,rep,packed,name=improvements,proto3" json:"improvements,omitempty"`
	Comment      string  `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	Contact      string  `protobuf:"bytes,8,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *PatchParams) Reset() {
	*x = PatchParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchParams) ProtoMessage() {}

func (x *PatchParams) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchParams.ProtoReflect.Descriptor instead.
func (*PatchParams) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{4}
}

func (x *PatchParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchParams) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *PatchParams) GetLocation() int32 {
	if x != nil {
		return x.Location
	}
	return 0
}

func (x *PatchParams) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *PatchParams) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PatchParams) GetImprovements() []int32 {
	if x != nil {
		return x.Improvements
	}
	return nil
}

func (x *PatchParams) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PatchParams) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

type NewParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId  int32 `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Location int32 `protobuf:"varint,2,opt,name=location,proto3" json:"location,omitempty"`
	Type     int32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
	Rate     int32 `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *NewParams) Reset() {
	*x = NewParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewParams) ProtoMessage() {}

func (x *NewParams) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewParams.ProtoReflect.Descriptor instead.
func (*NewParams) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{5}
}

func (x *NewParams) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *NewParams) GetLocation() int32 {
	if x != nil {
		return x.Location
	}
	return 0
}

func (x *NewParams) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *NewParams) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type NewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Improvements []*Improvement `protobuf:"bytes,2,rep,name=improvements,proto3" json:"improvements,omitempty"`
}

func (x *NewResponse) Reset() {
	*x = NewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewResponse) ProtoMessage() {}

func (x *NewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewResponse.ProtoReflect.Descriptor instead.
func (*NewResponse) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{6}
}

func (x *NewResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewResponse) GetImprovements() []*Improvement {
	if x != nil {
		return x.Improvements
	}
	return nil
}

type Improvement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Improvement) Reset() {
	*x = Improvement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Improvement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Improvement) ProtoMessage() {}

func (x *Improvement) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Improvement.ProtoReflect.Descriptor instead.
func (*Improvement) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{7}
}

func (x *Improvement) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Improvement) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type ResponseOk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseOk) Reset() {
	*x = ResponseOk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOk) ProtoMessage() {}

func (x *ResponseOk) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOk.ProtoReflect.Descriptor instead.
func (*ResponseOk) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{8}
}

func (x *ResponseOk) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ParamsApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId   int32  `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Email      string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone      string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	AppVersion string `protobuf:"bytes,5,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"`
	Rate       string `protobuf:"bytes,6,opt,name=rate,proto3" json:"rate,omitempty"`
	Comment    string `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	DeviceId   string `protobuf:"bytes,8,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Platform   string `protobuf:"bytes,9,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ParamsApp) Reset() {
	*x = ParamsApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsApp) ProtoMessage() {}

func (x *ParamsApp) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsApp.ProtoReflect.Descriptor instead.
func (*ParamsApp) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{9}
}

func (x *ParamsApp) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ParamsApp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ParamsApp) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ParamsApp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ParamsApp) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ParamsApp) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *ParamsApp) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ParamsApp) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ParamsApp) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type ParamsStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId int32   `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Rate     string  `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Reasons  []int32 `protobuf:"varint,3,rep,packed,name=reasons,proto3" json:"reasons,omitempty"`
	Comment  string  `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	StoreId  int32   `protobuf:"varint,5,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	DeviceId string  `protobuf:"bytes,6,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Platform string  `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ParamsStore) Reset() {
	*x = ParamsStore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsStore) ProtoMessage() {}

func (x *ParamsStore) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsStore.ProtoReflect.Descriptor instead.
func (*ParamsStore) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{10}
}

func (x *ParamsStore) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ParamsStore) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *ParamsStore) GetReasons() []int32 {
	if x != nil {
		return x.Reasons
	}
	return nil
}

func (x *ParamsStore) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ParamsStore) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ParamsStore) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ParamsStore) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type ParamsOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId  string  `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Rate     string  `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	Reasons  []int32 `protobuf:"varint,3,rep,packed,name=reasons,proto3" json:"reasons,omitempty"`
	Comment  string  `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	StoreId  int32   `protobuf:"varint,5,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	DeviceId string  `protobuf:"bytes,6,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Platform string  `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *ParamsOrder) Reset() {
	*x = ParamsOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsOrder) ProtoMessage() {}

func (x *ParamsOrder) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsOrder.ProtoReflect.Descriptor instead.
func (*ParamsOrder) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{11}
}

func (x *ParamsOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ParamsOrder) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *ParamsOrder) GetReasons() []int32 {
	if x != nil {
		return x.Reasons
	}
	return nil
}

func (x *ParamsOrder) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *ParamsOrder) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *ParamsOrder) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ParamsOrder) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type Reason struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	CategoryId int32  `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *Reason) Reset() {
	*x = Reason{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reason) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reason) ProtoMessage() {}

func (x *Reason) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reason.ProtoReflect.Descriptor instead.
func (*Reason) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{12}
}

func (x *Reason) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Reason) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Reason) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{13}
}

func (x *Category) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type RequestChoices struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId int32 `protobuf:"varint,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
}

func (x *RequestChoices) Reset() {
	*x = RequestChoices{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestChoices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestChoices) ProtoMessage() {}

func (x *RequestChoices) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestChoices.ProtoReflect.Descriptor instead.
func (*RequestChoices) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{14}
}

func (x *RequestChoices) GetCategoryId() int32 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

type ResponseReasons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*Reason `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ResponseReasons) Reset() {
	*x = ResponseReasons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseReasons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseReasons) ProtoMessage() {}

func (x *ResponseReasons) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseReasons.ProtoReflect.Descriptor instead.
func (*ResponseReasons) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{15}
}

func (x *ResponseReasons) GetResult() []*Reason {
	if x != nil {
		return x.Result
	}
	return nil
}

type ResponseCategories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []*Category `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ResponseCategories) Reset() {
	*x = ResponseCategories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCategories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCategories) ProtoMessage() {}

func (x *ResponseCategories) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCategories.ProtoReflect.Descriptor instead.
func (*ResponseCategories) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{16}
}

func (x *ResponseCategories) GetResult() []*Category {
	if x != nil {
		return x.Result
	}
	return nil
}

type ParamsReasonsByOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId   string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	StoreCode int32  `protobuf:"varint,2,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
}

func (x *ParamsReasonsByOrder) Reset() {
	*x = ParamsReasonsByOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsReasonsByOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsReasonsByOrder) ProtoMessage() {}

func (x *ParamsReasonsByOrder) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsReasonsByOrder.ProtoReflect.Descriptor instead.
func (*ParamsReasonsByOrder) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{17}
}

func (x *ParamsReasonsByOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ParamsReasonsByOrder) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

type NewOrderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId   int32  `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	OrderDate string `protobuf:"bytes,2,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	OrderId   string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Rate      int32  `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`
	Channel   string `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel,omitempty"`
	Company   string `protobuf:"bytes,6,opt,name=company,proto3" json:"company,omitempty"`
	Source    string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	Type      string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	Template  string `protobuf:"bytes,9,opt,name=template,proto3" json:"template,omitempty"`
}

func (x *NewOrderParams) Reset() {
	*x = NewOrderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderParams) ProtoMessage() {}

func (x *NewOrderParams) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderParams.ProtoReflect.Descriptor instead.
func (*NewOrderParams) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{18}
}

func (x *NewOrderParams) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *NewOrderParams) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *NewOrderParams) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *NewOrderParams) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *NewOrderParams) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *NewOrderParams) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *NewOrderParams) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *NewOrderParams) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *NewOrderParams) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

type NewOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Improvements []*Improvement `protobuf:"bytes,2,rep,name=improvements,proto3" json:"improvements,omitempty"`
}

func (x *NewOrderResponse) Reset() {
	*x = NewOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderResponse) ProtoMessage() {}

func (x *NewOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderResponse.ProtoReflect.Descriptor instead.
func (*NewOrderResponse) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{19}
}

func (x *NewOrderResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NewOrderResponse) GetImprovements() []*Improvement {
	if x != nil {
		return x.Improvements
	}
	return nil
}

type PatchOrderParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StoreId      int32   `protobuf:"varint,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	OrderDate    string  `protobuf:"bytes,3,opt,name=order_date,json=orderDate,proto3" json:"order_date,omitempty"`
	OrderId      string  `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Rate         int32   `protobuf:"varint,5,opt,name=rate,proto3" json:"rate,omitempty"`
	Improvements []int32 `protobuf:"varint,6,rep,packed,name=improvements,proto3" json:"improvements,omitempty"`
	Comment      string  `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	Contact      string  `protobuf:"bytes,8,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *PatchOrderParams) Reset() {
	*x = PatchOrderParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_feedbacks_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchOrderParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchOrderParams) ProtoMessage() {}

func (x *PatchOrderParams) ProtoReflect() protoreflect.Message {
	mi := &file_feedbacks_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchOrderParams.ProtoReflect.Descriptor instead.
func (*PatchOrderParams) Descriptor() ([]byte, []int) {
	return file_feedbacks_proto_rawDescGZIP(), []int{20}
}

func (x *PatchOrderParams) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PatchOrderParams) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *PatchOrderParams) GetOrderDate() string {
	if x != nil {
		return x.OrderDate
	}
	return ""
}

func (x *PatchOrderParams) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PatchOrderParams) GetRate() int32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *PatchOrderParams) GetImprovements() []int32 {
	if x != nil {
		return x.Improvements
	}
	return nil
}

func (x *PatchOrderParams) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *PatchOrderParams) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

var File_feedbacks_proto protoreflect.FileDescriptor

var file_feedbacks_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x0f, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4e, 0x50, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xad, 0x01, 0x0a,
	0x0c, 0x4e, 0x65, 0x77, 0x4e, 0x50, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x20, 0x0a, 0x0e,
	0x4e, 0x65, 0x77, 0x4e, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d,
	0x0a, 0x10, 0x43, 0x61, 0x6e, 0x42, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd4, 0x01,
	0x0a, 0x0b, 0x50, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x22, 0x6a, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x22, 0x59, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x3a, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x73, 0x2e, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x69,
	0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x33, 0x0a, 0x0b, 0x49,
	0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x22, 0x1c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0xf0,
	0x01, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x41, 0x70, 0x70, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x22, 0xc6, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0xc4, 0x01, 0x0a, 0x0b, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x22, 0x4f, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x22, 0x30, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x31, 0x0a, 0x0e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x22, 0x3c, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x41, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x0e, 0x4e,
	0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x22, 0x5e, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x49, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x72, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0c, 0x69, 0x6d, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x32, 0xd6, 0x03, 0x0a, 0x06, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x12, 0x14, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x41, 0x70, 0x70,
	0x1a, 0x15, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x6b, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x16, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x1a, 0x15, 0x2e, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f,
	0x6b, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x6b, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x0a, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x42,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73,
	0x42, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x1a, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x0a, 0x43, 0x61, 0x6e, 0x42, 0x65, 0x53, 0x61, 0x76, 0x65, 0x64, 0x12, 0x1b, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x42, 0x65, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x6b, 0x22,
	0x00, 0x32, 0x82, 0x02, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x4e,
	0x65, 0x77, 0x12, 0x14, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x4e,
	0x65, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x38, 0x0a, 0x05, 0x50, 0x61, 0x74, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x50, 0x61, 0x74, 0x63, 0x68, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x6b, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x08,
	0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e,
	0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0a, 0x50, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1b, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x15, 0x2e,
	0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4f, 0x6b, 0x22, 0x00, 0x32, 0x81, 0x01, 0x0a, 0x03, 0x4e, 0x50, 0x53, 0x12, 0x3b,
	0x0a, 0x03, 0x4e, 0x65, 0x77, 0x12, 0x17, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x73, 0x2e, 0x4e, 0x65, 0x77, 0x4e, 0x50, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x19,
	0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x4e, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x50, 0x53, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x15, 0x2e, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x6b, 0x22, 0x00, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x6f,
	0x2f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_feedbacks_proto_rawDescOnce sync.Once
	file_feedbacks_proto_rawDescData = file_feedbacks_proto_rawDesc
)

func file_feedbacks_proto_rawDescGZIP() []byte {
	file_feedbacks_proto_rawDescOnce.Do(func() {
		file_feedbacks_proto_rawDescData = protoimpl.X.CompressGZIP(file_feedbacks_proto_rawDescData)
	})
	return file_feedbacks_proto_rawDescData
}

var file_feedbacks_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_feedbacks_proto_goTypes = []interface{}{
	(*UpdateNPSParams)(nil),      // 0: feedbacks.UpdateNPSParams
	(*NewNPSParams)(nil),         // 1: feedbacks.NewNPSParams
	(*NewNpsResponse)(nil),       // 2: feedbacks.NewNpsResponse
	(*CanBeSavedParams)(nil),     // 3: feedbacks.CanBeSavedParams
	(*PatchParams)(nil),          // 4: feedbacks.PatchParams
	(*NewParams)(nil),            // 5: feedbacks.NewParams
	(*NewResponse)(nil),          // 6: feedbacks.NewResponse
	(*Improvement)(nil),          // 7: feedbacks.Improvement
	(*ResponseOk)(nil),           // 8: feedbacks.ResponseOk
	(*ParamsApp)(nil),            // 9: feedbacks.ParamsApp
	(*ParamsStore)(nil),          // 10: feedbacks.ParamsStore
	(*ParamsOrder)(nil),          // 11: feedbacks.ParamsOrder
	(*Reason)(nil),               // 12: feedbacks.Reason
	(*Category)(nil),             // 13: feedbacks.Category
	(*RequestChoices)(nil),       // 14: feedbacks.RequestChoices
	(*ResponseReasons)(nil),      // 15: feedbacks.ResponseReasons
	(*ResponseCategories)(nil),   // 16: feedbacks.ResponseCategories
	(*ParamsReasonsByOrder)(nil), // 17: feedbacks.ParamsReasonsByOrder
	(*NewOrderParams)(nil),       // 18: feedbacks.NewOrderParams
	(*NewOrderResponse)(nil),     // 19: feedbacks.NewOrderResponse
	(*PatchOrderParams)(nil),     // 20: feedbacks.PatchOrderParams
	(*emptypb.Empty)(nil),        // 21: google.protobuf.Empty
}
var file_feedbacks_proto_depIdxs = []int32{
	7,  // 0: feedbacks.NewResponse.improvements:type_name -> feedbacks.Improvement
	12, // 1: feedbacks.ResponseReasons.result:type_name -> feedbacks.Reason
	13, // 2: feedbacks.ResponseCategories.result:type_name -> feedbacks.Category
	7,  // 3: feedbacks.NewOrderResponse.improvements:type_name -> feedbacks.Improvement
	9,  // 4: feedbacks.Mobile.App:input_type -> feedbacks.ParamsApp
	10, // 5: feedbacks.Mobile.Store:input_type -> feedbacks.ParamsStore
	11, // 6: feedbacks.Mobile.Order:input_type -> feedbacks.ParamsOrder
	21, // 7: feedbacks.Mobile.Categories:input_type -> google.protobuf.Empty
	17, // 8: feedbacks.Mobile.ReasonsByOrder:input_type -> feedbacks.ParamsReasonsByOrder
	21, // 9: feedbacks.Mobile.ReasonsByStore:input_type -> google.protobuf.Empty
	3,  // 10: feedbacks.Mobile.CanBeSaved:input_type -> feedbacks.CanBeSavedParams
	5,  // 11: feedbacks.Store.New:input_type -> feedbacks.NewParams
	4,  // 12: feedbacks.Store.Patch:input_type -> feedbacks.PatchParams
	18, // 13: feedbacks.Store.NewOrder:input_type -> feedbacks.NewOrderParams
	20, // 14: feedbacks.Store.PatchOrder:input_type -> feedbacks.PatchOrderParams
	1,  // 15: feedbacks.NPS.New:input_type -> feedbacks.NewNPSParams
	0,  // 16: feedbacks.NPS.Update:input_type -> feedbacks.UpdateNPSParams
	8,  // 17: feedbacks.Mobile.App:output_type -> feedbacks.ResponseOk
	8,  // 18: feedbacks.Mobile.Store:output_type -> feedbacks.ResponseOk
	8,  // 19: feedbacks.Mobile.Order:output_type -> feedbacks.ResponseOk
	16, // 20: feedbacks.Mobile.Categories:output_type -> feedbacks.ResponseCategories
	15, // 21: feedbacks.Mobile.ReasonsByOrder:output_type -> feedbacks.ResponseReasons
	15, // 22: feedbacks.Mobile.ReasonsByStore:output_type -> feedbacks.ResponseReasons
	8,  // 23: feedbacks.Mobile.CanBeSaved:output_type -> feedbacks.ResponseOk
	6,  // 24: feedbacks.Store.New:output_type -> feedbacks.NewResponse
	8,  // 25: feedbacks.Store.Patch:output_type -> feedbacks.ResponseOk
	19, // 26: feedbacks.Store.NewOrder:output_type -> feedbacks.NewOrderResponse
	8,  // 27: feedbacks.Store.PatchOrder:output_type -> feedbacks.ResponseOk
	2,  // 28: feedbacks.NPS.New:output_type -> feedbacks.NewNpsResponse
	8,  // 29: feedbacks.NPS.Update:output_type -> feedbacks.ResponseOk
	17, // [17:30] is the sub-list for method output_type
	4,  // [4:17] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_feedbacks_proto_init() }
func file_feedbacks_proto_init() {
	if File_feedbacks_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_feedbacks_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNPSParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewNPSParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewNpsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CanBeSavedParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Improvement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsStore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reason); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestChoices); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseReasons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCategories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsReasonsByOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_feedbacks_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchOrderParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_feedbacks_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_feedbacks_proto_goTypes,
		DependencyIndexes: file_feedbacks_proto_depIdxs,
		MessageInfos:      file_feedbacks_proto_msgTypes,
	}.Build()
	File_feedbacks_proto = out.File
	file_feedbacks_proto_rawDesc = nil
	file_feedbacks_proto_goTypes = nil
	file_feedbacks_proto_depIdxs = nil
}
