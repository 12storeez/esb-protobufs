// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.9
// source: proto/mercaux.proto

package mercaux

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{0}
}

func (x *ListRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ListCatalogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Catalog `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListCatalogResponse) Reset() {
	*x = ListCatalogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCatalogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCatalogResponse) ProtoMessage() {}

func (x *ListCatalogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCatalogResponse.ProtoReflect.Descriptor instead.
func (*ListCatalogResponse) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{1}
}

func (x *ListCatalogResponse) GetResults() []*Catalog {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListCatalogResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ListStocksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Stock `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32    `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListStocksResponse) Reset() {
	*x = ListStocksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStocksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStocksResponse) ProtoMessage() {}

func (x *ListStocksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStocksResponse.ProtoReflect.Descriptor instead.
func (*ListStocksResponse) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{2}
}

func (x *ListStocksResponse) GetResults() []*Stock {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListStocksResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Catalog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Barcode               int64       `protobuf:"varint,1,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Category              string      `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Family                string      `protobuf:"bytes,3,opt,name=family,proto3" json:"family,omitempty"`
	ProductName           string      `protobuf:"bytes,4,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	Url                   string      `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	IsActive              bool        `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Article               string      `protobuf:"bytes,7,opt,name=article,proto3" json:"article,omitempty"`
	Size                  string      `protobuf:"bytes,8,opt,name=size,proto3" json:"size,omitempty"`
	Color                 string      `protobuf:"bytes,9,opt,name=color,proto3" json:"color,omitempty"`
	Fabric                string      `protobuf:"bytes,10,opt,name=fabric,proto3" json:"fabric,omitempty"`
	SuperModelName        string      `protobuf:"bytes,11,opt,name=super_model_name,json=superModelName,proto3" json:"super_model_name,omitempty"`
	Gender                string      `protobuf:"bytes,12,opt,name=gender,proto3" json:"gender,omitempty"`
	Sizes                 []string    `protobuf:"bytes,13,rep,name=sizes,proto3" json:"sizes,omitempty"`
	BarcodeAlt            []string    `protobuf:"bytes,14,rep,name=barcode_alt,json=barcodeAlt,proto3" json:"barcode_alt,omitempty"`
	TotalLook             []string    `protobuf:"bytes,15,rep,name=total_look,json=totalLook,proto3" json:"total_look,omitempty"`
	Description           string      `protobuf:"bytes,16,opt,name=description,proto3" json:"description,omitempty"`
	Images                []string    `protobuf:"bytes,17,rep,name=images,proto3" json:"images,omitempty"`
	SiteCategory          []*Category `protobuf:"bytes,18,rep,name=site_category,json=siteCategory,proto3" json:"site_category,omitempty"`
	SizeDescription       string      `protobuf:"bytes,19,opt,name=size_description,json=sizeDescription,proto3" json:"size_description,omitempty"`
	Alternatives          []string    `protobuf:"bytes,20,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	Video                 string      `protobuf:"bytes,21,opt,name=video,proto3" json:"video,omitempty"`
	Instashop             []string    `protobuf:"bytes,22,rep,name=instashop,proto3" json:"instashop,omitempty"`
	Preview               string      `protobuf:"bytes,23,opt,name=preview,proto3" json:"preview,omitempty"`
	Capsules              *Capsules   `protobuf:"bytes,24,opt,name=capsules,proto3" json:"capsules,omitempty"`
	IsSampleSale          bool        `protobuf:"varint,25,opt,name=is_sample_sale,json=isSampleSale,proto3" json:"is_sample_sale,omitempty"`
	IsEcological          bool        `protobuf:"varint,26,opt,name=is_ecological,json=isEcological,proto3" json:"is_ecological,omitempty"`
	SuperModelMergingCode string      `protobuf:"bytes,27,opt,name=super_model_merging_code,json=superModelMergingCode,proto3" json:"super_model_merging_code,omitempty"`
	PillingGrade          string      `protobuf:"bytes,28,opt,name=pilling_grade,json=pillingGrade,proto3" json:"pilling_grade,omitempty"`
	IsLowQuality          bool        `protobuf:"varint,29,opt,name=is_low_quality,json=isLowQuality,proto3" json:"is_low_quality,omitempty"`
}

func (x *Catalog) Reset() {
	*x = Catalog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Catalog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Catalog) ProtoMessage() {}

func (x *Catalog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Catalog.ProtoReflect.Descriptor instead.
func (*Catalog) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{3}
}

func (x *Catalog) GetBarcode() int64 {
	if x != nil {
		return x.Barcode
	}
	return 0
}

func (x *Catalog) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Catalog) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *Catalog) GetProductName() string {
	if x != nil {
		return x.ProductName
	}
	return ""
}

func (x *Catalog) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Catalog) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Catalog) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

func (x *Catalog) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *Catalog) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Catalog) GetFabric() string {
	if x != nil {
		return x.Fabric
	}
	return ""
}

func (x *Catalog) GetSuperModelName() string {
	if x != nil {
		return x.SuperModelName
	}
	return ""
}

func (x *Catalog) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Catalog) GetSizes() []string {
	if x != nil {
		return x.Sizes
	}
	return nil
}

func (x *Catalog) GetBarcodeAlt() []string {
	if x != nil {
		return x.BarcodeAlt
	}
	return nil
}

func (x *Catalog) GetTotalLook() []string {
	if x != nil {
		return x.TotalLook
	}
	return nil
}

func (x *Catalog) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Catalog) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Catalog) GetSiteCategory() []*Category {
	if x != nil {
		return x.SiteCategory
	}
	return nil
}

func (x *Catalog) GetSizeDescription() string {
	if x != nil {
		return x.SizeDescription
	}
	return ""
}

func (x *Catalog) GetAlternatives() []string {
	if x != nil {
		return x.Alternatives
	}
	return nil
}

func (x *Catalog) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *Catalog) GetInstashop() []string {
	if x != nil {
		return x.Instashop
	}
	return nil
}

func (x *Catalog) GetPreview() string {
	if x != nil {
		return x.Preview
	}
	return ""
}

func (x *Catalog) GetCapsules() *Capsules {
	if x != nil {
		return x.Capsules
	}
	return nil
}

func (x *Catalog) GetIsSampleSale() bool {
	if x != nil {
		return x.IsSampleSale
	}
	return false
}

func (x *Catalog) GetIsEcological() bool {
	if x != nil {
		return x.IsEcological
	}
	return false
}

func (x *Catalog) GetSuperModelMergingCode() string {
	if x != nil {
		return x.SuperModelMergingCode
	}
	return ""
}

func (x *Catalog) GetPillingGrade() string {
	if x != nil {
		return x.PillingGrade
	}
	return ""
}

func (x *Catalog) GetIsLowQuality() bool {
	if x != nil {
		return x.IsLowQuality
	}
	return false
}

type Stock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Barcode  int64       `protobuf:"varint,1,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Country  string      `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Quantity []*Quantity `protobuf:"bytes,3,rep,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *Stock) Reset() {
	*x = Stock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{4}
}

func (x *Stock) GetBarcode() int64 {
	if x != nil {
		return x.Barcode
	}
	return 0
}

func (x *Stock) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Stock) GetQuantity() []*Quantity {
	if x != nil {
		return x.Quantity
	}
	return nil
}

type Capsules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ParentSeason string `protobuf:"bytes,3,opt,name=parent_season,json=parentSeason,proto3" json:"parent_season,omitempty"`
}

func (x *Capsules) Reset() {
	*x = Capsules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capsules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capsules) ProtoMessage() {}

func (x *Capsules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capsules.ProtoReflect.Descriptor instead.
func (*Capsules) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{5}
}

func (x *Capsules) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Capsules) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Capsules) GetParentSeason() string {
	if x != nil {
		return x.ParentSeason
	}
	return ""
}

type Category struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug  string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *Category) Reset() {
	*x = Category{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Category) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Category) ProtoMessage() {}

func (x *Category) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Category.ProtoReflect.Descriptor instead.
func (*Category) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{6}
}

func (x *Category) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Category) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Category) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type Quantity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId             int32      `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Available           int32      `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Reserved            int32      `protobuf:"varint,3,opt,name=reserved,proto3" json:"reserved,omitempty"`
	Discount            int32      `protobuf:"varint,4,opt,name=discount,proto3" json:"discount,omitempty"`
	Price               int32      `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	PriceBeforeDiscount int32      `protobuf:"varint,6,opt,name=price_before_discount,json=priceBeforeDiscount,proto3" json:"price_before_discount,omitempty"`
	StoreRoom           *StoreRoom `protobuf:"bytes,7,opt,name=store_room,json=storeRoom,proto3" json:"store_room,omitempty"`
}

func (x *Quantity) Reset() {
	*x = Quantity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Quantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quantity) ProtoMessage() {}

func (x *Quantity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quantity.ProtoReflect.Descriptor instead.
func (*Quantity) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{7}
}

func (x *Quantity) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *Quantity) GetAvailable() int32 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *Quantity) GetReserved() int32 {
	if x != nil {
		return x.Reserved
	}
	return 0
}

func (x *Quantity) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *Quantity) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Quantity) GetPriceBeforeDiscount() int32 {
	if x != nil {
		return x.PriceBeforeDiscount
	}
	return 0
}

func (x *Quantity) GetStoreRoom() *StoreRoom {
	if x != nil {
		return x.StoreRoom
	}
	return nil
}

type ListStoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok     bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Stores []*Store `protobuf:"bytes,2,rep,name=stores,proto3" json:"stores,omitempty"`
}

func (x *ListStoresResponse) Reset() {
	*x = ListStoresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoresResponse) ProtoMessage() {}

func (x *ListStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoresResponse.ProtoReflect.Descriptor instead.
func (*ListStoresResponse) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{8}
}

func (x *ListStoresResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ListStoresResponse) GetStores() []*Store {
	if x != nil {
		return x.Stores
	}
	return nil
}

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId    int32  `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	ShortTitle string `protobuf:"bytes,2,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Address    string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Phone      string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Geo        string `protobuf:"bytes,5,opt,name=geo,proto3" json:"geo,omitempty"`
	City       string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Country    string `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Active     bool   `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{9}
}

func (x *Store) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *Store) GetShortTitle() string {
	if x != nil {
		return x.ShortTitle
	}
	return ""
}

func (x *Store) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Store) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Store) GetGeo() string {
	if x != nil {
		return x.Geo
	}
	return ""
}

func (x *Store) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Store) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Store) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

type ListSellersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool      `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Sellers []*Seller `protobuf:"bytes,2,rep,name=sellers,proto3" json:"sellers,omitempty"`
}

func (x *ListSellersResponse) Reset() {
	*x = ListSellersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSellersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSellersResponse) ProtoMessage() {}

func (x *ListSellersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSellersResponse.ProtoReflect.Descriptor instead.
func (*ListSellersResponse) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{10}
}

func (x *ListSellersResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ListSellersResponse) GetSellers() []*Seller {
	if x != nil {
		return x.Sellers
	}
	return nil
}

type Seller struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId    int32  `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	SellerId   string `protobuf:"bytes,2,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	SellerName string `protobuf:"bytes,3,opt,name=seller_name,json=sellerName,proto3" json:"seller_name,omitempty"`
}

func (x *Seller) Reset() {
	*x = Seller{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Seller) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Seller) ProtoMessage() {}

func (x *Seller) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Seller.ProtoReflect.Descriptor instead.
func (*Seller) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{11}
}

func (x *Seller) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *Seller) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

func (x *Seller) GetSellerName() string {
	if x != nil {
		return x.SellerName
	}
	return ""
}

type NewOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order    *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Source   string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	SellerId string `protobuf:"bytes,3,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
}

func (x *NewOrderRequest) Reset() {
	*x = NewOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderRequest) ProtoMessage() {}

func (x *NewOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderRequest.ProtoReflect.Descriptor instead.
func (*NewOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{12}
}

func (x *NewOrderRequest) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *NewOrderRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *NewOrderRequest) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastName  string       `protobuf:"bytes,1,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstName string       `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	Phone     string       `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email     string       `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	StoreId   int32        `protobuf:"varint,5,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Items     []*OrderItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{13}
}

func (x *Order) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Order) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Order) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Order) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Order) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *Order) GetItems() []*OrderItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type OrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Quantity int32   `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price    float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *OrderItem) Reset() {
	*x = OrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderItem) ProtoMessage() {}

func (x *OrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderItem.ProtoReflect.Descriptor instead.
func (*OrderItem) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{14}
}

func (x *OrderItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *OrderItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *OrderItem) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

type NewOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok      bool          `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	OrderId string        `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Errors  []*OrderError `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *NewOrderResponse) Reset() {
	*x = NewOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewOrderResponse) ProtoMessage() {}

func (x *NewOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewOrderResponse.ProtoReflect.Descriptor instead.
func (*NewOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{15}
}

func (x *NewOrderResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *NewOrderResponse) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *NewOrderResponse) GetErrors() []*OrderError {
	if x != nil {
		return x.Errors
	}
	return nil
}

type OrderError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code              int32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message           string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Price             float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	AvailableQuantity int32   `protobuf:"varint,4,opt,name=available_quantity,json=availableQuantity,proto3" json:"available_quantity,omitempty"`
	Barcode           string  `protobuf:"bytes,5,opt,name=barcode,proto3" json:"barcode,omitempty"`
}

func (x *OrderError) Reset() {
	*x = OrderError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderError) ProtoMessage() {}

func (x *OrderError) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderError.ProtoReflect.Descriptor instead.
func (*OrderError) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{16}
}

func (x *OrderError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *OrderError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *OrderError) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderError) GetAvailableQuantity() int32 {
	if x != nil {
		return x.AvailableQuantity
	}
	return 0
}

func (x *OrderError) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

type StoreRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreId string `protobuf:"bytes,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	RM      int32  `protobuf:"varint,2,opt,name=RM,proto3" json:"RM,omitempty"`
	ST      int32  `protobuf:"varint,3,opt,name=ST,proto3" json:"ST,omitempty"`
	SH      int32  `protobuf:"varint,4,opt,name=SH,proto3" json:"SH,omitempty"`
}

func (x *StoreRoom) Reset() {
	*x = StoreRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mercaux_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRoom) ProtoMessage() {}

func (x *StoreRoom) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mercaux_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRoom.ProtoReflect.Descriptor instead.
func (*StoreRoom) Descriptor() ([]byte, []int) {
	return file_proto_mercaux_proto_rawDescGZIP(), []int{17}
}

func (x *StoreRoom) GetStoreId() string {
	if x != nil {
		return x.StoreId
	}
	return ""
}

func (x *StoreRoom) GetRM() int32 {
	if x != nil {
		return x.RM
	}
	return 0
}

func (x *StoreRoom) GetST() int32 {
	if x != nil {
		return x.ST
	}
	return 0
}

func (x *StoreRoom) GetSH() int32 {
	if x != nil {
		return x.SH
	}
	return 0
}

var File_proto_mercaux_proto protoreflect.FileDescriptor

var file_proto_mercaux_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3b, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x57, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x54, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xaa, 0x07, 0x0a, 0x07, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x28, 0x0a,
	0x10, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x73, 0x69, 0x7a, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x61, 0x6c, 0x74, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x41, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x6c, 0x6f, 0x6f, 0x6b, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x4c, 0x6f, 0x6f, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x36, 0x0a, 0x0d, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78,
	0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0c, 0x73, 0x69, 0x74, 0x65, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x73, 0x69, 0x7a, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x16, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x73,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78,
	0x2e, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x08, 0x63, 0x61, 0x70, 0x73, 0x75,
	0x6c, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x65, 0x63, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x45, 0x63, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x37,
	0x0a, 0x18, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x6d, 0x65,
	0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x73, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d, 0x65, 0x72, 0x67,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x69, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x72, 0x61, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x77, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x4c, 0x6f, 0x77, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x22, 0x6a, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x62,
	0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x2d, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e, 0x51, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x55,
	0x0a, 0x08, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x44, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6c, 0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xf8, 0x01, 0x0a, 0x08,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x32, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x6f, 0x6f,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75,
	0x78, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x09, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x4c, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x26, 0x0a, 0x06,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x65,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x65, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x22, 0x50, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x61, 0x75, 0x78, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x07, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x73, 0x22, 0x61, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x61, 0x75, 0x78, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x6a, 0x0a, 0x10, 0x4e,
	0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x61, 0x75, 0x78, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x56, 0x0a, 0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x52,
	0x4d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x52, 0x4d, 0x12, 0x0e, 0x0a, 0x02, 0x53,
	0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x53, 0x54, 0x12, 0x0e, 0x0a, 0x02, 0x53,
	0x48, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x53, 0x48, 0x32, 0x62, 0x0a, 0x0d, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x65, 0x72,
	0x63, 0x61, 0x75, 0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12,
	0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x32,
	0x65, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x53, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x72, 0x63,
	0x61, 0x75, 0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61,
	0x74, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x32, 0x64, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1b, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75,
	0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x32, 0x67, 0x0a, 0x0e,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c,
	0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x6c, 0x6c, 0x65, 0x72, 0x73, 0x32, 0x65, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a, 0x03, 0x4e, 0x65, 0x77, 0x12, 0x18, 0x2e,
	0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75,
	0x78, 0x2e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x0c, 0x5a, 0x0a,
	0x67, 0x6f, 0x2f, 0x6d, 0x65, 0x72, 0x63, 0x61, 0x75, 0x78, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_proto_mercaux_proto_rawDescOnce sync.Once
	file_proto_mercaux_proto_rawDescData = file_proto_mercaux_proto_rawDesc
)

func file_proto_mercaux_proto_rawDescGZIP() []byte {
	file_proto_mercaux_proto_rawDescOnce.Do(func() {
		file_proto_mercaux_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mercaux_proto_rawDescData)
	})
	return file_proto_mercaux_proto_rawDescData
}

var file_proto_mercaux_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_proto_mercaux_proto_goTypes = []interface{}{
	(*ListRequest)(nil),         // 0: mercaux.ListRequest
	(*ListCatalogResponse)(nil), // 1: mercaux.ListCatalogResponse
	(*ListStocksResponse)(nil),  // 2: mercaux.ListStocksResponse
	(*Catalog)(nil),             // 3: mercaux.Catalog
	(*Stock)(nil),               // 4: mercaux.Stock
	(*Capsules)(nil),            // 5: mercaux.Capsules
	(*Category)(nil),            // 6: mercaux.Category
	(*Quantity)(nil),            // 7: mercaux.Quantity
	(*ListStoresResponse)(nil),  // 8: mercaux.ListStoresResponse
	(*Store)(nil),               // 9: mercaux.Store
	(*ListSellersResponse)(nil), // 10: mercaux.ListSellersResponse
	(*Seller)(nil),              // 11: mercaux.Seller
	(*NewOrderRequest)(nil),     // 12: mercaux.NewOrderRequest
	(*Order)(nil),               // 13: mercaux.Order
	(*OrderItem)(nil),           // 14: mercaux.OrderItem
	(*NewOrderResponse)(nil),    // 15: mercaux.NewOrderResponse
	(*OrderError)(nil),          // 16: mercaux.OrderError
	(*StoreRoom)(nil),           // 17: mercaux.StoreRoom
	(*emptypb.Empty)(nil),       // 18: google.protobuf.Empty
}
var file_proto_mercaux_proto_depIdxs = []int32{
	3,  // 0: mercaux.ListCatalogResponse.results:type_name -> mercaux.Catalog
	4,  // 1: mercaux.ListStocksResponse.results:type_name -> mercaux.Stock
	6,  // 2: mercaux.Catalog.site_category:type_name -> mercaux.Category
	5,  // 3: mercaux.Catalog.capsules:type_name -> mercaux.Capsules
	7,  // 4: mercaux.Stock.quantity:type_name -> mercaux.Quantity
	17, // 5: mercaux.Quantity.store_room:type_name -> mercaux.StoreRoom
	9,  // 6: mercaux.ListStoresResponse.stores:type_name -> mercaux.Store
	11, // 7: mercaux.ListSellersResponse.sellers:type_name -> mercaux.Seller
	13, // 8: mercaux.NewOrderRequest.order:type_name -> mercaux.Order
	14, // 9: mercaux.Order.items:type_name -> mercaux.OrderItem
	16, // 10: mercaux.NewOrderResponse.errors:type_name -> mercaux.OrderError
	0,  // 11: mercaux.StocksService.List:input_type -> mercaux.ListRequest
	0,  // 12: mercaux.CatalogService.List:input_type -> mercaux.ListRequest
	18, // 13: mercaux.StoresService.List:input_type -> google.protobuf.Empty
	18, // 14: mercaux.SellersService.List:input_type -> google.protobuf.Empty
	12, // 15: mercaux.OrdersService.New:input_type -> mercaux.NewOrderRequest
	2,  // 16: mercaux.StocksService.List:output_type -> mercaux.ListStocksResponse
	1,  // 17: mercaux.CatalogService.List:output_type -> mercaux.ListCatalogResponse
	8,  // 18: mercaux.StoresService.List:output_type -> mercaux.ListStoresResponse
	10, // 19: mercaux.SellersService.List:output_type -> mercaux.ListSellersResponse
	15, // 20: mercaux.OrdersService.New:output_type -> mercaux.NewOrderResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_mercaux_proto_init() }
func file_proto_mercaux_proto_init() {
	if File_proto_mercaux_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_mercaux_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCatalogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStocksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Catalog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capsules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Category); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Quantity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSellersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Seller); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mercaux_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mercaux_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_proto_mercaux_proto_goTypes,
		DependencyIndexes: file_proto_mercaux_proto_depIdxs,
		MessageInfos:      file_proto_mercaux_proto_msgTypes,
	}.Build()
	File_proto_mercaux_proto = out.File
	file_proto_mercaux_proto_rawDesc = nil
	file_proto_mercaux_proto_goTypes = nil
	file_proto_mercaux_proto_depIdxs = nil
}
