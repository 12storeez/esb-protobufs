syntax = "proto3";

option go_package = "go/mindbox";

package mindbox;

service User {
    rpc Info (ParamsUser) returns (ResponseUser) {
    }
    rpc Orders (ParamsOrders) returns (ResponseOrders) {
    }
    rpc SendOSMICard (ParamsOSMICard) returns (ResponseOSMICard) {
    }
    rpc BonusesHistory (BonusesHistoryRequest) returns (BonusesHistoryResponse) {
    }
}

service Mobile {
    rpc InitDevice(InitDeviceParams) returns (InitDeviceResponse) {
    }
    rpc InitClient(InitClientParams) returns (InitClientResponse) {
    }
    rpc RemoveDevice(RemoveDeviceParams) returns (RemoveDeviceResponse) {
    }
    rpc Code (ParamsCode) returns (ResponseCode) {
    }
    rpc CheckCode (ParamsCheckCode) returns (ResponseCheckCode) {
    }
    rpc EditUser (ParamsEditUser) returns (ResponseEditUser) {
    }
    rpc IsUserExist (IsUserExistParams) returns (IsUserExistResponse) {
    }
    rpc PushClick(PushClickParams) returns (PushClickResponse) {
    }
}

service Order {
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
    }
    rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse) {
    }
    rpc GetOrderInfo(GetOrderInfoRequest) returns (GetOrderInfoResponse) {
    }
    rpc CalculateAuthorized(CalculateRequest) returns (CalculateResponse) {
    }
    rpc CalculateUnauthorized(CalculateRequest) returns (CalculateResponse) {
    }

}

message PushClickParams {
    string message_unique_key = 1;
    string button_unique_key = 2;
}

message PushClickResponse {
    bool ok = 1;
}

message IsUserExistParams {
    string mobile_phone = 1;
}

message IsUserExistResponse {
    bool ok = 1;
    string client_id = 2;
}

message InitDeviceParams {
    string device_id = 1;
    string apns_token = 2;
}

message InitDeviceResponse {
    bool ok = 1;
}

enum Platform {
    IOS = 0;
    ANDROID = 1;
}

message InitClientParams {
    string device_id = 1;
    string client_id = 2;
    Platform platform = 3;
}

message InitClientResponse {
    bool ok = 1;
}

message ParamsUser {
    string client_id = 1;
}
message ResponseUser {
    string first_name = 1;
    string last_name = 2;
    string email = 3;
    string phone = 4;
    int32 bonus_total = 5;
    int32 bonus_available = 6;
    int32 bonus_blocked = 7;
    int32 total_paid_amount = 8;
    NearestExpiration nearest_expiration = 9;
}

message NearestExpiration {
    int32 total = 1;
    string date = 2;
}

message ParamsOrders {
    string client_id = 1;
    string date_from = 2;
    string date_to = 3;
    int32  limit = 4;
    int32  page = 5;
}
message ResponseOrders {
    int32 total = 1;
    repeated ResponseOrderData result = 2;
}

message ResponseOrderData {
    string order_id = 1;
    string created_date = 2;
    string payment_type = 3;
    int32 discounted_total_price = 4;
    int32 payment_amount = 5;
    int32 applied_discount = 6;
    int32 acquired_balance_change = 7;
    int32 created_ts = 8;
    string available_from_date_time = 9;
    string balance_change_kind = 10;
    string balance_change_kind_system_name = 11;
    string expiration_date_time = 12;
}

message ParamsCode {
    string mobile_phone = 1;
    string device_id = 2;
    string ip = 3;
    string platform = 4;
    string version = 5;
}

message ResponseCode {
    bool  ok = 1;
    int64 timestamp = 2;
}

message ParamsCheckCode {
    string mobile_phone = 1;
    string code = 2;
}
message ResponseCheckCode {
    bool   ok = 1;
    string status = 2;
    string client_id = 3;
    int32  mindbox_id = 4;
}

message ParamsEditUser {
    string device_uuid = 1;
    string client_id = 2;
    string mobile_phone = 3;
}

message ResponseEditUser {
    bool ok = 1;
}

message ParamsOSMICard {
    string client_id = 1;
}

message ResponseOSMICard {
    bool ok = 1;
}

message RemoveDeviceParams {
    string device_id = 1;
}

message RemoveDeviceResponse {
    bool ok = 1;
}

message BonusesHistoryRequest {
    Pagination pagination = 1;
    Filters filters = 2;
    string site_id = 3;
}

message Pagination {
    int32 limit = 1;
    int32 offset = 2;
}

message Filters {
    string date_from = 1;
    string date_to = 2;
}

message BonusesHistoryResponse {
    string status = 1;
    string message = 2;
    int64 code = 3;
    repeated BonusesHistoryResponseData data = 4;
    repeated Error errors = 5;
}

message Error {
    string target = 1;
    int64 code = 2;
    string message = 3;
}

message BonusesHistoryResponseData {
    string order_id = 1;
    string created_datetime = 2;
    int32 acquired_balance_change = 3;
    string available_from_datetime = 4;
    string balance_change_kind = 5;
    string expiration_datetime = 6;
}

message CreateOrderRequest {
    string order_id = 1;
    optional string mindbox_user_id = 2;
    optional string site_user_id = 3;
    optional string store_code = 4;
    optional float total_price = 5;
    repeated PositionsCreateData positions = 6;
    repeated PaymentsCreateData payments = 7;
}

message PositionsCreateData {
    optional string id = 1;
    int64 quantity = 2;
    float price = 3;
    int64 sequence_number = 4;
    int64 status = 5;
    optional int64 line_id = 6;
}

message PaymentsCreateData {
    string type = 1;
    optional float amount = 2;
}

message CreateOrderResponse {
    string status = 1;
    string message = 2;
    CreateOrderResponseData data = 3;
    int64 code = 4;
    repeated Error errors = 5;
}

message CreateOrderResponseData {
    int64 mindbox_id = 1;
}

message UpdateOrderRequest {
    string order_id = 1;
    optional int64 order_mindbox_id = 2;
    optional string store_code = 3;
    optional string custom_fields = 4;
    repeated PositionsUpdateData positions = 5;
    optional string execution_datetime = 6;
    optional float total_price = 7;
}

message PositionsUpdateData {
    optional string id = 1;
    int64 quantity = 2;
    float discounted_price = 3;
    int64 status = 4;
    optional string custom_fields = 5;
}

message UpdateOrderResponse {
    string status = 1;
    string message = 2;
    int64 code = 3;
    repeated Error errors = 4;
}

message GetOrderInfoRequest {
    string order_id = 1;
}

message GetOrderInfoResponse {
    string status = 1;
    string message = 2;
    int64 code = 3;
    GetOrderInfoResponseData data = 4;
    repeated Error errors = 5;
}

message GetOrderInfoResponseData {
    string id = 1;
    int64 mindbox_id = 2;
    string create_datetime = 3;
    float delivery_cost = 4;
    float discounted_total_price = 5;
    string processing_status = 6;
    optional string custom_fields = 7;
    repeated GetOrderInfoAppliedPromotions applied_promotions = 8;
    repeated GetOrderInfoBonusesChanges bonuses_changes = 9;
    repeated GetOrderInfoPayments payments = 10;
    repeated GetOrderInfoPositions positions = 11;
}

message GetOrderInfoAppliedPromotions {
    string type = 1;
    float amount = 2;
    string promotion_name = 3;
    string promotion_type = 4;
    string promotion_id = 5;
    int64 promotion_mindbox_id = 6;
    string coupon_code = 7;
}

message GetOrderInfoBonusesChanges {
    float earned_amount = 1;
    float spent_amount = 2;
    string balance_type_name = 3;
    string balance_type_system_name = 4;
}

message GetOrderInfoPayments {
    string type = 1;
    float amount = 2;
}

message GetOrderInfoPositions {
    string id = 1;
    int64 quantity = 2;
    float price = 3;
    float discounted_price = 4;
    int64 sequence_number = 5;
    string status = 6;
    int64 line_id = 7;
    optional string custom_fields = 8;
    repeated GetOrderInfoAppliedPromotions applied_promotions = 9;
}

message CalculateRequest {
    optional string area_id = 1;
    optional int64 cashdesk_id = 2;
    optional float delivery_cost = 3;
    optional int64 mindbox_user_id = 4;
    optional string site_user_id = 5;
    optional string custom_fields = 6;
    repeated CalculateBonuses bonuses = 7;
    repeated CalculateCoupons coupons = 8;
    repeated CalculatePayments payments = 9;
    repeated CalculatePaymentsByGiftcard payments_by_giftcard = 10;
    repeated CalculateRequestedPromotions requested_promotions = 11;
    repeated CalculatePositions positions = 12;
}

message CalculateBonuses {
    float amount = 1;
    optional string balance_type_system_name = 2;
}

message CalculateCoupons {
    optional string code = 1;
}

message CalculatePayments {
    string type = 1;
    optional int64 card_hash = 2;
}

message CalculatePaymentsByGiftcard {
    string type = 1;
    string id = 2;
    optional int64 cvv = 3;
}

message CalculateRequestedPromotions {
    string id = 1;
    string type = 2;
    float amount = 3;
    optional string coupon_code = 4;
}

message CalculatePositions {
    optional string id = 1;
    int64 quantity = 2;
    float price = 3;
    optional int64 sequence_number = 4;
    int64 status = 5;
    optional int64 line_id = 6;
    optional string custom_fields = 7;
    repeated CalculateRequestedPromotions requested_promotions = 8;
}

message CalculateResponse {
    string status = 1;
    string message = 2;
    int64 code = 3;
    CalculateResponseData data = 4;
    repeated Error errors = 5;
}

message CalculateResponseData {
    int64 mindbox_id = 1;
    int64 mindbox_user_id = 2;
    string site_user_id = 3;
    float delivery_cost = 4;
    float discounted_total_price = 5;
    string processing_status = 6;
    string custom_fields = 7;
    CalculateResponseTotalBonuses total_bonuses = 8;
    repeated CalculateResponseAppliedPromotions applied_promotions = 9;
    repeated CalculateResponseBonusesChanges bonuses_changes = 10;
    repeated CalculateResponseBonusesInfo bonuses_info = 11;
    repeated CalculateResponseCoupons coupons = 12;
    repeated CalculateResponsePayments payments = 13;
    repeated CalculateResponsePlaceholders placeholders = 14;
    repeated CalculateResponsePositions positions = 15;
}

message CalculateResponseTotalBonuses {
    float available_for_order = 1;
    float spent_for_order = 2;
    string status = 3;
    float available = 4;
    float blocked = 5;
    float total = 6;
}

message CalculateResponseAppliedPromotions {
    string type = 1;
    float amount = 2;
    string promotion_name = 3;
    string promotion_type = 4;
    string promotion_id = 5;
    int64 promotion_mindbox_id = 6;
    string coupon_code = 7;
}

message CalculateResponseBonusesChanges {
    float earned_amount = 1;
    float spent_amount = 2;
    string balance_type_name = 3;
    string balance_type_system_name = 4;
}

message CalculateResponseBonusesInfo {
    float available_for_order = 1;
    float spent_for_order = 2;
    string status = 3;
    float available = 4;
    float blocked = 5;
    float total = 6;
    string balance_type_name = 7;
    string balance_type_system_name = 8;
}

message CalculateResponseCoupons {
    float discount_for_order = 1;
    string available_from = 2;
    string available_to = 3;
    string status = 4;
    string used_datetime = 5;
    string code = 6;
}

message CalculateResponsePayments {
    string type = 1;
    float available_amount_for_order = 2;
    CalculateResponseGiftcard giftcard = 3;
}

message CalculateResponseGiftcard {
    string id = 1;
    string status = 2;
    float available = 3;
    float total = 4;
    float used = 5;
}

message CalculateResponsePlaceholders {
    string id = 1;
    repeated CalculateResponseContent content = 2;
}

message CalculateResponseContent {
    string type = 1;
    oneof result {
        string message = 2;
        CalculateResponsePossibleDiscounts possible_discounts = 3;
    }
    string promotion_id = 4;
    int64 promotion_mindbox_id = 5;
    string promotion_name = 6;
    string promotion_type = 7;
}

message CalculateResponsePossibleDiscounts {
    int64 count = 1;
    float amount = 2;
    string type = 3;
    repeated CalculateResponseProduct products = 4;
}

message CalculateResponseProduct {
    string id = 1;
    int64 mindbox_id = 2;
}

message CalculateResponsePositions {
    string id = 1;
    int64 quantity = 2;
    float price = 3;
    float discounted_price = 4;
    int64 sequence_number = 5;
    string status = 6;
    int64 line_id = 7;
    string custom_fields = 8;
    repeated CalculateResponseAppliedPromotions applied_promotions = 9;
}
