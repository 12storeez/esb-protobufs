// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.9
// source: store_delivery_type.proto

package logistics

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoreDeliveryTypeId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StoreDeliveryTypeId) Reset() {
	*x = StoreDeliveryTypeId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreDeliveryTypeId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDeliveryTypeId) ProtoMessage() {}

func (x *StoreDeliveryTypeId) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDeliveryTypeId.ProtoReflect.Descriptor instead.
func (*StoreDeliveryTypeId) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{0}
}

func (x *StoreDeliveryTypeId) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateStoreDeliveryType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreCode              int32 `protobuf:"varint,1,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	PickupDeliveryTypeId   int32 `protobuf:"varint,2,opt,name=pickup_delivery_type_id,json=pickupDeliveryTypeId,proto3" json:"pickup_delivery_type_id,omitempty"`
	ShipmentDeliveryTypeId int32 `protobuf:"varint,3,opt,name=shipment_delivery_type_id,json=shipmentDeliveryTypeId,proto3" json:"shipment_delivery_type_id,omitempty"`
	MaxCells               int32 `protobuf:"varint,4,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
	IsActivePickup         bool  `protobuf:"varint,5,opt,name=is_active_pickup,json=isActivePickup,proto3" json:"is_active_pickup,omitempty"`
	IsActiveShipment       bool  `protobuf:"varint,6,opt,name=is_active_shipment,json=isActiveShipment,proto3" json:"is_active_shipment,omitempty"`
}

func (x *CreateStoreDeliveryType) Reset() {
	*x = CreateStoreDeliveryType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStoreDeliveryType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStoreDeliveryType) ProtoMessage() {}

func (x *CreateStoreDeliveryType) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStoreDeliveryType.ProtoReflect.Descriptor instead.
func (*CreateStoreDeliveryType) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{1}
}

func (x *CreateStoreDeliveryType) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *CreateStoreDeliveryType) GetPickupDeliveryTypeId() int32 {
	if x != nil {
		return x.PickupDeliveryTypeId
	}
	return 0
}

func (x *CreateStoreDeliveryType) GetShipmentDeliveryTypeId() int32 {
	if x != nil {
		return x.ShipmentDeliveryTypeId
	}
	return 0
}

func (x *CreateStoreDeliveryType) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

func (x *CreateStoreDeliveryType) GetIsActivePickup() bool {
	if x != nil {
		return x.IsActivePickup
	}
	return false
}

func (x *CreateStoreDeliveryType) GetIsActiveShipment() bool {
	if x != nil {
		return x.IsActiveShipment
	}
	return false
}

type ListStoreDeliveryTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	Sort   string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ListStoreDeliveryTypeRequest) Reset() {
	*x = ListStoreDeliveryTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoreDeliveryTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoreDeliveryTypeRequest) ProtoMessage() {}

func (x *ListStoreDeliveryTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoreDeliveryTypeRequest.ProtoReflect.Descriptor instead.
func (*ListStoreDeliveryTypeRequest) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{2}
}

func (x *ListStoreDeliveryTypeRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListStoreDeliveryTypeRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListStoreDeliveryTypeRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListStoreDeliveryTypeRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type ListStoreDeliveryTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*StoreDeliveryType `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32                `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListStoreDeliveryTypeResponse) Reset() {
	*x = ListStoreDeliveryTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStoreDeliveryTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoreDeliveryTypeResponse) ProtoMessage() {}

func (x *ListStoreDeliveryTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoreDeliveryTypeResponse.ProtoReflect.Descriptor instead.
func (*ListStoreDeliveryTypeResponse) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{3}
}

func (x *ListStoreDeliveryTypeResponse) GetResults() []*StoreDeliveryType {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListStoreDeliveryTypeResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type StoreDeliveryType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Store                 *Store             `protobuf:"bytes,2,opt,name=store,proto3" json:"store,omitempty"`
	DeliveryTypePickup    *DeliveryTypeShort `protobuf:"bytes,3,opt,name=delivery_type_pickup,json=deliveryTypePickup,proto3,oneof" json:"delivery_type_pickup,omitempty"`
	DeliveryTypeShipment  *DeliveryTypeShort `protobuf:"bytes,4,opt,name=delivery_type_shipment,json=deliveryTypeShipment,proto3,oneof" json:"delivery_type_shipment,omitempty"`
	MaxCells              int32              `protobuf:"varint,5,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
	BusyCells             int32              `protobuf:"varint,6,opt,name=busy_cells,json=busyCells,proto3" json:"busy_cells,omitempty"`
	FreeCells             int32              `protobuf:"varint,7,opt,name=free_cells,json=freeCells,proto3" json:"free_cells,omitempty"`
	IsActivePickup        bool               `protobuf:"varint,8,opt,name=is_active_pickup,json=isActivePickup,proto3" json:"is_active_pickup,omitempty"`
	IsActivePickupByCells bool               `protobuf:"varint,9,opt,name=is_active_pickup_by_cells,json=isActivePickupByCells,proto3" json:"is_active_pickup_by_cells,omitempty"`
	IsActiveShipment      bool               `protobuf:"varint,10,opt,name=is_active_shipment,json=isActiveShipment,proto3" json:"is_active_shipment,omitempty"`
	CreatedAt             string             `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             string             `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Postal                string             `protobuf:"bytes,13,opt,name=postal,proto3" json:"postal,omitempty"`
	Street                string             `protobuf:"bytes,14,opt,name=street,proto3" json:"street,omitempty"`
	House                 string             `protobuf:"bytes,15,opt,name=house,proto3" json:"house,omitempty"`
	Housing               string             `protobuf:"bytes,16,opt,name=housing,proto3" json:"housing,omitempty"`
	Floor                 string             `protobuf:"bytes,17,opt,name=floor,proto3" json:"floor,omitempty"`
	Rels                  []*Rel             `protobuf:"bytes,18,rep,name=rels,proto3" json:"rels,omitempty"`
}

func (x *StoreDeliveryType) Reset() {
	*x = StoreDeliveryType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreDeliveryType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDeliveryType) ProtoMessage() {}

func (x *StoreDeliveryType) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDeliveryType.ProtoReflect.Descriptor instead.
func (*StoreDeliveryType) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{4}
}

func (x *StoreDeliveryType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StoreDeliveryType) GetStore() *Store {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *StoreDeliveryType) GetDeliveryTypePickup() *DeliveryTypeShort {
	if x != nil {
		return x.DeliveryTypePickup
	}
	return nil
}

func (x *StoreDeliveryType) GetDeliveryTypeShipment() *DeliveryTypeShort {
	if x != nil {
		return x.DeliveryTypeShipment
	}
	return nil
}

func (x *StoreDeliveryType) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

func (x *StoreDeliveryType) GetBusyCells() int32 {
	if x != nil {
		return x.BusyCells
	}
	return 0
}

func (x *StoreDeliveryType) GetFreeCells() int32 {
	if x != nil {
		return x.FreeCells
	}
	return 0
}

func (x *StoreDeliveryType) GetIsActivePickup() bool {
	if x != nil {
		return x.IsActivePickup
	}
	return false
}

func (x *StoreDeliveryType) GetIsActivePickupByCells() bool {
	if x != nil {
		return x.IsActivePickupByCells
	}
	return false
}

func (x *StoreDeliveryType) GetIsActiveShipment() bool {
	if x != nil {
		return x.IsActiveShipment
	}
	return false
}

func (x *StoreDeliveryType) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StoreDeliveryType) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *StoreDeliveryType) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *StoreDeliveryType) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *StoreDeliveryType) GetHouse() string {
	if x != nil {
		return x.House
	}
	return ""
}

func (x *StoreDeliveryType) GetHousing() string {
	if x != nil {
		return x.Housing
	}
	return ""
}

func (x *StoreDeliveryType) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

func (x *StoreDeliveryType) GetRels() []*Rel {
	if x != nil {
		return x.Rels
	}
	return nil
}

type UpdateStoreDeliveryType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StoreCode              int32 `protobuf:"varint,2,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	PickupDeliveryTypeId   int32 `protobuf:"varint,3,opt,name=pickup_delivery_type_id,json=pickupDeliveryTypeId,proto3" json:"pickup_delivery_type_id,omitempty"`
	ShipmentDeliveryTypeId int32 `protobuf:"varint,4,opt,name=shipment_delivery_type_id,json=shipmentDeliveryTypeId,proto3" json:"shipment_delivery_type_id,omitempty"`
	MaxCells               int32 `protobuf:"varint,5,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
	IsActivePickup         bool  `protobuf:"varint,6,opt,name=is_active_pickup,json=isActivePickup,proto3" json:"is_active_pickup,omitempty"`
	IsActiveShipment       bool  `protobuf:"varint,7,opt,name=is_active_shipment,json=isActiveShipment,proto3" json:"is_active_shipment,omitempty"`
}

func (x *UpdateStoreDeliveryType) Reset() {
	*x = UpdateStoreDeliveryType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStoreDeliveryType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStoreDeliveryType) ProtoMessage() {}

func (x *UpdateStoreDeliveryType) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStoreDeliveryType.ProtoReflect.Descriptor instead.
func (*UpdateStoreDeliveryType) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateStoreDeliveryType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateStoreDeliveryType) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *UpdateStoreDeliveryType) GetPickupDeliveryTypeId() int32 {
	if x != nil {
		return x.PickupDeliveryTypeId
	}
	return 0
}

func (x *UpdateStoreDeliveryType) GetShipmentDeliveryTypeId() int32 {
	if x != nil {
		return x.ShipmentDeliveryTypeId
	}
	return 0
}

func (x *UpdateStoreDeliveryType) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

func (x *UpdateStoreDeliveryType) GetIsActivePickup() bool {
	if x != nil {
		return x.IsActivePickup
	}
	return false
}

func (x *UpdateStoreDeliveryType) GetIsActiveShipment() bool {
	if x != nil {
		return x.IsActiveShipment
	}
	return false
}

type SuggestStoreDeliveryTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *SuggestStoreDeliveryTypeRequest) Reset() {
	*x = SuggestStoreDeliveryTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestStoreDeliveryTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestStoreDeliveryTypeRequest) ProtoMessage() {}

func (x *SuggestStoreDeliveryTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestStoreDeliveryTypeRequest.ProtoReflect.Descriptor instead.
func (*SuggestStoreDeliveryTypeRequest) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{6}
}

func (x *SuggestStoreDeliveryTypeRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SuggestStoreDeliveryTypeRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type SuggestStoreDeliveryType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsActivePickup   bool   `protobuf:"varint,3,opt,name=is_active_pickup,json=isActivePickup,proto3" json:"is_active_pickup,omitempty"`
	StoreCode        int32  `protobuf:"varint,4,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	Postal           string `protobuf:"bytes,5,opt,name=postal,proto3" json:"postal,omitempty"`
	Street           string `protobuf:"bytes,6,opt,name=street,proto3" json:"street,omitempty"`
	House            string `protobuf:"bytes,7,opt,name=house,proto3" json:"house,omitempty"`
	Housing          string `protobuf:"bytes,8,opt,name=housing,proto3" json:"housing,omitempty"`
	Floor            string `protobuf:"bytes,9,opt,name=floor,proto3" json:"floor,omitempty"`
	IsActiveShipment bool   `protobuf:"varint,10,opt,name=is_active_shipment,json=isActiveShipment,proto3" json:"is_active_shipment,omitempty"`
}

func (x *SuggestStoreDeliveryType) Reset() {
	*x = SuggestStoreDeliveryType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestStoreDeliveryType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestStoreDeliveryType) ProtoMessage() {}

func (x *SuggestStoreDeliveryType) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestStoreDeliveryType.ProtoReflect.Descriptor instead.
func (*SuggestStoreDeliveryType) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{7}
}

func (x *SuggestStoreDeliveryType) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SuggestStoreDeliveryType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SuggestStoreDeliveryType) GetIsActivePickup() bool {
	if x != nil {
		return x.IsActivePickup
	}
	return false
}

func (x *SuggestStoreDeliveryType) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *SuggestStoreDeliveryType) GetPostal() string {
	if x != nil {
		return x.Postal
	}
	return ""
}

func (x *SuggestStoreDeliveryType) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *SuggestStoreDeliveryType) GetHouse() string {
	if x != nil {
		return x.House
	}
	return ""
}

func (x *SuggestStoreDeliveryType) GetHousing() string {
	if x != nil {
		return x.Housing
	}
	return ""
}

func (x *SuggestStoreDeliveryType) GetFloor() string {
	if x != nil {
		return x.Floor
	}
	return ""
}

func (x *SuggestStoreDeliveryType) GetIsActiveShipment() bool {
	if x != nil {
		return x.IsActiveShipment
	}
	return false
}

type SuggestStoreDeliveryTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*SuggestStoreDeliveryType `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32                       `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SuggestStoreDeliveryTypeResponse) Reset() {
	*x = SuggestStoreDeliveryTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_store_delivery_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestStoreDeliveryTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestStoreDeliveryTypeResponse) ProtoMessage() {}

func (x *SuggestStoreDeliveryTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_store_delivery_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestStoreDeliveryTypeResponse.ProtoReflect.Descriptor instead.
func (*SuggestStoreDeliveryTypeResponse) Descriptor() ([]byte, []int) {
	return file_store_delivery_type_proto_rawDescGZIP(), []int{8}
}

func (x *SuggestStoreDeliveryTypeResponse) GetResults() []*SuggestStoreDeliveryType {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SuggestStoreDeliveryTypeResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_store_delivery_type_proto protoreflect.FileDescriptor

var file_store_delivery_type_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x25, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9f, 0x02, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65,
	0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x2c, 0x0a,
	0x12, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x1c, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x6d, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0xf2, 0x05, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x12, 0x53, 0x0a, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x50, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x57, 0x0a, 0x16, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x48, 0x01, 0x52, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x75, 0x73, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x62, 0x75, 0x73, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x72, 0x65, 0x65, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x38, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x62, 0x79, 0x5f, 0x63, 0x65, 0x6c,
	0x6c, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x42, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x12, 0x22, 0x0a, 0x04, 0x72, 0x65, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x52, 0x65, 0x6c, 0x52,
	0x04, 0x72, 0x65, 0x6c, 0x73, 0x42, 0x17, 0x0a, 0x15, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x42, 0x19,
	0x0a, 0x17, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xaf, 0x02, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65,
	0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65,
	0x6c, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x2c, 0x0a,
	0x12, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x1f, 0x53,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0xab, 0x02, 0x0a,
	0x18, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68,
	0x6f, 0x75, 0x73, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12,
	0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x20, 0x53, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x75, 0x67, 0x67,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x32, 0xf4, 0x05, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7e, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x72, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1c,
	0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x26, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x6d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x1a, 0x1c, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x77, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x2e,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x1a, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x3a, 0x01, 0x2a, 0x32, 0x20, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2d, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6a, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x28,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x2a, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x07, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x12, 0x23, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x74, 0x79,
	0x70, 0x65, 0x2f, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x6f,
	0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_store_delivery_type_proto_rawDescOnce sync.Once
	file_store_delivery_type_proto_rawDescData = file_store_delivery_type_proto_rawDesc
)

func file_store_delivery_type_proto_rawDescGZIP() []byte {
	file_store_delivery_type_proto_rawDescOnce.Do(func() {
		file_store_delivery_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_store_delivery_type_proto_rawDescData)
	})
	return file_store_delivery_type_proto_rawDescData
}

var file_store_delivery_type_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_store_delivery_type_proto_goTypes = []interface{}{
	(*StoreDeliveryTypeId)(nil),              // 0: logistics.StoreDeliveryTypeId
	(*CreateStoreDeliveryType)(nil),          // 1: logistics.CreateStoreDeliveryType
	(*ListStoreDeliveryTypeRequest)(nil),     // 2: logistics.ListStoreDeliveryTypeRequest
	(*ListStoreDeliveryTypeResponse)(nil),    // 3: logistics.ListStoreDeliveryTypeResponse
	(*StoreDeliveryType)(nil),                // 4: logistics.StoreDeliveryType
	(*UpdateStoreDeliveryType)(nil),          // 5: logistics.UpdateStoreDeliveryType
	(*SuggestStoreDeliveryTypeRequest)(nil),  // 6: logistics.SuggestStoreDeliveryTypeRequest
	(*SuggestStoreDeliveryType)(nil),         // 7: logistics.SuggestStoreDeliveryType
	(*SuggestStoreDeliveryTypeResponse)(nil), // 8: logistics.SuggestStoreDeliveryTypeResponse
	(*Store)(nil),                            // 9: logistics.Store
	(*DeliveryTypeShort)(nil),                // 10: logistics.DeliveryTypeShort
	(*Rel)(nil),                              // 11: logistics.Rel
	(*emptypb.Empty)(nil),                    // 12: google.protobuf.Empty
}
var file_store_delivery_type_proto_depIdxs = []int32{
	4,  // 0: logistics.ListStoreDeliveryTypeResponse.results:type_name -> logistics.StoreDeliveryType
	9,  // 1: logistics.StoreDeliveryType.store:type_name -> logistics.Store
	10, // 2: logistics.StoreDeliveryType.delivery_type_pickup:type_name -> logistics.DeliveryTypeShort
	10, // 3: logistics.StoreDeliveryType.delivery_type_shipment:type_name -> logistics.DeliveryTypeShort
	11, // 4: logistics.StoreDeliveryType.rels:type_name -> logistics.Rel
	7,  // 5: logistics.SuggestStoreDeliveryTypeResponse.results:type_name -> logistics.SuggestStoreDeliveryType
	2,  // 6: logistics.StoreDeliveryTypeService.List:input_type -> logistics.ListStoreDeliveryTypeRequest
	1,  // 7: logistics.StoreDeliveryTypeService.Create:input_type -> logistics.CreateStoreDeliveryType
	0,  // 8: logistics.StoreDeliveryTypeService.Get:input_type -> logistics.StoreDeliveryTypeId
	5,  // 9: logistics.StoreDeliveryTypeService.Update:input_type -> logistics.UpdateStoreDeliveryType
	0,  // 10: logistics.StoreDeliveryTypeService.Delete:input_type -> logistics.StoreDeliveryTypeId
	6,  // 11: logistics.StoreDeliveryTypeService.Suggest:input_type -> logistics.SuggestStoreDeliveryTypeRequest
	3,  // 12: logistics.StoreDeliveryTypeService.List:output_type -> logistics.ListStoreDeliveryTypeResponse
	4,  // 13: logistics.StoreDeliveryTypeService.Create:output_type -> logistics.StoreDeliveryType
	4,  // 14: logistics.StoreDeliveryTypeService.Get:output_type -> logistics.StoreDeliveryType
	4,  // 15: logistics.StoreDeliveryTypeService.Update:output_type -> logistics.StoreDeliveryType
	12, // 16: logistics.StoreDeliveryTypeService.Delete:output_type -> google.protobuf.Empty
	8,  // 17: logistics.StoreDeliveryTypeService.Suggest:output_type -> logistics.SuggestStoreDeliveryTypeResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_store_delivery_type_proto_init() }
func file_store_delivery_type_proto_init() {
	if File_store_delivery_type_proto != nil {
		return
	}
	file_store_proto_init()
	file_delivery_type_proto_init()
	file_message_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_store_delivery_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreDeliveryTypeId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStoreDeliveryType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoreDeliveryTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStoreDeliveryTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreDeliveryType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStoreDeliveryType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestStoreDeliveryTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestStoreDeliveryType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_store_delivery_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestStoreDeliveryTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_store_delivery_type_proto_msgTypes[4].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_store_delivery_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_store_delivery_type_proto_goTypes,
		DependencyIndexes: file_store_delivery_type_proto_depIdxs,
		MessageInfos:      file_store_delivery_type_proto_msgTypes,
	}.Build()
	File_store_delivery_type_proto = out.File
	file_store_delivery_type_proto_rawDesc = nil
	file_store_delivery_type_proto_goTypes = nil
	file_store_delivery_type_proto_depIdxs = nil
}
