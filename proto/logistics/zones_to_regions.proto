syntax = "proto3";

option go_package = "go/logistics";

package logistics;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service ZonesToRegions {
  rpc Create(ZoneToRegion) returns (ZoneToRegionId) {
    option (google.api.http) = {
      post: "/v1/zones_to_regions"
      body: "*"
    };
  }

  rpc CreateMany(CreateManyZoneToRegionRequest) returns (CreateManyZoneToRegionResponse) {
    option (google.api.http) = {
      post: "/v1/zones_to_regions/create_many"
      body: "*"
    };
  }

  rpc Get(ZoneToRegionId) returns (ListZonesToRegionsResponse) {
    option (google.api.http) = {
      get: "/v1/zones_to_regions/{zone_id}"
    };
  }

  rpc List(ListZonesToRegionsRequest) returns (ListZonesToRegionsResponse) {
    option (google.api.http) = {
      get: "/v1/zones_to_regions"
    };
  }

  rpc Update(ZoneToRegion) returns (ZoneToRegion) {
    option (google.api.http) = {
      patch: "/v1/zones_to_regions/{zone_id}"
      body: "*"
    };
  }

  rpc Delete(ZoneToRegionId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/zones_to_regions/{zone_id}"
    };
  }
}

message ZoneToRegion {
  int32 zone_id = 1;
  string region_id = 2;
}

message ZoneToRegionId {
  int32 zone_id = 1;
}

message ListZonesToRegionsRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message ListZonesToRegionsResponse {
  repeated ZoneToRegion results = 1;
  int32 total = 2;
}

message CreateManyZoneToRegionRequest {
  repeated ZoneToRegion zones_to_regions = 1;
}

message CreateManyZoneToRegionResponse {
  repeated int32 zone_to_region_id = 1;
}
