syntax = "proto3";

option go_package = "go/user";

package user;

service user {
  rpc Create(CreateRequest) returns (CreateResponse) {}
  rpc Update(User) returns (UpdateResponse) {}
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc GetByToken(GetByTokenRequest) returns (GetResponse) {}
  rpc GetList(GetListRequest) returns (GetListResponse) {}
  rpc GetPassword(GetPasswordRequest) returns (GetPasswordResponse) {}
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
  // @TODO: оставить отдельными методами? Или оставить в Update?
//  rpc Block(BlockRequest) returns (BlockResponse) {}
//  rpc Unblock(UnblockRequest) returns (UnblockResponse) {}
}

// CreateRequest
message CreateRequest {
  string username = 1;
  string password = 2;
  // основные поля
  string phone = 3;
  string email = 4;
  string first_name = 5;
  string middle_name = 6;
  string last_name = 7;
  string birthdate = 8;
  string gender = 9;
  // клиентские поля
  int32  store_code = 10;
  int32  rcrm_id = 11;
  string clothing_size = 12;
  string shoe_size = 13;
  string country = 14;
  string city = 15;
  string region = 16;
  // поля внутренних пользователей
  string department = 17;
  string position = 18;
  int64  site_id = 19;
  string onec_id = 20;
  string wms_id = 21;
}

message CreateResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  User              data = 5;
}

// User
message User {
  string id = 1;
  string username = 2;
  string password = 3;
  // основные поля
  string phone = 4;
  string email = 5;
  string first_name = 6;
  string middle_name = 7;
  string last_name = 8;
  string birthdate = 9;
  string gender = 10;
  // клиентские поля
  int32  store_code = 11;
  int32  rcrm_id = 13;
  string clothing_size = 12;
  string shoe_size = 14;
  string country = 15;
  string city = 16;
  string region = 17;
  // поля внутренних пользователей
  string department = 18;
  string position = 19;
  int64  site_id = 20;
  string onec_id = 21;
  string wms_id = 22;
}

message UpdateResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  User              data = 5;
}

// Get
message GetRequest {
  string id = 1;
}

message GetResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  User              data = 5;
}

// GetByToken
message GetByTokenRequest {
  string access_token = 1;
}

// GetList
message GetListRequest {
  GetListFilters filters = 1;
  Pagination     pagination = 2;
}

message GetListResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  repeated User     data = 5;
}

// GetPassword
message GetPasswordRequest {
  string id = 1;
}

message GetPasswordResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  PasswordData      data = 5;
}

message PasswordData {
  string encrypted_password = 1;
}

// Delete
message DeleteRequest {
  string id = 1;
}

message DeleteResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
}

// Error
message Error {
  string target = 1;
  int64  code = 2;
  string message = 3;
}

// Filters
message GetListFilters {
  string updated_from = 1;
  string updated_to   = 2;
  string type         = 3;
}

// Pagination
message Pagination {
  int64 limit = 1;
  int64 offset = 2;
}