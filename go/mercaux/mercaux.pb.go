// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/mercaux.proto

package mercaux

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StocksGetParams struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StocksGetParams) Reset()         { *m = StocksGetParams{} }
func (m *StocksGetParams) String() string { return proto.CompactTextString(m) }
func (*StocksGetParams) ProtoMessage()    {}
func (*StocksGetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{0}
}

func (m *StocksGetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StocksGetParams.Unmarshal(m, b)
}
func (m *StocksGetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StocksGetParams.Marshal(b, m, deterministic)
}
func (m *StocksGetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StocksGetParams.Merge(m, src)
}
func (m *StocksGetParams) XXX_Size() int {
	return xxx_messageInfo_StocksGetParams.Size(m)
}
func (m *StocksGetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_StocksGetParams.DiscardUnknown(m)
}

var xxx_messageInfo_StocksGetParams proto.InternalMessageInfo

func (m *StocksGetParams) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type StocksGetResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Pages                int32    `protobuf:"varint,2,opt,name=pages,proto3" json:"pages,omitempty"`
	Page                 int32    `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Stocks               []*Stock `protobuf:"bytes,4,rep,name=stocks,proto3" json:"stocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StocksGetResponse) Reset()         { *m = StocksGetResponse{} }
func (m *StocksGetResponse) String() string { return proto.CompactTextString(m) }
func (*StocksGetResponse) ProtoMessage()    {}
func (*StocksGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{1}
}

func (m *StocksGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StocksGetResponse.Unmarshal(m, b)
}
func (m *StocksGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StocksGetResponse.Marshal(b, m, deterministic)
}
func (m *StocksGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StocksGetResponse.Merge(m, src)
}
func (m *StocksGetResponse) XXX_Size() int {
	return xxx_messageInfo_StocksGetResponse.Size(m)
}
func (m *StocksGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StocksGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StocksGetResponse proto.InternalMessageInfo

func (m *StocksGetResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *StocksGetResponse) GetPages() int32 {
	if m != nil {
		return m.Pages
	}
	return 0
}

func (m *StocksGetResponse) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *StocksGetResponse) GetStocks() []*Stock {
	if m != nil {
		return m.Stocks
	}
	return nil
}

type Stock struct {
	Barcode              string      `protobuf:"bytes,1,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Category             string      `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Family               string      `protobuf:"bytes,3,opt,name=family,proto3" json:"family,omitempty"`
	FamilyId             string      `protobuf:"bytes,4,opt,name=family_id,json=familyId,proto3" json:"family_id,omitempty"`
	ProductName          string      `protobuf:"bytes,5,opt,name=product_name,json=productName,proto3" json:"product_name,omitempty"`
	ProductNameEn        string      `protobuf:"bytes,6,opt,name=product_name_en,json=productNameEn,proto3" json:"product_name_en,omitempty"`
	Picture              string      `protobuf:"bytes,7,opt,name=picture,proto3" json:"picture,omitempty"`
	Url                  string      `protobuf:"bytes,8,opt,name=url,proto3" json:"url,omitempty"`
	IsActive             bool        `protobuf:"varint,9,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Price                int32       `protobuf:"varint,10,opt,name=price,proto3" json:"price,omitempty"`
	Article              string      `protobuf:"bytes,11,opt,name=article,proto3" json:"article,omitempty"`
	Size                 string      `protobuf:"bytes,12,opt,name=size,proto3" json:"size,omitempty"`
	Color                string      `protobuf:"bytes,13,opt,name=color,proto3" json:"color,omitempty"`
	Fabric               string      `protobuf:"bytes,14,opt,name=fabric,proto3" json:"fabric,omitempty"`
	Model                string      `protobuf:"bytes,15,opt,name=model,proto3" json:"model,omitempty"`
	SuperModelId         string      `protobuf:"bytes,16,opt,name=super_model_id,json=superModelId,proto3" json:"super_model_id,omitempty"`
	SuperModelName       string      `protobuf:"bytes,17,opt,name=super_model_name,json=superModelName,proto3" json:"super_model_name,omitempty"`
	SuperModelNameEn     string      `protobuf:"bytes,18,opt,name=super_model_name_en,json=superModelNameEn,proto3" json:"super_model_name_en,omitempty"`
	Gender               string      `protobuf:"bytes,19,opt,name=gender,proto3" json:"gender,omitempty"`
	Sizes                []string    `protobuf:"bytes,20,rep,name=sizes,proto3" json:"sizes,omitempty"`
	BarcodeAlt           []string    `protobuf:"bytes,21,rep,name=barcode_alt,json=barcodeAlt,proto3" json:"barcode_alt,omitempty"`
	Discount             int32       `protobuf:"varint,22,opt,name=discount,proto3" json:"discount,omitempty"`
	TotalLook            []string    `protobuf:"bytes,23,rep,name=total_look,json=totalLook,proto3" json:"total_look,omitempty"`
	Description          string      `protobuf:"bytes,24,opt,name=description,proto3" json:"description,omitempty"`
	Images               []string    `protobuf:"bytes,25,rep,name=images,proto3" json:"images,omitempty"`
	MainCategory         *Category   `protobuf:"bytes,26,opt,name=main_category,json=mainCategory,proto3" json:"main_category,omitempty"`
	SiteCategory         []*Category `protobuf:"bytes,27,rep,name=site_category,json=siteCategory,proto3" json:"site_category,omitempty"`
	SizeDescription      string      `protobuf:"bytes,28,opt,name=size_description,json=sizeDescription,proto3" json:"size_description,omitempty"`
	Recommendations      []string    `protobuf:"bytes,29,rep,name=recommendations,proto3" json:"recommendations,omitempty"`
	Alternatives         []string    `protobuf:"bytes,30,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	Video                string      `protobuf:"bytes,31,opt,name=video,proto3" json:"video,omitempty"`
	Instashop            []string    `protobuf:"bytes,32,rep,name=instashop,proto3" json:"instashop,omitempty"`
	Country              string      `protobuf:"bytes,33,opt,name=country,proto3" json:"country,omitempty"`
	Quantity             []*Quantity `protobuf:"bytes,34,rep,name=quantity,proto3" json:"quantity,omitempty"`
	Preview              string      `protobuf:"bytes,35,opt,name=preview,proto3" json:"preview,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Stock) Reset()         { *m = Stock{} }
func (m *Stock) String() string { return proto.CompactTextString(m) }
func (*Stock) ProtoMessage()    {}
func (*Stock) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{2}
}

func (m *Stock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stock.Unmarshal(m, b)
}
func (m *Stock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stock.Marshal(b, m, deterministic)
}
func (m *Stock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stock.Merge(m, src)
}
func (m *Stock) XXX_Size() int {
	return xxx_messageInfo_Stock.Size(m)
}
func (m *Stock) XXX_DiscardUnknown() {
	xxx_messageInfo_Stock.DiscardUnknown(m)
}

var xxx_messageInfo_Stock proto.InternalMessageInfo

func (m *Stock) GetBarcode() string {
	if m != nil {
		return m.Barcode
	}
	return ""
}

func (m *Stock) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Stock) GetFamily() string {
	if m != nil {
		return m.Family
	}
	return ""
}

func (m *Stock) GetFamilyId() string {
	if m != nil {
		return m.FamilyId
	}
	return ""
}

func (m *Stock) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *Stock) GetProductNameEn() string {
	if m != nil {
		return m.ProductNameEn
	}
	return ""
}

func (m *Stock) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *Stock) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Stock) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *Stock) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Stock) GetArticle() string {
	if m != nil {
		return m.Article
	}
	return ""
}

func (m *Stock) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *Stock) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Stock) GetFabric() string {
	if m != nil {
		return m.Fabric
	}
	return ""
}

func (m *Stock) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Stock) GetSuperModelId() string {
	if m != nil {
		return m.SuperModelId
	}
	return ""
}

func (m *Stock) GetSuperModelName() string {
	if m != nil {
		return m.SuperModelName
	}
	return ""
}

func (m *Stock) GetSuperModelNameEn() string {
	if m != nil {
		return m.SuperModelNameEn
	}
	return ""
}

func (m *Stock) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *Stock) GetSizes() []string {
	if m != nil {
		return m.Sizes
	}
	return nil
}

func (m *Stock) GetBarcodeAlt() []string {
	if m != nil {
		return m.BarcodeAlt
	}
	return nil
}

func (m *Stock) GetDiscount() int32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *Stock) GetTotalLook() []string {
	if m != nil {
		return m.TotalLook
	}
	return nil
}

func (m *Stock) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Stock) GetImages() []string {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *Stock) GetMainCategory() *Category {
	if m != nil {
		return m.MainCategory
	}
	return nil
}

func (m *Stock) GetSiteCategory() []*Category {
	if m != nil {
		return m.SiteCategory
	}
	return nil
}

func (m *Stock) GetSizeDescription() string {
	if m != nil {
		return m.SizeDescription
	}
	return ""
}

func (m *Stock) GetRecommendations() []string {
	if m != nil {
		return m.Recommendations
	}
	return nil
}

func (m *Stock) GetAlternatives() []string {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *Stock) GetVideo() string {
	if m != nil {
		return m.Video
	}
	return ""
}

func (m *Stock) GetInstashop() []string {
	if m != nil {
		return m.Instashop
	}
	return nil
}

func (m *Stock) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Stock) GetQuantity() []*Quantity {
	if m != nil {
		return m.Quantity
	}
	return nil
}

func (m *Stock) GetPreview() string {
	if m != nil {
		return m.Preview
	}
	return ""
}

type Category struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Slug                 string   `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{3}
}

func (m *Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Category.Unmarshal(m, b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Category.Marshal(b, m, deterministic)
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return xxx_messageInfo_Category.Size(m)
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

func (m *Category) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Category) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Category) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type Quantity struct {
	StoreId              int32    `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Available            int32    `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Reserved             int32    `protobuf:"varint,3,opt,name=reserved,proto3" json:"reserved,omitempty"`
	Discount             int32    `protobuf:"varint,4,opt,name=discount,proto3" json:"discount,omitempty"`
	Price                int32    `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	PriceBeforeDiscount  int32    `protobuf:"varint,6,opt,name=price_before_discount,json=priceBeforeDiscount,proto3" json:"price_before_discount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Quantity) Reset()         { *m = Quantity{} }
func (m *Quantity) String() string { return proto.CompactTextString(m) }
func (*Quantity) ProtoMessage()    {}
func (*Quantity) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{4}
}

func (m *Quantity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quantity.Unmarshal(m, b)
}
func (m *Quantity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quantity.Marshal(b, m, deterministic)
}
func (m *Quantity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quantity.Merge(m, src)
}
func (m *Quantity) XXX_Size() int {
	return xxx_messageInfo_Quantity.Size(m)
}
func (m *Quantity) XXX_DiscardUnknown() {
	xxx_messageInfo_Quantity.DiscardUnknown(m)
}

var xxx_messageInfo_Quantity proto.InternalMessageInfo

func (m *Quantity) GetStoreId() int32 {
	if m != nil {
		return m.StoreId
	}
	return 0
}

func (m *Quantity) GetAvailable() int32 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Quantity) GetReserved() int32 {
	if m != nil {
		return m.Reserved
	}
	return 0
}

func (m *Quantity) GetDiscount() int32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *Quantity) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Quantity) GetPriceBeforeDiscount() int32 {
	if m != nil {
		return m.PriceBeforeDiscount
	}
	return 0
}

type StoresGetResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Stores               []*Store `protobuf:"bytes,2,rep,name=stores,proto3" json:"stores,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoresGetResponse) Reset()         { *m = StoresGetResponse{} }
func (m *StoresGetResponse) String() string { return proto.CompactTextString(m) }
func (*StoresGetResponse) ProtoMessage()    {}
func (*StoresGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{5}
}

func (m *StoresGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoresGetResponse.Unmarshal(m, b)
}
func (m *StoresGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoresGetResponse.Marshal(b, m, deterministic)
}
func (m *StoresGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoresGetResponse.Merge(m, src)
}
func (m *StoresGetResponse) XXX_Size() int {
	return xxx_messageInfo_StoresGetResponse.Size(m)
}
func (m *StoresGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StoresGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StoresGetResponse proto.InternalMessageInfo

func (m *StoresGetResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *StoresGetResponse) GetStores() []*Store {
	if m != nil {
		return m.Stores
	}
	return nil
}

type Store struct {
	StoreId              int32    `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	ShortTitle           string   `protobuf:"bytes,2,opt,name=short_title,json=shortTitle,proto3" json:"short_title,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Geo                  string   `protobuf:"bytes,5,opt,name=geo,proto3" json:"geo,omitempty"`
	City                 string   `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	Country              string   `protobuf:"bytes,7,opt,name=country,proto3" json:"country,omitempty"`
	Active               bool     `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Store) Reset()         { *m = Store{} }
func (m *Store) String() string { return proto.CompactTextString(m) }
func (*Store) ProtoMessage()    {}
func (*Store) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{6}
}

func (m *Store) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Store.Unmarshal(m, b)
}
func (m *Store) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Store.Marshal(b, m, deterministic)
}
func (m *Store) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Store.Merge(m, src)
}
func (m *Store) XXX_Size() int {
	return xxx_messageInfo_Store.Size(m)
}
func (m *Store) XXX_DiscardUnknown() {
	xxx_messageInfo_Store.DiscardUnknown(m)
}

var xxx_messageInfo_Store proto.InternalMessageInfo

func (m *Store) GetStoreId() int32 {
	if m != nil {
		return m.StoreId
	}
	return 0
}

func (m *Store) GetShortTitle() string {
	if m != nil {
		return m.ShortTitle
	}
	return ""
}

func (m *Store) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Store) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Store) GetGeo() string {
	if m != nil {
		return m.Geo
	}
	return ""
}

func (m *Store) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Store) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Store) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type SellersGetResponse struct {
	Ok                   bool      `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Sellers              []*Seller `protobuf:"bytes,2,rep,name=sellers,proto3" json:"sellers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SellersGetResponse) Reset()         { *m = SellersGetResponse{} }
func (m *SellersGetResponse) String() string { return proto.CompactTextString(m) }
func (*SellersGetResponse) ProtoMessage()    {}
func (*SellersGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{7}
}

func (m *SellersGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SellersGetResponse.Unmarshal(m, b)
}
func (m *SellersGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SellersGetResponse.Marshal(b, m, deterministic)
}
func (m *SellersGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SellersGetResponse.Merge(m, src)
}
func (m *SellersGetResponse) XXX_Size() int {
	return xxx_messageInfo_SellersGetResponse.Size(m)
}
func (m *SellersGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SellersGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SellersGetResponse proto.InternalMessageInfo

func (m *SellersGetResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *SellersGetResponse) GetSellers() []*Seller {
	if m != nil {
		return m.Sellers
	}
	return nil
}

type Seller struct {
	StoreId              int32    `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	SellerId             string   `protobuf:"bytes,2,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	SellerName           string   `protobuf:"bytes,3,opt,name=seller_name,json=sellerName,proto3" json:"seller_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Seller) Reset()         { *m = Seller{} }
func (m *Seller) String() string { return proto.CompactTextString(m) }
func (*Seller) ProtoMessage()    {}
func (*Seller) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{8}
}

func (m *Seller) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Seller.Unmarshal(m, b)
}
func (m *Seller) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Seller.Marshal(b, m, deterministic)
}
func (m *Seller) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Seller.Merge(m, src)
}
func (m *Seller) XXX_Size() int {
	return xxx_messageInfo_Seller.Size(m)
}
func (m *Seller) XXX_DiscardUnknown() {
	xxx_messageInfo_Seller.DiscardUnknown(m)
}

var xxx_messageInfo_Seller proto.InternalMessageInfo

func (m *Seller) GetStoreId() int32 {
	if m != nil {
		return m.StoreId
	}
	return 0
}

func (m *Seller) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

func (m *Seller) GetSellerName() string {
	if m != nil {
		return m.SellerName
	}
	return ""
}

type OrdersNewParams struct {
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	SellerId             string   `protobuf:"bytes,3,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrdersNewParams) Reset()         { *m = OrdersNewParams{} }
func (m *OrdersNewParams) String() string { return proto.CompactTextString(m) }
func (*OrdersNewParams) ProtoMessage()    {}
func (*OrdersNewParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{9}
}

func (m *OrdersNewParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersNewParams.Unmarshal(m, b)
}
func (m *OrdersNewParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersNewParams.Marshal(b, m, deterministic)
}
func (m *OrdersNewParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersNewParams.Merge(m, src)
}
func (m *OrdersNewParams) XXX_Size() int {
	return xxx_messageInfo_OrdersNewParams.Size(m)
}
func (m *OrdersNewParams) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersNewParams.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersNewParams proto.InternalMessageInfo

func (m *OrdersNewParams) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *OrdersNewParams) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *OrdersNewParams) GetSellerId() string {
	if m != nil {
		return m.SellerId
	}
	return ""
}

type Order struct {
	LastName             string       `protobuf:"bytes,1,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	FirstName            string       `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	Phone                string       `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Email                string       `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	StoreId              int32        `protobuf:"varint,5,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	Items                []*OrderItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{10}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Order) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Order) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Order) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Order) GetStoreId() int32 {
	if m != nil {
		return m.StoreId
	}
	return 0
}

func (m *Order) GetItems() []*OrderItem {
	if m != nil {
		return m.Items
	}
	return nil
}

type OrderItem struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Quantity             int32    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price                float32  `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderItem) Reset()         { *m = OrderItem{} }
func (m *OrderItem) String() string { return proto.CompactTextString(m) }
func (*OrderItem) ProtoMessage()    {}
func (*OrderItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{11}
}

func (m *OrderItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderItem.Unmarshal(m, b)
}
func (m *OrderItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderItem.Marshal(b, m, deterministic)
}
func (m *OrderItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderItem.Merge(m, src)
}
func (m *OrderItem) XXX_Size() int {
	return xxx_messageInfo_OrderItem.Size(m)
}
func (m *OrderItem) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderItem.DiscardUnknown(m)
}

var xxx_messageInfo_OrderItem proto.InternalMessageInfo

func (m *OrderItem) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *OrderItem) GetQuantity() int32 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *OrderItem) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

type OrdersNewResponse struct {
	Ok                   bool          `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	OrderId              string        `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Errors               []*OrderError `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *OrdersNewResponse) Reset()         { *m = OrdersNewResponse{} }
func (m *OrdersNewResponse) String() string { return proto.CompactTextString(m) }
func (*OrdersNewResponse) ProtoMessage()    {}
func (*OrdersNewResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{12}
}

func (m *OrdersNewResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrdersNewResponse.Unmarshal(m, b)
}
func (m *OrdersNewResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrdersNewResponse.Marshal(b, m, deterministic)
}
func (m *OrdersNewResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrdersNewResponse.Merge(m, src)
}
func (m *OrdersNewResponse) XXX_Size() int {
	return xxx_messageInfo_OrdersNewResponse.Size(m)
}
func (m *OrdersNewResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OrdersNewResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OrdersNewResponse proto.InternalMessageInfo

func (m *OrdersNewResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *OrdersNewResponse) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *OrdersNewResponse) GetErrors() []*OrderError {
	if m != nil {
		return m.Errors
	}
	return nil
}

type OrderError struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Price                string   `protobuf:"bytes,3,opt,name=price,proto3" json:"price,omitempty"`
	AvailableQuantity    int32    `protobuf:"varint,4,opt,name=available_quantity,json=availableQuantity,proto3" json:"available_quantity,omitempty"`
	Barcode              int64    `protobuf:"varint,5,opt,name=barcode,proto3" json:"barcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderError) Reset()         { *m = OrderError{} }
func (m *OrderError) String() string { return proto.CompactTextString(m) }
func (*OrderError) ProtoMessage()    {}
func (*OrderError) Descriptor() ([]byte, []int) {
	return fileDescriptor_c3121ea6bf505c63, []int{13}
}

func (m *OrderError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderError.Unmarshal(m, b)
}
func (m *OrderError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderError.Marshal(b, m, deterministic)
}
func (m *OrderError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderError.Merge(m, src)
}
func (m *OrderError) XXX_Size() int {
	return xxx_messageInfo_OrderError.Size(m)
}
func (m *OrderError) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderError.DiscardUnknown(m)
}

var xxx_messageInfo_OrderError proto.InternalMessageInfo

func (m *OrderError) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *OrderError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *OrderError) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *OrderError) GetAvailableQuantity() int32 {
	if m != nil {
		return m.AvailableQuantity
	}
	return 0
}

func (m *OrderError) GetBarcode() int64 {
	if m != nil {
		return m.Barcode
	}
	return 0
}

func init() {
	proto.RegisterType((*StocksGetParams)(nil), "mercaux.StocksGetParams")
	proto.RegisterType((*StocksGetResponse)(nil), "mercaux.StocksGetResponse")
	proto.RegisterType((*Stock)(nil), "mercaux.Stock")
	proto.RegisterType((*Category)(nil), "mercaux.Category")
	proto.RegisterType((*Quantity)(nil), "mercaux.Quantity")
	proto.RegisterType((*StoresGetResponse)(nil), "mercaux.StoresGetResponse")
	proto.RegisterType((*Store)(nil), "mercaux.Store")
	proto.RegisterType((*SellersGetResponse)(nil), "mercaux.SellersGetResponse")
	proto.RegisterType((*Seller)(nil), "mercaux.Seller")
	proto.RegisterType((*OrdersNewParams)(nil), "mercaux.OrdersNewParams")
	proto.RegisterType((*Order)(nil), "mercaux.Order")
	proto.RegisterType((*OrderItem)(nil), "mercaux.OrderItem")
	proto.RegisterType((*OrdersNewResponse)(nil), "mercaux.OrdersNewResponse")
	proto.RegisterType((*OrderError)(nil), "mercaux.OrderError")
}

func init() { proto.RegisterFile("proto/mercaux.proto", fileDescriptor_c3121ea6bf505c63) }

var fileDescriptor_c3121ea6bf505c63 = []byte{
	// 1269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x56, 0xdd, 0x6e, 0xdc, 0x36,
	0x13, 0x8d, 0xbd, 0xde, 0xbf, 0x59, 0xc7, 0x6b, 0xd3, 0x89, 0x3f, 0xc6, 0x4e, 0xbe, 0x38, 0x6a,
	0x5a, 0x38, 0x28, 0xe2, 0x00, 0x2e, 0xd0, 0x9b, 0xb6, 0x17, 0x49, 0x63, 0x18, 0x46, 0xf3, 0xd3,
	0x28, 0xbd, 0xea, 0x8d, 0x20, 0x4b, 0xe3, 0x0d, 0x61, 0x49, 0xdc, 0x92, 0x5c, 0xa7, 0xee, 0x9b,
	0xf4, 0x3d, 0xfa, 0x0a, 0xbd, 0xea, 0x55, 0xdf, 0xa8, 0x98, 0x21, 0xa5, 0x95, 0x9c, 0xd6, 0x77,
	0x3c, 0x67, 0x86, 0xd4, 0xf0, 0x70, 0x78, 0x44, 0xd8, 0x9e, 0x1b, 0xed, 0xf4, 0xb3, 0x12, 0x4d,
	0x96, 0x2e, 0x7e, 0x3d, 0x64, 0x24, 0x86, 0x01, 0xee, 0xee, 0xcd, 0xb4, 0x9e, 0x15, 0xf8, 0x8c,
	0xe9, 0xb3, 0xc5, 0xf9, 0x33, 0x2c, 0xe7, 0xee, 0xca, 0x67, 0x45, 0x9f, 0xc3, 0xf4, 0xbd, 0xd3,
	0xd9, 0x85, 0x3d, 0x41, 0xf7, 0x63, 0x6a, 0xd2, 0xd2, 0x0a, 0x01, 0x6b, 0xf3, 0x74, 0x86, 0x72,
	0x65, 0x7f, 0xe5, 0xa0, 0x1f, 0xf3, 0x38, 0x5a, 0xc0, 0x56, 0x93, 0x16, 0xa3, 0x9d, 0xeb, 0xca,
	0xa2, 0xd8, 0x80, 0x55, 0x7d, 0xc1, 0x69, 0xa3, 0x78, 0x55, 0x5f, 0x88, 0x3b, 0xd0, 0xa7, 0x64,
	0x2b, 0x57, 0x79, 0xa6, 0x07, 0xcd, 0x72, 0xbd, 0xe5, 0x72, 0xe2, 0x0b, 0x18, 0x58, 0x5e, 0x4e,
	0xae, 0xed, 0xf7, 0x0e, 0x26, 0x47, 0x1b, 0x87, 0x75, 0xed, 0xfc, 0x95, 0x38, 0x44, 0xa3, 0xbf,
	0x47, 0xd0, 0x67, 0x46, 0x48, 0x18, 0x9e, 0xa5, 0x26, 0xd3, 0xb9, 0xaf, 0x6b, 0x1c, 0xd7, 0x50,
	0xec, 0xc2, 0x28, 0x4b, 0x1d, 0xce, 0xb4, 0xb9, 0xe2, 0x0f, 0x8f, 0xe3, 0x06, 0x8b, 0x1d, 0x18,
	0x9c, 0xa7, 0xa5, 0x2a, 0xae, 0xf8, 0xeb, 0xe3, 0x38, 0x20, 0xb1, 0x07, 0x63, 0x3f, 0x4a, 0x54,
	0x2e, 0xd7, 0xfc, 0x24, 0x4f, 0x9c, 0xe6, 0xe2, 0x11, 0xac, 0xcf, 0x8d, 0xce, 0x17, 0x99, 0x4b,
	0xaa, 0xb4, 0x44, 0xd9, 0xe7, 0xf8, 0x24, 0x70, 0x6f, 0xd2, 0x92, 0xea, 0x9f, 0xb6, 0x53, 0x12,
	0xac, 0xe4, 0x80, 0xb3, 0x6e, 0xb7, 0xb2, 0x8e, 0x2b, 0xaa, 0x7a, 0xae, 0x32, 0xb7, 0x30, 0x28,
	0x87, 0xbe, 0xea, 0x00, 0xc5, 0x26, 0xf4, 0x16, 0xa6, 0x90, 0x23, 0x66, 0x69, 0x48, 0x35, 0x29,
	0x9b, 0xa4, 0x99, 0x53, 0x97, 0x28, 0xc7, 0x2c, 0xea, 0x48, 0xd9, 0xe7, 0x8c, 0x59, 0x5a, 0xa3,
	0x32, 0x94, 0x10, 0xa4, 0x25, 0x40, 0xcb, 0xa7, 0xc6, 0xa9, 0xac, 0x40, 0x39, 0xf1, 0xcb, 0x07,
	0x48, 0xa2, 0x5b, 0xf5, 0x1b, 0xca, 0x75, 0xa6, 0x79, 0x4c, 0x6b, 0x64, 0xba, 0xd0, 0x46, 0xde,
	0x66, 0xd2, 0x03, 0x2f, 0xd1, 0x99, 0x51, 0x99, 0xdc, 0xa8, 0x25, 0x22, 0x44, 0xd9, 0xa5, 0xce,
	0xb1, 0x90, 0x53, 0x9f, 0xcd, 0x40, 0x3c, 0x86, 0x0d, 0xbb, 0x98, 0xa3, 0x49, 0x18, 0x92, 0x7a,
	0x9b, 0x1c, 0x5e, 0x67, 0xf6, 0x35, 0x91, 0xa7, 0xb9, 0x38, 0x80, 0xcd, 0x76, 0x16, 0xab, 0xb8,
	0xc5, 0x79, 0x1b, 0xcb, 0x3c, 0x16, 0xf2, 0x29, 0x6c, 0x5f, 0xcf, 0x24, 0x31, 0x05, 0x27, 0x6f,
	0x76, 0x93, 0x8f, 0x2b, 0x2a, 0x76, 0x86, 0x55, 0x8e, 0x46, 0x6e, 0xfb, 0x62, 0x3d, 0xa2, 0x62,
	0x69, 0x8b, 0x56, 0xde, 0xd9, 0xef, 0x51, 0xb1, 0x0c, 0xc4, 0x43, 0x98, 0x84, 0x26, 0x49, 0xd2,
	0xc2, 0xc9, 0xbb, 0x1c, 0x83, 0x40, 0x3d, 0x2f, 0x1c, 0xb5, 0x4e, 0xae, 0x6c, 0xa6, 0x17, 0x95,
	0x93, 0x3b, 0x2c, 0x6c, 0x83, 0xc5, 0x03, 0x00, 0xa7, 0x5d, 0x5a, 0x24, 0x85, 0xd6, 0x17, 0xf2,
	0x7f, 0x3c, 0x77, 0xcc, 0xcc, 0x2b, 0xad, 0x2f, 0xc4, 0x3e, 0x4c, 0x72, 0xb4, 0x99, 0x51, 0x73,
	0xa7, 0x74, 0x25, 0xa5, 0xef, 0x91, 0x16, 0x45, 0xb5, 0xaa, 0x92, 0xaf, 0xc3, 0x3d, 0x9e, 0x1c,
	0x90, 0xf8, 0x1a, 0x6e, 0x97, 0xa9, 0xaa, 0x92, 0xa6, 0x69, 0x77, 0xf7, 0x57, 0x0e, 0x26, 0x47,
	0x5b, 0xcd, 0x15, 0xf8, 0x3e, 0x04, 0xe2, 0x75, 0xca, 0xab, 0x11, 0xcd, 0xb3, 0xca, 0xe1, 0x72,
	0xde, 0x1e, 0x5f, 0x9d, 0x7f, 0x9b, 0x47, 0x79, 0xcd, 0xbc, 0x27, 0xb0, 0x49, 0x72, 0x24, 0xed,
	0x72, 0xef, 0x73, 0xb9, 0x53, 0xe2, 0x5f, 0xb6, 0x4a, 0x3e, 0x80, 0xa9, 0xc1, 0x4c, 0x97, 0x25,
	0x56, 0x79, 0x4a, 0x8c, 0x95, 0x0f, 0xb8, 0xf6, 0xeb, 0xb4, 0x88, 0x60, 0x3d, 0x2d, 0x1c, 0x9a,
	0x2a, 0xa5, 0xf6, 0xb4, 0xf2, 0xff, 0x9c, 0xd6, 0xe1, 0xe8, 0x50, 0x2e, 0x55, 0x8e, 0x5a, 0x3e,
	0xf4, 0x1d, 0xc4, 0x40, 0xdc, 0x87, 0xb1, 0xaa, 0xac, 0x4b, 0xed, 0x07, 0x3d, 0x97, 0xfb, 0x5e,
	0xd6, 0x86, 0xa0, 0x8e, 0x66, 0xf9, 0xcd, 0x95, 0x7c, 0xe4, 0x3b, 0x3a, 0x40, 0xf1, 0x14, 0x46,
	0xbf, 0x2c, 0xd2, 0xca, 0x29, 0x77, 0x25, 0xa3, 0x6b, 0x3b, 0x7f, 0x17, 0x02, 0x71, 0x93, 0xc2,
	0x37, 0xcf, 0xe0, 0xa5, 0xc2, 0x8f, 0xf2, 0xb3, 0x70, 0xf3, 0x3c, 0x8c, 0x5e, 0xc2, 0xa8, 0xd1,
	0x66, 0x03, 0x56, 0x55, 0x1e, 0x8c, 0x6e, 0x55, 0xe5, 0x7c, 0x6d, 0x8a, 0xc5, 0x2c, 0xf8, 0x08,
	0x8f, 0x69, 0x1b, 0x4e, 0xb9, 0x02, 0x83, 0x85, 0x78, 0x10, 0xfd, 0xb9, 0x02, 0xa3, 0xfa, 0xb3,
	0xe2, 0x1e, 0x8c, 0xac, 0xd3, 0x06, 0x93, 0x66, 0xb1, 0x21, 0xe3, 0xd3, 0x9c, 0xb6, 0x9b, 0x5e,
	0xa6, 0xaa, 0x48, 0xcf, 0x0a, 0x0c, 0xbe, 0xb8, 0x24, 0xa8, 0x01, 0x0d, 0x5a, 0x34, 0x97, 0x98,
	0x07, 0x7f, 0x6c, 0x70, 0xa7, 0x39, 0xd7, 0xae, 0x35, 0x67, 0x63, 0x07, 0xfd, 0xb6, 0x1d, 0x1c,
	0xc1, 0x5d, 0x1e, 0x24, 0x67, 0x78, 0x4e, 0xd5, 0x34, 0xd3, 0x07, 0x9c, 0xb5, 0xcd, 0xc1, 0x17,
	0x1c, 0x7b, 0x19, 0x42, 0xd1, 0x0f, 0x6c, 0xec, 0x06, 0x6f, 0x34, 0x76, 0x6f, 0xd7, 0x86, 0x9d,
	0xfd, 0x13, 0xbb, 0x36, 0x18, 0x87, 0x68, 0xf4, 0xd7, 0x0a, 0xdb, 0xb5, 0xc1, 0x9b, 0x14, 0x79,
	0x08, 0x13, 0xfb, 0x41, 0x1b, 0x97, 0x78, 0x55, 0xbd, 0xd4, 0xc0, 0xd4, 0x4f, 0xc4, 0xb0, 0xab,
	0xe5, 0xb9, 0x41, 0x6b, 0x83, 0xe4, 0x35, 0xe4, 0x6d, 0x7f, 0xd0, 0x15, 0x06, 0xcb, 0xf6, 0x80,
	0xac, 0x74, 0x86, 0x3a, 0xd8, 0x34, 0x0d, 0xe9, 0x18, 0x33, 0xea, 0x13, 0xef, 0xc9, 0x3c, 0x6e,
	0x77, 0xd6, 0xb0, 0xdb, 0x59, 0x3b, 0x30, 0x08, 0xae, 0x3b, 0xe2, 0x1d, 0x07, 0x14, 0xbd, 0x05,
	0xf1, 0x1e, 0x8b, 0x02, 0xcd, 0x8d, 0xda, 0x3c, 0x81, 0xa1, 0xf5, 0x59, 0x41, 0x9c, 0xe9, 0x52,
	0x1c, 0xe6, 0xe3, 0x3a, 0x1e, 0xa5, 0x30, 0xf0, 0xd4, 0x4d, 0xf2, 0xec, 0xc1, 0xd8, 0xe7, 0x53,
	0x2c, 0xfc, 0xcf, 0x3c, 0x11, 0xb4, 0xf3, 0x41, 0xf6, 0xd4, 0x5e, 0xd0, 0x8e, 0x29, 0xb2, 0xc8,
	0xa8, 0x80, 0xe9, 0x5b, 0x93, 0xa3, 0xb1, 0x6f, 0xf0, 0x63, 0xf8, 0x9d, 0x3f, 0x86, 0xbe, 0x26,
	0x8a, 0x3f, 0xd4, 0x3e, 0x3b, 0x4e, 0x8c, 0x7d, 0x90, 0x44, 0xb0, 0x7a, 0x61, 0xb2, 0xfa, 0x40,
	0x02, 0xea, 0x96, 0xd3, 0xeb, 0x96, 0x13, 0xfd, 0xb1, 0x02, 0x7d, 0x5e, 0x85, 0xd2, 0x8a, 0xd4,
	0x86, 0x1f, 0xa6, 0xff, 0x41, 0x8f, 0x88, 0x60, 0x93, 0x7f, 0x00, 0x70, 0xae, 0x4c, 0x1d, 0xf5,
	0xeb, 0x8f, 0x99, 0xe1, 0x70, 0x73, 0xaa, 0xbd, 0xf6, 0xa9, 0xde, 0x81, 0x3e, 0x96, 0xa9, 0x2a,
	0xea, 0xb3, 0x66, 0xd0, 0x11, 0xae, 0xdf, 0x15, 0xee, 0x00, 0xfa, 0xca, 0x61, 0x69, 0xe5, 0x80,
	0x8f, 0x41, 0x74, 0xf7, 0x79, 0xea, 0xb0, 0x8c, 0x7d, 0x42, 0xf4, 0x1a, 0xc6, 0x0d, 0xd7, 0xb2,
	0x80, 0x31, 0x5b, 0xc0, 0x6e, 0xcb, 0x67, 0xfc, 0x7d, 0x5d, 0x9a, 0x4a, 0x73, 0xed, 0xa8, 0xd2,
	0xd5, 0x70, 0xed, 0xa2, 0x0b, 0xd8, 0x6a, 0x34, 0xff, 0xcf, 0x36, 0xb9, 0x07, 0x23, 0x16, 0x7a,
	0x79, 0xaa, 0x43, 0xc6, 0xa7, 0xb9, 0xf8, 0x12, 0x06, 0x68, 0x8c, 0x36, 0xd4, 0xee, 0x54, 0xf9,
	0x76, 0xb7, 0xf2, 0x63, 0x8a, 0xc5, 0x21, 0x25, 0xfa, 0x7d, 0x05, 0x60, 0x49, 0x73, 0xa7, 0xd7,
	0x6f, 0xa2, 0x7e, 0xcc, 0x63, 0xea, 0xf4, 0x12, 0xad, 0xa5, 0x37, 0x57, 0xf8, 0x52, 0x80, 0xdd,
	0xfa, 0xc7, 0xb5, 0x6d, 0x3c, 0x05, 0xd1, 0x38, 0x52, 0xd2, 0xec, 0xdd, 0x5b, 0xce, 0x56, 0x13,
	0x79, 0xd7, 0x72, 0xd6, 0xfa, 0x25, 0x46, 0x27, 0xd0, 0x6b, 0x5e, 0x62, 0x47, 0x27, 0x30, 0xf0,
	0x8f, 0x44, 0xf1, 0x1d, 0xf4, 0x4e, 0xd0, 0x09, 0xd9, 0x7d, 0xd6, 0x2d, 0xdf, 0x98, 0xbb, 0xbb,
	0x9f, 0x46, 0x6a, 0xe9, 0xa2, 0x5b, 0x47, 0xc7, 0xbc, 0x90, 0x41, 0x2b, 0xbe, 0xf1, 0x0b, 0xed,
	0x1c, 0xfa, 0x37, 0xec, 0x61, 0xfd, 0x86, 0x3d, 0x3c, 0xa6, 0x37, 0x6c, 0x77, 0x99, 0xae, 0x89,
	0x45, 0xb7, 0x8e, 0x4e, 0x60, 0x18, 0x2e, 0xb0, 0xf8, 0xf6, 0xe6, 0x75, 0xf6, 0xae, 0xdd, 0xd9,
	0x6b, 0x0b, 0xbd, 0x82, 0x81, 0x3f, 0x61, 0xf1, 0x02, 0x46, 0x6f, 0xf0, 0xa3, 0xef, 0x79, 0xd9,
	0x3d, 0xa7, 0xe5, 0x95, 0x6b, 0x95, 0xf5, 0x49, 0x63, 0x44, 0xb7, 0x5e, 0xac, 0xff, 0x0c, 0xb3,
	0xe6, 0xb1, 0x7e, 0x36, 0xe0, 0x52, 0xbe, 0xfa, 0x27, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x4c, 0x98,
	0x3e, 0xc4, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StocksClient is the client API for Stocks service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StocksClient interface {
	Get(ctx context.Context, in *StocksGetParams, opts ...grpc.CallOption) (*StocksGetResponse, error)
}

type stocksClient struct {
	cc *grpc.ClientConn
}

func NewStocksClient(cc *grpc.ClientConn) StocksClient {
	return &stocksClient{cc}
}

func (c *stocksClient) Get(ctx context.Context, in *StocksGetParams, opts ...grpc.CallOption) (*StocksGetResponse, error) {
	out := new(StocksGetResponse)
	err := c.cc.Invoke(ctx, "/mercaux.Stocks/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StocksServer is the server API for Stocks service.
type StocksServer interface {
	Get(context.Context, *StocksGetParams) (*StocksGetResponse, error)
}

// UnimplementedStocksServer can be embedded to have forward compatible implementations.
type UnimplementedStocksServer struct {
}

func (*UnimplementedStocksServer) Get(ctx context.Context, req *StocksGetParams) (*StocksGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterStocksServer(s *grpc.Server, srv StocksServer) {
	s.RegisterService(&_Stocks_serviceDesc, srv)
}

func _Stocks_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StocksGetParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StocksServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mercaux.Stocks/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StocksServer).Get(ctx, req.(*StocksGetParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stocks_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mercaux.Stocks",
	HandlerType: (*StocksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Stocks_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mercaux.proto",
}

// StoresClient is the client API for Stores service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoresClient interface {
	Get(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StoresGetResponse, error)
}

type storesClient struct {
	cc *grpc.ClientConn
}

func NewStoresClient(cc *grpc.ClientConn) StoresClient {
	return &storesClient{cc}
}

func (c *storesClient) Get(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*StoresGetResponse, error) {
	out := new(StoresGetResponse)
	err := c.cc.Invoke(ctx, "/mercaux.Stores/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoresServer is the server API for Stores service.
type StoresServer interface {
	Get(context.Context, *empty.Empty) (*StoresGetResponse, error)
}

// UnimplementedStoresServer can be embedded to have forward compatible implementations.
type UnimplementedStoresServer struct {
}

func (*UnimplementedStoresServer) Get(ctx context.Context, req *empty.Empty) (*StoresGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterStoresServer(s *grpc.Server, srv StoresServer) {
	s.RegisterService(&_Stores_serviceDesc, srv)
}

func _Stores_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoresServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mercaux.Stores/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoresServer).Get(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Stores_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mercaux.Stores",
	HandlerType: (*StoresServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Stores_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mercaux.proto",
}

// SellersClient is the client API for Sellers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SellersClient interface {
	Get(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SellersGetResponse, error)
}

type sellersClient struct {
	cc *grpc.ClientConn
}

func NewSellersClient(cc *grpc.ClientConn) SellersClient {
	return &sellersClient{cc}
}

func (c *sellersClient) Get(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SellersGetResponse, error) {
	out := new(SellersGetResponse)
	err := c.cc.Invoke(ctx, "/mercaux.Sellers/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SellersServer is the server API for Sellers service.
type SellersServer interface {
	Get(context.Context, *empty.Empty) (*SellersGetResponse, error)
}

// UnimplementedSellersServer can be embedded to have forward compatible implementations.
type UnimplementedSellersServer struct {
}

func (*UnimplementedSellersServer) Get(ctx context.Context, req *empty.Empty) (*SellersGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterSellersServer(s *grpc.Server, srv SellersServer) {
	s.RegisterService(&_Sellers_serviceDesc, srv)
}

func _Sellers_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SellersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mercaux.Sellers/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SellersServer).Get(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sellers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mercaux.Sellers",
	HandlerType: (*SellersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Sellers_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mercaux.proto",
}

// OrdersClient is the client API for Orders service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrdersClient interface {
	NewOrder(ctx context.Context, in *OrdersNewParams, opts ...grpc.CallOption) (*OrdersNewResponse, error)
}

type ordersClient struct {
	cc *grpc.ClientConn
}

func NewOrdersClient(cc *grpc.ClientConn) OrdersClient {
	return &ordersClient{cc}
}

func (c *ordersClient) NewOrder(ctx context.Context, in *OrdersNewParams, opts ...grpc.CallOption) (*OrdersNewResponse, error) {
	out := new(OrdersNewResponse)
	err := c.cc.Invoke(ctx, "/mercaux.Orders/NewOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrdersServer is the server API for Orders service.
type OrdersServer interface {
	NewOrder(context.Context, *OrdersNewParams) (*OrdersNewResponse, error)
}

// UnimplementedOrdersServer can be embedded to have forward compatible implementations.
type UnimplementedOrdersServer struct {
}

func (*UnimplementedOrdersServer) NewOrder(ctx context.Context, req *OrdersNewParams) (*OrdersNewResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewOrder not implemented")
}

func RegisterOrdersServer(s *grpc.Server, srv OrdersServer) {
	s.RegisterService(&_Orders_serviceDesc, srv)
}

func _Orders_NewOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrdersNewParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrdersServer).NewOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mercaux.Orders/NewOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrdersServer).NewOrder(ctx, req.(*OrdersNewParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Orders_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mercaux.Orders",
	HandlerType: (*OrdersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewOrder",
			Handler:    _Orders_NewOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mercaux.proto",
}
