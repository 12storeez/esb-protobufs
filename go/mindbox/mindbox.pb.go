// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/mindbox.proto

package mindbox

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type IsUserExistParams struct {
	MobilePhone          string   `protobuf:"bytes,1,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsUserExistParams) Reset()         { *m = IsUserExistParams{} }
func (m *IsUserExistParams) String() string { return proto.CompactTextString(m) }
func (*IsUserExistParams) ProtoMessage()    {}
func (*IsUserExistParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{0}
}

func (m *IsUserExistParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsUserExistParams.Unmarshal(m, b)
}
func (m *IsUserExistParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsUserExistParams.Marshal(b, m, deterministic)
}
func (m *IsUserExistParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsUserExistParams.Merge(m, src)
}
func (m *IsUserExistParams) XXX_Size() int {
	return xxx_messageInfo_IsUserExistParams.Size(m)
}
func (m *IsUserExistParams) XXX_DiscardUnknown() {
	xxx_messageInfo_IsUserExistParams.DiscardUnknown(m)
}

var xxx_messageInfo_IsUserExistParams proto.InternalMessageInfo

func (m *IsUserExistParams) GetMobilePhone() string {
	if m != nil {
		return m.MobilePhone
	}
	return ""
}

type IsUserExistResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IsUserExistResponse) Reset()         { *m = IsUserExistResponse{} }
func (m *IsUserExistResponse) String() string { return proto.CompactTextString(m) }
func (*IsUserExistResponse) ProtoMessage()    {}
func (*IsUserExistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{1}
}

func (m *IsUserExistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IsUserExistResponse.Unmarshal(m, b)
}
func (m *IsUserExistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IsUserExistResponse.Marshal(b, m, deterministic)
}
func (m *IsUserExistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IsUserExistResponse.Merge(m, src)
}
func (m *IsUserExistResponse) XXX_Size() int {
	return xxx_messageInfo_IsUserExistResponse.Size(m)
}
func (m *IsUserExistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IsUserExistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IsUserExistResponse proto.InternalMessageInfo

func (m *IsUserExistResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *IsUserExistResponse) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type InitDeviceParams struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ApnsToken            string   `protobuf:"bytes,2,opt,name=apns_token,json=apnsToken,proto3" json:"apns_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitDeviceParams) Reset()         { *m = InitDeviceParams{} }
func (m *InitDeviceParams) String() string { return proto.CompactTextString(m) }
func (*InitDeviceParams) ProtoMessage()    {}
func (*InitDeviceParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{2}
}

func (m *InitDeviceParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitDeviceParams.Unmarshal(m, b)
}
func (m *InitDeviceParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitDeviceParams.Marshal(b, m, deterministic)
}
func (m *InitDeviceParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitDeviceParams.Merge(m, src)
}
func (m *InitDeviceParams) XXX_Size() int {
	return xxx_messageInfo_InitDeviceParams.Size(m)
}
func (m *InitDeviceParams) XXX_DiscardUnknown() {
	xxx_messageInfo_InitDeviceParams.DiscardUnknown(m)
}

var xxx_messageInfo_InitDeviceParams proto.InternalMessageInfo

func (m *InitDeviceParams) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *InitDeviceParams) GetApnsToken() string {
	if m != nil {
		return m.ApnsToken
	}
	return ""
}

type InitDeviceResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitDeviceResponse) Reset()         { *m = InitDeviceResponse{} }
func (m *InitDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*InitDeviceResponse) ProtoMessage()    {}
func (*InitDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{3}
}

func (m *InitDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitDeviceResponse.Unmarshal(m, b)
}
func (m *InitDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitDeviceResponse.Marshal(b, m, deterministic)
}
func (m *InitDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitDeviceResponse.Merge(m, src)
}
func (m *InitDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_InitDeviceResponse.Size(m)
}
func (m *InitDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitDeviceResponse proto.InternalMessageInfo

func (m *InitDeviceResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type InitClientParams struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitClientParams) Reset()         { *m = InitClientParams{} }
func (m *InitClientParams) String() string { return proto.CompactTextString(m) }
func (*InitClientParams) ProtoMessage()    {}
func (*InitClientParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{4}
}

func (m *InitClientParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitClientParams.Unmarshal(m, b)
}
func (m *InitClientParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitClientParams.Marshal(b, m, deterministic)
}
func (m *InitClientParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitClientParams.Merge(m, src)
}
func (m *InitClientParams) XXX_Size() int {
	return xxx_messageInfo_InitClientParams.Size(m)
}
func (m *InitClientParams) XXX_DiscardUnknown() {
	xxx_messageInfo_InitClientParams.DiscardUnknown(m)
}

var xxx_messageInfo_InitClientParams proto.InternalMessageInfo

func (m *InitClientParams) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *InitClientParams) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type InitClientResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InitClientResponse) Reset()         { *m = InitClientResponse{} }
func (m *InitClientResponse) String() string { return proto.CompactTextString(m) }
func (*InitClientResponse) ProtoMessage()    {}
func (*InitClientResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{5}
}

func (m *InitClientResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InitClientResponse.Unmarshal(m, b)
}
func (m *InitClientResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InitClientResponse.Marshal(b, m, deterministic)
}
func (m *InitClientResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InitClientResponse.Merge(m, src)
}
func (m *InitClientResponse) XXX_Size() int {
	return xxx_messageInfo_InitClientResponse.Size(m)
}
func (m *InitClientResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InitClientResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InitClientResponse proto.InternalMessageInfo

func (m *InitClientResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ParamsUser struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamsUser) Reset()         { *m = ParamsUser{} }
func (m *ParamsUser) String() string { return proto.CompactTextString(m) }
func (*ParamsUser) ProtoMessage()    {}
func (*ParamsUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{6}
}

func (m *ParamsUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamsUser.Unmarshal(m, b)
}
func (m *ParamsUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamsUser.Marshal(b, m, deterministic)
}
func (m *ParamsUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsUser.Merge(m, src)
}
func (m *ParamsUser) XXX_Size() int {
	return xxx_messageInfo_ParamsUser.Size(m)
}
func (m *ParamsUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsUser.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsUser proto.InternalMessageInfo

func (m *ParamsUser) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type ResponseUser struct {
	FirstName            string   `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string   `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	BonusTotal           int32    `protobuf:"varint,5,opt,name=bonus_total,json=bonusTotal,proto3" json:"bonus_total,omitempty"`
	BonusAvailable       int32    `protobuf:"varint,6,opt,name=bonus_available,json=bonusAvailable,proto3" json:"bonus_available,omitempty"`
	BonusBlocked         int32    `protobuf:"varint,7,opt,name=bonus_blocked,json=bonusBlocked,proto3" json:"bonus_blocked,omitempty"`
	TotalPaidAmount      float64  `protobuf:"fixed64,8,opt,name=total_paid_amount,json=totalPaidAmount,proto3" json:"total_paid_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseUser) Reset()         { *m = ResponseUser{} }
func (m *ResponseUser) String() string { return proto.CompactTextString(m) }
func (*ResponseUser) ProtoMessage()    {}
func (*ResponseUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{7}
}

func (m *ResponseUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseUser.Unmarshal(m, b)
}
func (m *ResponseUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseUser.Marshal(b, m, deterministic)
}
func (m *ResponseUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseUser.Merge(m, src)
}
func (m *ResponseUser) XXX_Size() int {
	return xxx_messageInfo_ResponseUser.Size(m)
}
func (m *ResponseUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseUser.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseUser proto.InternalMessageInfo

func (m *ResponseUser) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *ResponseUser) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *ResponseUser) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ResponseUser) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ResponseUser) GetBonusTotal() int32 {
	if m != nil {
		return m.BonusTotal
	}
	return 0
}

func (m *ResponseUser) GetBonusAvailable() int32 {
	if m != nil {
		return m.BonusAvailable
	}
	return 0
}

func (m *ResponseUser) GetBonusBlocked() int32 {
	if m != nil {
		return m.BonusBlocked
	}
	return 0
}

func (m *ResponseUser) GetTotalPaidAmount() float64 {
	if m != nil {
		return m.TotalPaidAmount
	}
	return 0
}

type ParamsOrders struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamsOrders) Reset()         { *m = ParamsOrders{} }
func (m *ParamsOrders) String() string { return proto.CompactTextString(m) }
func (*ParamsOrders) ProtoMessage()    {}
func (*ParamsOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{8}
}

func (m *ParamsOrders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamsOrders.Unmarshal(m, b)
}
func (m *ParamsOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamsOrders.Marshal(b, m, deterministic)
}
func (m *ParamsOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsOrders.Merge(m, src)
}
func (m *ParamsOrders) XXX_Size() int {
	return xxx_messageInfo_ParamsOrders.Size(m)
}
func (m *ParamsOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsOrders.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsOrders proto.InternalMessageInfo

func (m *ParamsOrders) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type ResponseOrders struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Result               []*Order `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseOrders) Reset()         { *m = ResponseOrders{} }
func (m *ResponseOrders) String() string { return proto.CompactTextString(m) }
func (*ResponseOrders) ProtoMessage()    {}
func (*ResponseOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{9}
}

func (m *ResponseOrders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseOrders.Unmarshal(m, b)
}
func (m *ResponseOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseOrders.Marshal(b, m, deterministic)
}
func (m *ResponseOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseOrders.Merge(m, src)
}
func (m *ResponseOrders) XXX_Size() int {
	return xxx_messageInfo_ResponseOrders.Size(m)
}
func (m *ResponseOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseOrders.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseOrders proto.InternalMessageInfo

func (m *ResponseOrders) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ResponseOrders) GetResult() []*Order {
	if m != nil {
		return m.Result
	}
	return nil
}

type Order struct {
	OrderId               string   `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CreatedDate           string   `protobuf:"bytes,2,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	PaymentType           string   `protobuf:"bytes,3,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	DiscountedTotalPrice  float64  `protobuf:"fixed64,4,opt,name=discounted_total_price,json=discountedTotalPrice,proto3" json:"discounted_total_price,omitempty"`
	PaymentAmount         float64  `protobuf:"fixed64,5,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	AppliedDiscount       float64  `protobuf:"fixed64,6,opt,name=applied_discount,json=appliedDiscount,proto3" json:"applied_discount,omitempty"`
	AcquiredBalanceChange float64  `protobuf:"fixed64,7,opt,name=acquired_balance_change,json=acquiredBalanceChange,proto3" json:"acquired_balance_change,omitempty"`
	CreatedTs             int32    `protobuf:"varint,8,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{10}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Order) GetCreatedDate() string {
	if m != nil {
		return m.CreatedDate
	}
	return ""
}

func (m *Order) GetPaymentType() string {
	if m != nil {
		return m.PaymentType
	}
	return ""
}

func (m *Order) GetDiscountedTotalPrice() float64 {
	if m != nil {
		return m.DiscountedTotalPrice
	}
	return 0
}

func (m *Order) GetPaymentAmount() float64 {
	if m != nil {
		return m.PaymentAmount
	}
	return 0
}

func (m *Order) GetAppliedDiscount() float64 {
	if m != nil {
		return m.AppliedDiscount
	}
	return 0
}

func (m *Order) GetAcquiredBalanceChange() float64 {
	if m != nil {
		return m.AcquiredBalanceChange
	}
	return 0
}

func (m *Order) GetCreatedTs() int32 {
	if m != nil {
		return m.CreatedTs
	}
	return 0
}

type ParamsCode struct {
	MobilePhone          string   `protobuf:"bytes,1,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamsCode) Reset()         { *m = ParamsCode{} }
func (m *ParamsCode) String() string { return proto.CompactTextString(m) }
func (*ParamsCode) ProtoMessage()    {}
func (*ParamsCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{11}
}

func (m *ParamsCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamsCode.Unmarshal(m, b)
}
func (m *ParamsCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamsCode.Marshal(b, m, deterministic)
}
func (m *ParamsCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsCode.Merge(m, src)
}
func (m *ParamsCode) XXX_Size() int {
	return xxx_messageInfo_ParamsCode.Size(m)
}
func (m *ParamsCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsCode.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsCode proto.InternalMessageInfo

func (m *ParamsCode) GetMobilePhone() string {
	if m != nil {
		return m.MobilePhone
	}
	return ""
}

type ResponseCode struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseCode) Reset()         { *m = ResponseCode{} }
func (m *ResponseCode) String() string { return proto.CompactTextString(m) }
func (*ResponseCode) ProtoMessage()    {}
func (*ResponseCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{12}
}

func (m *ResponseCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseCode.Unmarshal(m, b)
}
func (m *ResponseCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseCode.Marshal(b, m, deterministic)
}
func (m *ResponseCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseCode.Merge(m, src)
}
func (m *ResponseCode) XXX_Size() int {
	return xxx_messageInfo_ResponseCode.Size(m)
}
func (m *ResponseCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseCode.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseCode proto.InternalMessageInfo

func (m *ResponseCode) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ParamsCheckCode struct {
	MobilePhone          string   `protobuf:"bytes,1,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamsCheckCode) Reset()         { *m = ParamsCheckCode{} }
func (m *ParamsCheckCode) String() string { return proto.CompactTextString(m) }
func (*ParamsCheckCode) ProtoMessage()    {}
func (*ParamsCheckCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{13}
}

func (m *ParamsCheckCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamsCheckCode.Unmarshal(m, b)
}
func (m *ParamsCheckCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamsCheckCode.Marshal(b, m, deterministic)
}
func (m *ParamsCheckCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsCheckCode.Merge(m, src)
}
func (m *ParamsCheckCode) XXX_Size() int {
	return xxx_messageInfo_ParamsCheckCode.Size(m)
}
func (m *ParamsCheckCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsCheckCode.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsCheckCode proto.InternalMessageInfo

func (m *ParamsCheckCode) GetMobilePhone() string {
	if m != nil {
		return m.MobilePhone
	}
	return ""
}

func (m *ParamsCheckCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ResponseCheckCode struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ClientId             string   `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	MindboxId            int32    `protobuf:"varint,4,opt,name=mindbox_id,json=mindboxId,proto3" json:"mindbox_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseCheckCode) Reset()         { *m = ResponseCheckCode{} }
func (m *ResponseCheckCode) String() string { return proto.CompactTextString(m) }
func (*ResponseCheckCode) ProtoMessage()    {}
func (*ResponseCheckCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{14}
}

func (m *ResponseCheckCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseCheckCode.Unmarshal(m, b)
}
func (m *ResponseCheckCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseCheckCode.Marshal(b, m, deterministic)
}
func (m *ResponseCheckCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseCheckCode.Merge(m, src)
}
func (m *ResponseCheckCode) XXX_Size() int {
	return xxx_messageInfo_ResponseCheckCode.Size(m)
}
func (m *ResponseCheckCode) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseCheckCode.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseCheckCode proto.InternalMessageInfo

func (m *ResponseCheckCode) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *ResponseCheckCode) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ResponseCheckCode) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ResponseCheckCode) GetMindboxId() int32 {
	if m != nil {
		return m.MindboxId
	}
	return 0
}

type ParamsEditUser struct {
	DeviceUuid           string   `protobuf:"bytes,1,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	MobilePhone          string   `protobuf:"bytes,3,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamsEditUser) Reset()         { *m = ParamsEditUser{} }
func (m *ParamsEditUser) String() string { return proto.CompactTextString(m) }
func (*ParamsEditUser) ProtoMessage()    {}
func (*ParamsEditUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{15}
}

func (m *ParamsEditUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamsEditUser.Unmarshal(m, b)
}
func (m *ParamsEditUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamsEditUser.Marshal(b, m, deterministic)
}
func (m *ParamsEditUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsEditUser.Merge(m, src)
}
func (m *ParamsEditUser) XXX_Size() int {
	return xxx_messageInfo_ParamsEditUser.Size(m)
}
func (m *ParamsEditUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsEditUser.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsEditUser proto.InternalMessageInfo

func (m *ParamsEditUser) GetDeviceUuid() string {
	if m != nil {
		return m.DeviceUuid
	}
	return ""
}

func (m *ParamsEditUser) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ParamsEditUser) GetMobilePhone() string {
	if m != nil {
		return m.MobilePhone
	}
	return ""
}

type ResponseEditUser struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseEditUser) Reset()         { *m = ResponseEditUser{} }
func (m *ResponseEditUser) String() string { return proto.CompactTextString(m) }
func (*ResponseEditUser) ProtoMessage()    {}
func (*ResponseEditUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{16}
}

func (m *ResponseEditUser) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseEditUser.Unmarshal(m, b)
}
func (m *ResponseEditUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseEditUser.Marshal(b, m, deterministic)
}
func (m *ResponseEditUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseEditUser.Merge(m, src)
}
func (m *ResponseEditUser) XXX_Size() int {
	return xxx_messageInfo_ResponseEditUser.Size(m)
}
func (m *ResponseEditUser) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseEditUser.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseEditUser proto.InternalMessageInfo

func (m *ResponseEditUser) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type ParamsOSMICard struct {
	ClientId             string   `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ParamsOSMICard) Reset()         { *m = ParamsOSMICard{} }
func (m *ParamsOSMICard) String() string { return proto.CompactTextString(m) }
func (*ParamsOSMICard) ProtoMessage()    {}
func (*ParamsOSMICard) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{17}
}

func (m *ParamsOSMICard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParamsOSMICard.Unmarshal(m, b)
}
func (m *ParamsOSMICard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParamsOSMICard.Marshal(b, m, deterministic)
}
func (m *ParamsOSMICard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParamsOSMICard.Merge(m, src)
}
func (m *ParamsOSMICard) XXX_Size() int {
	return xxx_messageInfo_ParamsOSMICard.Size(m)
}
func (m *ParamsOSMICard) XXX_DiscardUnknown() {
	xxx_messageInfo_ParamsOSMICard.DiscardUnknown(m)
}

var xxx_messageInfo_ParamsOSMICard proto.InternalMessageInfo

func (m *ParamsOSMICard) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type ResponseOSMICard struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResponseOSMICard) Reset()         { *m = ResponseOSMICard{} }
func (m *ResponseOSMICard) String() string { return proto.CompactTextString(m) }
func (*ResponseOSMICard) ProtoMessage()    {}
func (*ResponseOSMICard) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{18}
}

func (m *ResponseOSMICard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResponseOSMICard.Unmarshal(m, b)
}
func (m *ResponseOSMICard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResponseOSMICard.Marshal(b, m, deterministic)
}
func (m *ResponseOSMICard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResponseOSMICard.Merge(m, src)
}
func (m *ResponseOSMICard) XXX_Size() int {
	return xxx_messageInfo_ResponseOSMICard.Size(m)
}
func (m *ResponseOSMICard) XXX_DiscardUnknown() {
	xxx_messageInfo_ResponseOSMICard.DiscardUnknown(m)
}

var xxx_messageInfo_ResponseOSMICard proto.InternalMessageInfo

func (m *ResponseOSMICard) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type RemoveDeviceParams struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDeviceParams) Reset()         { *m = RemoveDeviceParams{} }
func (m *RemoveDeviceParams) String() string { return proto.CompactTextString(m) }
func (*RemoveDeviceParams) ProtoMessage()    {}
func (*RemoveDeviceParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{19}
}

func (m *RemoveDeviceParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDeviceParams.Unmarshal(m, b)
}
func (m *RemoveDeviceParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDeviceParams.Marshal(b, m, deterministic)
}
func (m *RemoveDeviceParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDeviceParams.Merge(m, src)
}
func (m *RemoveDeviceParams) XXX_Size() int {
	return xxx_messageInfo_RemoveDeviceParams.Size(m)
}
func (m *RemoveDeviceParams) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDeviceParams.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDeviceParams proto.InternalMessageInfo

func (m *RemoveDeviceParams) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

type RemoveDeviceResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveDeviceResponse) Reset()         { *m = RemoveDeviceResponse{} }
func (m *RemoveDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveDeviceResponse) ProtoMessage()    {}
func (*RemoveDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c1ddbb12eed38be6, []int{20}
}

func (m *RemoveDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveDeviceResponse.Unmarshal(m, b)
}
func (m *RemoveDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveDeviceResponse.Marshal(b, m, deterministic)
}
func (m *RemoveDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveDeviceResponse.Merge(m, src)
}
func (m *RemoveDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveDeviceResponse.Size(m)
}
func (m *RemoveDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveDeviceResponse proto.InternalMessageInfo

func (m *RemoveDeviceResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*IsUserExistParams)(nil), "mindbox.IsUserExistParams")
	proto.RegisterType((*IsUserExistResponse)(nil), "mindbox.IsUserExistResponse")
	proto.RegisterType((*InitDeviceParams)(nil), "mindbox.InitDeviceParams")
	proto.RegisterType((*InitDeviceResponse)(nil), "mindbox.InitDeviceResponse")
	proto.RegisterType((*InitClientParams)(nil), "mindbox.InitClientParams")
	proto.RegisterType((*InitClientResponse)(nil), "mindbox.InitClientResponse")
	proto.RegisterType((*ParamsUser)(nil), "mindbox.ParamsUser")
	proto.RegisterType((*ResponseUser)(nil), "mindbox.ResponseUser")
	proto.RegisterType((*ParamsOrders)(nil), "mindbox.ParamsOrders")
	proto.RegisterType((*ResponseOrders)(nil), "mindbox.ResponseOrders")
	proto.RegisterType((*Order)(nil), "mindbox.Order")
	proto.RegisterType((*ParamsCode)(nil), "mindbox.ParamsCode")
	proto.RegisterType((*ResponseCode)(nil), "mindbox.ResponseCode")
	proto.RegisterType((*ParamsCheckCode)(nil), "mindbox.ParamsCheckCode")
	proto.RegisterType((*ResponseCheckCode)(nil), "mindbox.ResponseCheckCode")
	proto.RegisterType((*ParamsEditUser)(nil), "mindbox.ParamsEditUser")
	proto.RegisterType((*ResponseEditUser)(nil), "mindbox.ResponseEditUser")
	proto.RegisterType((*ParamsOSMICard)(nil), "mindbox.ParamsOSMICard")
	proto.RegisterType((*ResponseOSMICard)(nil), "mindbox.ResponseOSMICard")
	proto.RegisterType((*RemoveDeviceParams)(nil), "mindbox.RemoveDeviceParams")
	proto.RegisterType((*RemoveDeviceResponse)(nil), "mindbox.RemoveDeviceResponse")
}

func init() { proto.RegisterFile("proto/mindbox.proto", fileDescriptor_c1ddbb12eed38be6) }

var fileDescriptor_c1ddbb12eed38be6 = []byte{
	// 948 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xcd, 0x72, 0xdb, 0x36,
	0x10, 0x16, 0xf5, 0x67, 0x69, 0xa5, 0xc8, 0x36, 0x6c, 0xc7, 0x8a, 0x5c, 0x37, 0x2e, 0xda, 0xa6,
	0x4e, 0x3b, 0x4d, 0xa6, 0xae, 0x27, 0x87, 0x9e, 0x1a, 0xcb, 0xe9, 0x54, 0x33, 0x89, 0xe3, 0x61,
	0x9c, 0x4b, 0x2f, 0x1c, 0x88, 0x40, 0x62, 0x8c, 0xf8, 0x17, 0x92, 0x72, 0xe3, 0xc7, 0xe8, 0x0b,
	0xf5, 0xda, 0xb7, 0xe9, 0x33, 0x64, 0xb0, 0x00, 0x48, 0x99, 0x92, 0x3d, 0xbe, 0x11, 0xdf, 0x87,
	0xfd, 0x16, 0xbb, 0x8b, 0x5d, 0x10, 0xb6, 0x92, 0x34, 0xce, 0xe3, 0xe7, 0xa1, 0x8c, 0xf8, 0x34,
	0xfe, 0xfc, 0x0c, 0x57, 0x64, 0xcd, 0x2c, 0xe9, 0x0b, 0xd8, 0x9c, 0x64, 0xef, 0x33, 0x91, 0xbe,
	0xfa, 0x2c, 0xb3, 0xfc, 0x9c, 0xa5, 0x2c, 0xcc, 0xc8, 0x37, 0xd0, 0x0f, 0xe3, 0xa9, 0x0c, 0x84,
	0x97, 0x5c, 0xc6, 0x91, 0x18, 0x3a, 0x07, 0xce, 0x61, 0xd7, 0xed, 0x69, 0xec, 0x5c, 0x41, 0xf4,
	0x04, 0xb6, 0x16, 0xec, 0x5c, 0x91, 0x25, 0x71, 0x94, 0x09, 0x32, 0x80, 0x7a, 0x3c, 0xc3, 0xfd,
	0x1d, 0xb7, 0x1e, 0xcf, 0xc8, 0x1e, 0x74, 0xfd, 0x40, 0x8a, 0x28, 0xf7, 0x24, 0x1f, 0xd6, 0x51,
	0xa6, 0xa3, 0x81, 0x09, 0xa7, 0x67, 0xb0, 0x31, 0x89, 0x64, 0x7e, 0x2a, 0xae, 0xa4, 0x2f, 0x8c,
	0xeb, 0x3d, 0xe8, 0x72, 0x5c, 0x2b, 0x03, 0xed, 0xb7, 0xa3, 0x81, 0x09, 0x27, 0xfb, 0x00, 0x2c,
	0x89, 0x32, 0x2f, 0x8f, 0x67, 0x22, 0x32, 0x72, 0x5d, 0x85, 0x5c, 0x28, 0x80, 0x7e, 0x07, 0xa4,
	0xd4, 0xbb, 0xed, 0x48, 0xf4, 0xb5, 0xf6, 0x3a, 0xc6, 0x53, 0xdc, 0xc7, 0xeb, 0x9d, 0x31, 0x18,
	0x9f, 0x5a, 0xed, 0x56, 0x9f, 0x4f, 0x01, 0xb4, 0x27, 0x95, 0xb1, 0x9b, 0x82, 0x4e, 0x45, 0xf0,
	0x9f, 0x3a, 0xf4, 0xad, 0x0e, 0xee, 0xde, 0x07, 0xf8, 0x20, 0xd3, 0x2c, 0xf7, 0x22, 0x16, 0xda,
	0x52, 0x74, 0x11, 0x39, 0x63, 0xa1, 0x50, 0x62, 0x01, 0xb3, 0xac, 0x39, 0x9d, 0x02, 0x90, 0xdc,
	0x86, 0x96, 0x08, 0x99, 0x0c, 0x86, 0x0d, 0x24, 0xf4, 0x42, 0xa1, 0xba, 0xae, 0x4d, 0x8d, 0xe2,
	0x82, 0x3c, 0x86, 0xde, 0x34, 0x8e, 0xe6, 0x2a, 0xbb, 0x39, 0x0b, 0x86, 0xad, 0x03, 0xe7, 0xb0,
	0xe5, 0x02, 0x42, 0x17, 0x0a, 0x21, 0x3f, 0xc0, 0xba, 0xde, 0xc0, 0xae, 0x98, 0x0c, 0xd8, 0x34,
	0x10, 0xc3, 0x36, 0x6e, 0x1a, 0x20, 0xfc, 0xd2, 0xa2, 0xe4, 0x5b, 0x78, 0xa0, 0x37, 0x4e, 0x83,
	0xd8, 0x9f, 0x09, 0x3e, 0x5c, 0xc3, 0x6d, 0x7d, 0x04, 0x4f, 0x34, 0x46, 0x7e, 0x84, 0x4d, 0x74,
	0xe4, 0x25, 0x4c, 0x72, 0x8f, 0x85, 0xf1, 0x3c, 0xca, 0x87, 0x9d, 0x03, 0xe7, 0xd0, 0x71, 0xd7,
	0x91, 0x38, 0x67, 0x92, 0xbf, 0x44, 0x98, 0xfe, 0x04, 0x7d, 0x9d, 0xbe, 0xb7, 0x29, 0x17, 0x69,
	0x76, 0x77, 0x02, 0xcf, 0x60, 0x60, 0xf3, 0x67, 0xb6, 0x6f, 0x43, 0x4b, 0xc7, 0xe4, 0xe0, 0x39,
	0xf4, 0x82, 0x3c, 0x81, 0x76, 0x2a, 0xb2, 0x79, 0x90, 0x0f, 0xeb, 0x07, 0x8d, 0xc3, 0xde, 0xd1,
	0xe0, 0x99, 0x6d, 0x11, 0x34, 0x73, 0x0d, 0x4b, 0xff, 0xab, 0x43, 0x0b, 0x11, 0xf2, 0x08, 0x3a,
	0xb1, 0xfa, 0x28, 0xbd, 0xae, 0xe1, 0x7a, 0xc2, 0x55, 0xc7, 0xf8, 0xa9, 0x60, 0xb9, 0xe0, 0x1e,
	0x67, 0xb9, 0x2d, 0x44, 0xcf, 0x60, 0xa7, 0x2c, 0x17, 0x6a, 0x4b, 0xc2, 0xae, 0x43, 0x75, 0xea,
	0xfc, 0x3a, 0x11, 0xa6, 0x24, 0x3d, 0x83, 0x5d, 0x5c, 0x27, 0x82, 0x1c, 0xc3, 0x43, 0x2e, 0x33,
	0x5f, 0xc5, 0x2c, 0xb8, 0x67, 0xd2, 0x93, 0x4a, 0x5f, 0x57, 0xca, 0x71, 0xb7, 0x4b, 0x16, 0x4b,
	0x72, 0xae, 0x38, 0xf2, 0x3d, 0x0c, 0xac, 0xb0, 0x49, 0x63, 0x0b, 0x77, 0x3f, 0x30, 0xa8, 0x4e,
	0x22, 0x79, 0x0a, 0x1b, 0x2c, 0x49, 0x02, 0xa9, 0x8e, 0x68, 0x64, 0xb0, 0x7e, 0x8e, 0xbb, 0x6e,
	0xf0, 0x53, 0x03, 0x93, 0x17, 0xb0, 0xcb, 0xfc, 0x4f, 0x73, 0x99, 0x0a, 0xee, 0x4d, 0x59, 0xc0,
	0x22, 0x5f, 0x78, 0xfe, 0x25, 0x8b, 0x3e, 0x0a, 0x2c, 0xa5, 0xe3, 0xee, 0x58, 0xfa, 0x44, 0xb3,
	0x63, 0x24, 0xd5, 0x55, 0xb5, 0x59, 0xc8, 0x33, 0x2c, 0x66, 0xcb, 0xed, 0x1a, 0xe4, 0x22, 0xa3,
	0xcf, 0x6d, 0x17, 0x8c, 0x63, 0x2e, 0xee, 0x33, 0x64, 0xbe, 0x2e, 0x5b, 0x01, 0x4d, 0xaa, 0x6d,
	0xf5, 0x27, 0xac, 0x1b, 0xc1, 0x4b, 0xe1, 0xcf, 0xee, 0xa9, 0x4a, 0x08, 0x34, 0xfd, 0x98, 0xdb,
	0x1a, 0xe1, 0x37, 0xfd, 0x1b, 0x36, 0x0b, 0x4f, 0x85, 0x56, 0x75, 0x98, 0x3d, 0x84, 0x76, 0x96,
	0xb3, 0x7c, 0x9e, 0x19, 0x53, 0xb3, 0xba, 0x79, 0x1d, 0x1b, 0x37, 0xaf, 0xa3, 0xca, 0x89, 0xb9,
	0x57, 0x8a, 0x6d, 0xea, 0x9c, 0x18, 0x64, 0xc2, 0xe9, 0x27, 0x18, 0xe8, 0x10, 0x5e, 0x71, 0x99,
	0x63, 0xbf, 0x3f, 0x86, 0x9e, 0x99, 0x45, 0xf3, 0x79, 0x71, 0xd1, 0x40, 0x43, 0xef, 0xe7, 0xf2,
	0xee, 0x79, 0xb4, 0x14, 0x7f, 0x63, 0x39, 0xab, 0x14, 0x36, 0x6c, 0xac, 0x85, 0xd3, 0x6a, 0x66,
	0x7f, 0xb6, 0xc7, 0x7a, 0xfb, 0xee, 0xcd, 0x64, 0xcc, 0x52, 0x7e, 0x77, 0xcf, 0x2d, 0x48, 0x16,
	0x06, 0x55, 0xc9, 0x5f, 0x80, 0xb8, 0x22, 0x8c, 0xaf, 0xc4, 0xbd, 0xe7, 0x3d, 0x7d, 0x02, 0xdb,
	0x8b, 0x26, 0xb7, 0x8d, 0xd7, 0xa3, 0x7f, 0x1d, 0x68, 0x62, 0x18, 0xc7, 0xd0, 0x9c, 0x44, 0x1f,
	0x62, 0xb2, 0x55, 0xf4, 0x72, 0x39, 0x76, 0x47, 0x3b, 0x05, 0xb8, 0x38, 0x5f, 0x69, 0x8d, 0xfc,
	0x06, 0x6d, 0x33, 0x29, 0x76, 0x2a, 0x76, 0x1a, 0x1e, 0xed, 0x2e, 0x59, 0x6a, 0x82, 0xd6, 0xc8,
	0x29, 0xf4, 0xdf, 0x89, 0x88, 0x17, 0x51, 0xef, 0x56, 0x15, 0x0c, 0x31, 0x7a, 0xb4, 0xac, 0x61,
	0x28, 0x5a, 0x3b, 0xfa, 0xbf, 0x01, 0xed, 0x37, 0x58, 0x22, 0xf2, 0x07, 0x40, 0xf9, 0x88, 0x91,
	0xd2, 0xaa, 0xfa, 0x52, 0x8e, 0xf6, 0x56, 0x50, 0x56, 0x9a, 0xd6, 0xac, 0x8e, 0x7e, 0x98, 0x2a,
	0x3a, 0x8b, 0x6f, 0x5f, 0x45, 0xe7, 0xe6, 0x43, 0x46, 0x6b, 0xe4, 0xb5, 0xea, 0xc1, 0xb2, 0x06,
	0x64, 0x6f, 0x21, 0x8e, 0x6a, 0x35, 0x47, 0xfb, 0x2b, 0xc9, 0x05, 0xb5, 0x63, 0x68, 0x62, 0x6b,
	0x55, 0x0b, 0xa4, 0xc0, 0x15, 0x05, 0x52, 0x30, 0xad, 0x91, 0x31, 0x74, 0xcb, 0xae, 0x1c, 0x56,
	0x4d, 0x2d, 0x33, 0x1a, 0x2d, 0xdb, 0x5b, 0x8e, 0xd6, 0xc8, 0xef, 0xd0, 0x29, 0xae, 0x7b, 0xb5,
	0x4a, 0x96, 0x58, 0x51, 0x25, 0x4b, 0xd1, 0x1a, 0x99, 0x40, 0x6f, 0xe1, 0x9f, 0x87, 0x94, 0xee,
	0x96, 0xfe, 0xa0, 0x46, 0x5f, 0xad, 0xe2, 0xca, 0x3c, 0x9c, 0xf4, 0xff, 0x82, 0x8f, 0xc5, 0x3f,
	0xd9, 0xb4, 0x8d, 0x3f, 0x65, 0xbf, 0x7e, 0x09, 0x00, 0x00, 0xff, 0xff, 0x7e, 0x64, 0x59, 0xe0,
	0xab, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	Info(ctx context.Context, in *ParamsUser, opts ...grpc.CallOption) (*ResponseUser, error)
	Orders(ctx context.Context, in *ParamsOrders, opts ...grpc.CallOption) (*ResponseOrders, error)
	SendOSMICard(ctx context.Context, in *ParamsOSMICard, opts ...grpc.CallOption) (*ResponseOSMICard, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) Info(ctx context.Context, in *ParamsUser, opts ...grpc.CallOption) (*ResponseUser, error) {
	out := new(ResponseUser)
	err := c.cc.Invoke(ctx, "/mindbox.User/Info", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) Orders(ctx context.Context, in *ParamsOrders, opts ...grpc.CallOption) (*ResponseOrders, error) {
	out := new(ResponseOrders)
	err := c.cc.Invoke(ctx, "/mindbox.User/Orders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) SendOSMICard(ctx context.Context, in *ParamsOSMICard, opts ...grpc.CallOption) (*ResponseOSMICard, error) {
	out := new(ResponseOSMICard)
	err := c.cc.Invoke(ctx, "/mindbox.User/SendOSMICard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	Info(context.Context, *ParamsUser) (*ResponseUser, error)
	Orders(context.Context, *ParamsOrders) (*ResponseOrders, error)
	SendOSMICard(context.Context, *ParamsOSMICard) (*ResponseOSMICard, error)
}

// UnimplementedUserServer can be embedded to have forward compatible implementations.
type UnimplementedUserServer struct {
}

func (*UnimplementedUserServer) Info(ctx context.Context, req *ParamsUser) (*ResponseUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Info not implemented")
}
func (*UnimplementedUserServer) Orders(ctx context.Context, req *ParamsOrders) (*ResponseOrders, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Orders not implemented")
}
func (*UnimplementedUserServer) SendOSMICard(ctx context.Context, req *ParamsOSMICard) (*ResponseOSMICard, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendOSMICard not implemented")
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_Info_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamsUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Info(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.User/Info",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Info(ctx, req.(*ParamsUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_Orders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamsOrders)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).Orders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.User/Orders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).Orders(ctx, req.(*ParamsOrders))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_SendOSMICard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamsOSMICard)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).SendOSMICard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.User/SendOSMICard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).SendOSMICard(ctx, req.(*ParamsOSMICard))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mindbox.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Info",
			Handler:    _User_Info_Handler,
		},
		{
			MethodName: "Orders",
			Handler:    _User_Orders_Handler,
		},
		{
			MethodName: "SendOSMICard",
			Handler:    _User_SendOSMICard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mindbox.proto",
}

// MobileClient is the client API for Mobile service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MobileClient interface {
	InitDevice(ctx context.Context, in *InitDeviceParams, opts ...grpc.CallOption) (*InitDeviceResponse, error)
	InitClient(ctx context.Context, in *InitClientParams, opts ...grpc.CallOption) (*InitClientResponse, error)
	RemoveDevice(ctx context.Context, in *RemoveDeviceParams, opts ...grpc.CallOption) (*RemoveDeviceResponse, error)
	Code(ctx context.Context, in *ParamsCode, opts ...grpc.CallOption) (*ResponseCode, error)
	CheckCode(ctx context.Context, in *ParamsCheckCode, opts ...grpc.CallOption) (*ResponseCheckCode, error)
	EditUser(ctx context.Context, in *ParamsEditUser, opts ...grpc.CallOption) (*ResponseEditUser, error)
	IsUserExist(ctx context.Context, in *IsUserExistParams, opts ...grpc.CallOption) (*IsUserExistResponse, error)
}

type mobileClient struct {
	cc *grpc.ClientConn
}

func NewMobileClient(cc *grpc.ClientConn) MobileClient {
	return &mobileClient{cc}
}

func (c *mobileClient) InitDevice(ctx context.Context, in *InitDeviceParams, opts ...grpc.CallOption) (*InitDeviceResponse, error) {
	out := new(InitDeviceResponse)
	err := c.cc.Invoke(ctx, "/mindbox.Mobile/InitDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileClient) InitClient(ctx context.Context, in *InitClientParams, opts ...grpc.CallOption) (*InitClientResponse, error) {
	out := new(InitClientResponse)
	err := c.cc.Invoke(ctx, "/mindbox.Mobile/InitClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileClient) RemoveDevice(ctx context.Context, in *RemoveDeviceParams, opts ...grpc.CallOption) (*RemoveDeviceResponse, error) {
	out := new(RemoveDeviceResponse)
	err := c.cc.Invoke(ctx, "/mindbox.Mobile/RemoveDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileClient) Code(ctx context.Context, in *ParamsCode, opts ...grpc.CallOption) (*ResponseCode, error) {
	out := new(ResponseCode)
	err := c.cc.Invoke(ctx, "/mindbox.Mobile/Code", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileClient) CheckCode(ctx context.Context, in *ParamsCheckCode, opts ...grpc.CallOption) (*ResponseCheckCode, error) {
	out := new(ResponseCheckCode)
	err := c.cc.Invoke(ctx, "/mindbox.Mobile/CheckCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileClient) EditUser(ctx context.Context, in *ParamsEditUser, opts ...grpc.CallOption) (*ResponseEditUser, error) {
	out := new(ResponseEditUser)
	err := c.cc.Invoke(ctx, "/mindbox.Mobile/EditUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mobileClient) IsUserExist(ctx context.Context, in *IsUserExistParams, opts ...grpc.CallOption) (*IsUserExistResponse, error) {
	out := new(IsUserExistResponse)
	err := c.cc.Invoke(ctx, "/mindbox.Mobile/IsUserExist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MobileServer is the server API for Mobile service.
type MobileServer interface {
	InitDevice(context.Context, *InitDeviceParams) (*InitDeviceResponse, error)
	InitClient(context.Context, *InitClientParams) (*InitClientResponse, error)
	RemoveDevice(context.Context, *RemoveDeviceParams) (*RemoveDeviceResponse, error)
	Code(context.Context, *ParamsCode) (*ResponseCode, error)
	CheckCode(context.Context, *ParamsCheckCode) (*ResponseCheckCode, error)
	EditUser(context.Context, *ParamsEditUser) (*ResponseEditUser, error)
	IsUserExist(context.Context, *IsUserExistParams) (*IsUserExistResponse, error)
}

// UnimplementedMobileServer can be embedded to have forward compatible implementations.
type UnimplementedMobileServer struct {
}

func (*UnimplementedMobileServer) InitDevice(ctx context.Context, req *InitDeviceParams) (*InitDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitDevice not implemented")
}
func (*UnimplementedMobileServer) InitClient(ctx context.Context, req *InitClientParams) (*InitClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitClient not implemented")
}
func (*UnimplementedMobileServer) RemoveDevice(ctx context.Context, req *RemoveDeviceParams) (*RemoveDeviceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDevice not implemented")
}
func (*UnimplementedMobileServer) Code(ctx context.Context, req *ParamsCode) (*ResponseCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Code not implemented")
}
func (*UnimplementedMobileServer) CheckCode(ctx context.Context, req *ParamsCheckCode) (*ResponseCheckCode, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckCode not implemented")
}
func (*UnimplementedMobileServer) EditUser(ctx context.Context, req *ParamsEditUser) (*ResponseEditUser, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditUser not implemented")
}
func (*UnimplementedMobileServer) IsUserExist(ctx context.Context, req *IsUserExistParams) (*IsUserExistResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsUserExist not implemented")
}

func RegisterMobileServer(s *grpc.Server, srv MobileServer) {
	s.RegisterService(&_Mobile_serviceDesc, srv)
}

func _Mobile_InitDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitDeviceParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileServer).InitDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.Mobile/InitDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileServer).InitDevice(ctx, req.(*InitDeviceParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mobile_InitClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitClientParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileServer).InitClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.Mobile/InitClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileServer).InitClient(ctx, req.(*InitClientParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mobile_RemoveDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveDeviceParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileServer).RemoveDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.Mobile/RemoveDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileServer).RemoveDevice(ctx, req.(*RemoveDeviceParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mobile_Code_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamsCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileServer).Code(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.Mobile/Code",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileServer).Code(ctx, req.(*ParamsCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mobile_CheckCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamsCheckCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileServer).CheckCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.Mobile/CheckCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileServer).CheckCode(ctx, req.(*ParamsCheckCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mobile_EditUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamsEditUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileServer).EditUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.Mobile/EditUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileServer).EditUser(ctx, req.(*ParamsEditUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Mobile_IsUserExist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IsUserExistParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MobileServer).IsUserExist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mindbox.Mobile/IsUserExist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MobileServer).IsUserExist(ctx, req.(*IsUserExistParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Mobile_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mindbox.Mobile",
	HandlerType: (*MobileServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitDevice",
			Handler:    _Mobile_InitDevice_Handler,
		},
		{
			MethodName: "InitClient",
			Handler:    _Mobile_InitClient_Handler,
		},
		{
			MethodName: "RemoveDevice",
			Handler:    _Mobile_RemoveDevice_Handler,
		},
		{
			MethodName: "Code",
			Handler:    _Mobile_Code_Handler,
		},
		{
			MethodName: "CheckCode",
			Handler:    _Mobile_CheckCode_Handler,
		},
		{
			MethodName: "EditUser",
			Handler:    _Mobile_EditUser_Handler,
		},
		{
			MethodName: "IsUserExist",
			Handler:    _Mobile_IsUserExist_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/mindbox.proto",
}
