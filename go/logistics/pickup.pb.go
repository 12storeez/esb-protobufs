// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.9
// source: pickup.proto

package logistics

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PickupId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PickupId) Reset() {
	*x = PickupId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PickupId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickupId) ProtoMessage() {}

func (x *PickupId) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickupId.ProtoReflect.Descriptor instead.
func (*PickupId) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{0}
}

func (x *PickupId) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreatePickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreCode      int32  `protobuf:"varint,1,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	DeliveryTypeId int32  `protobuf:"varint,2,opt,name=delivery_type_id,json=deliveryTypeId,proto3" json:"delivery_type_id,omitempty"`
	MaxCells       string `protobuf:"bytes,3,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
}

func (x *CreatePickupRequest) Reset() {
	*x = CreatePickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePickupRequest) ProtoMessage() {}

func (x *CreatePickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePickupRequest.ProtoReflect.Descriptor instead.
func (*CreatePickupRequest) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePickupRequest) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *CreatePickupRequest) GetDeliveryTypeId() int32 {
	if x != nil {
		return x.DeliveryTypeId
	}
	return 0
}

func (x *CreatePickupRequest) GetMaxCells() string {
	if x != nil {
		return x.MaxCells
	}
	return ""
}

type ListPickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	Sort   string `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ListPickupRequest) Reset() {
	*x = ListPickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPickupRequest) ProtoMessage() {}

func (x *ListPickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPickupRequest.ProtoReflect.Descriptor instead.
func (*ListPickupRequest) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{2}
}

func (x *ListPickupRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListPickupRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListPickupRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ListPickupRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type ListPickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Pickup `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32     `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ListPickupResponse) Reset() {
	*x = ListPickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPickupResponse) ProtoMessage() {}

func (x *ListPickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPickupResponse.ProtoReflect.Descriptor instead.
func (*ListPickupResponse) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{3}
}

func (x *ListPickupResponse) GetResults() []*Pickup {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListPickupResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Pickup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Store        *Store             `protobuf:"bytes,2,opt,name=store,proto3" json:"store,omitempty"`
	DeliveryType *DeliveryTypeShort `protobuf:"bytes,3,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	MaxCells     int32              `protobuf:"varint,4,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
	BusyCells    int32              `protobuf:"varint,5,opt,name=busy_cells,json=busyCells,proto3" json:"busy_cells,omitempty"`
	IsActive     bool               `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	CreatedAt    string             `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string             `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Pickup) Reset() {
	*x = Pickup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pickup) ProtoMessage() {}

func (x *Pickup) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pickup.ProtoReflect.Descriptor instead.
func (*Pickup) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{4}
}

func (x *Pickup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Pickup) GetStore() *Store {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *Pickup) GetDeliveryType() *DeliveryTypeShort {
	if x != nil {
		return x.DeliveryType
	}
	return nil
}

func (x *Pickup) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

func (x *Pickup) GetBusyCells() int32 {
	if x != nil {
		return x.BusyCells
	}
	return 0
}

func (x *Pickup) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Pickup) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Pickup) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type UpdatePickup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	StoreCode      int32 `protobuf:"varint,2,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	DeliveryTypeId int32 `protobuf:"varint,3,opt,name=delivery_type_id,json=deliveryTypeId,proto3" json:"delivery_type_id,omitempty"`
	MaxCells       int32 `protobuf:"varint,4,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
	BusyCells      int32 `protobuf:"varint,5,opt,name=busy_cells,json=busyCells,proto3" json:"busy_cells,omitempty"`
	IsActive       bool  `protobuf:"varint,6,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *UpdatePickup) Reset() {
	*x = UpdatePickup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePickup) ProtoMessage() {}

func (x *UpdatePickup) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePickup.ProtoReflect.Descriptor instead.
func (*UpdatePickup) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{5}
}

func (x *UpdatePickup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePickup) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *UpdatePickup) GetDeliveryTypeId() int32 {
	if x != nil {
		return x.DeliveryTypeId
	}
	return 0
}

func (x *UpdatePickup) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

func (x *UpdatePickup) GetBusyCells() int32 {
	if x != nil {
		return x.BusyCells
	}
	return 0
}

func (x *UpdatePickup) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type SuggestPickupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *SuggestPickupRequest) Reset() {
	*x = SuggestPickupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestPickupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestPickupRequest) ProtoMessage() {}

func (x *SuggestPickupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestPickupRequest.ProtoReflect.Descriptor instead.
func (*SuggestPickupRequest) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{6}
}

func (x *SuggestPickupRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SuggestPickupRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type SuggestPickup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsActive bool   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
}

func (x *SuggestPickup) Reset() {
	*x = SuggestPickup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestPickup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestPickup) ProtoMessage() {}

func (x *SuggestPickup) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestPickup.ProtoReflect.Descriptor instead.
func (*SuggestPickup) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{7}
}

func (x *SuggestPickup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SuggestPickup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SuggestPickup) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type SuggestPickupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*SuggestPickup `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32            `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SuggestPickupResponse) Reset() {
	*x = SuggestPickupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pickup_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuggestPickupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuggestPickupResponse) ProtoMessage() {}

func (x *SuggestPickupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pickup_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuggestPickupResponse.ProtoReflect.Descriptor instead.
func (*SuggestPickupResponse) Descriptor() ([]byte, []int) {
	return file_pickup_proto_rawDescGZIP(), []int{8}
}

func (x *SuggestPickupResponse) GetResults() []*SuggestPickup {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SuggestPickupResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_pickup_proto protoreflect.FileDescriptor

var file_pickup_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a, 0x08, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x7b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x22,
	0x6d, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x57,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9a, 0x02, 0x0a, 0x06, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x52,
	0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75,
	0x73, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x62, 0x75, 0x73, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x75, 0x73, 0x79, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x62, 0x75, 0x73, 0x79, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x53, 0x75, 0x67, 0x67, 0x65,
	0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x50, 0x0a,
	0x0d, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22,
	0x61, 0x0a, 0x15, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x32, 0xa2, 0x04, 0x0a, 0x0d, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6c,
	0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x10, 0x12, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x12, 0x56, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x19,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x4a, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x49, 0x64, 0x1a, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15,
	0x12, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x4e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x1a, 0x11, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a,
	0x32, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x52, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12,
	0x13, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x50, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6c, 0x0a, 0x07, 0x53, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x2e, 0x53, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x2f,
	0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x42, 0x0e, 0x5a, 0x0c, 0x67, 0x6f, 0x2f, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pickup_proto_rawDescOnce sync.Once
	file_pickup_proto_rawDescData = file_pickup_proto_rawDesc
)

func file_pickup_proto_rawDescGZIP() []byte {
	file_pickup_proto_rawDescOnce.Do(func() {
		file_pickup_proto_rawDescData = protoimpl.X.CompressGZIP(file_pickup_proto_rawDescData)
	})
	return file_pickup_proto_rawDescData
}

var file_pickup_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pickup_proto_goTypes = []interface{}{
	(*PickupId)(nil),              // 0: logistics.PickupId
	(*CreatePickupRequest)(nil),   // 1: logistics.CreatePickupRequest
	(*ListPickupRequest)(nil),     // 2: logistics.ListPickupRequest
	(*ListPickupResponse)(nil),    // 3: logistics.ListPickupResponse
	(*Pickup)(nil),                // 4: logistics.Pickup
	(*UpdatePickup)(nil),          // 5: logistics.UpdatePickup
	(*SuggestPickupRequest)(nil),  // 6: logistics.SuggestPickupRequest
	(*SuggestPickup)(nil),         // 7: logistics.SuggestPickup
	(*SuggestPickupResponse)(nil), // 8: logistics.SuggestPickupResponse
	(*Store)(nil),                 // 9: logistics.Store
	(*DeliveryTypeShort)(nil),     // 10: logistics.DeliveryTypeShort
	(*emptypb.Empty)(nil),         // 11: google.protobuf.Empty
}
var file_pickup_proto_depIdxs = []int32{
	4,  // 0: logistics.ListPickupResponse.results:type_name -> logistics.Pickup
	9,  // 1: logistics.Pickup.store:type_name -> logistics.Store
	10, // 2: logistics.Pickup.delivery_type:type_name -> logistics.DeliveryTypeShort
	7,  // 3: logistics.SuggestPickupResponse.results:type_name -> logistics.SuggestPickup
	2,  // 4: logistics.PickupService.List:input_type -> logistics.ListPickupRequest
	1,  // 5: logistics.PickupService.Create:input_type -> logistics.CreatePickupRequest
	0,  // 6: logistics.PickupService.Get:input_type -> logistics.PickupId
	4,  // 7: logistics.PickupService.Update:input_type -> logistics.Pickup
	0,  // 8: logistics.PickupService.Delete:input_type -> logistics.PickupId
	6,  // 9: logistics.PickupService.Suggest:input_type -> logistics.SuggestPickupRequest
	3,  // 10: logistics.PickupService.List:output_type -> logistics.ListPickupResponse
	4,  // 11: logistics.PickupService.Create:output_type -> logistics.Pickup
	4,  // 12: logistics.PickupService.Get:output_type -> logistics.Pickup
	4,  // 13: logistics.PickupService.Update:output_type -> logistics.Pickup
	11, // 14: logistics.PickupService.Delete:output_type -> google.protobuf.Empty
	8,  // 15: logistics.PickupService.Suggest:output_type -> logistics.SuggestPickupResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_pickup_proto_init() }
func file_pickup_proto_init() {
	if File_pickup_proto != nil {
		return
	}
	file_store_proto_init()
	file_delivery_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pickup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PickupId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pickup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pickup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pickup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pickup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pickup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pickup_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePickup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pickup_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestPickupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pickup_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestPickup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pickup_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuggestPickupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pickup_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pickup_proto_goTypes,
		DependencyIndexes: file_pickup_proto_depIdxs,
		MessageInfos:      file_pickup_proto_msgTypes,
	}.Build()
	File_pickup_proto = out.File
	file_pickup_proto_rawDesc = nil
	file_pickup_proto_goTypes = nil
	file_pickup_proto_depIdxs = nil
}
