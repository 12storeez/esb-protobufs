syntax = "proto3";

option go_package = "go/transport";

package transport;

service DeliveryMethod {
    rpc Create (DeliveryMethodAddParams) returns (DeliveryMethodID) {
    }
    rpc Get (DeliveryMethodID) returns (DeliveryMethodGetResponse) {
    }
    rpc Update (DeliveryMethodUpdateParams) returns (DeliveryMethodOkResponse) {
    }
    rpc Delete (DeliveryMethodID) returns (DeliveryMethodOkResponse) {
    }
    rpc Toggle (DeliveryMethodToggleParams) returns (DeliveryMethodOkResponse) {
    }
}

message DeliveryMethodToggleParams {
    int32 id = 1;
    bool is_active = 2;
}

enum DeliveryType {
    courier = 0;
    courierFast = 1;
    courieFitting = 2;
    pickupShop = 3;
    pickupBoxberry = 4;
}

message DeliveryMethodID {
    int32 id = 1;
}

message DeliveryMethodAddParams {
    string title = 1;
    DeliveryType type = 2;
}

message DeliveryMethodGetResponse {
    int32 id = 1;
    string title = 2;
    DeliveryType type = 3;
    bool is_active = 4;
    string created = 5;
    string updated = 6;
}

message DeliveryMethodUpdateParams {
    int32 id = 1;
    string title = 2;
    DeliveryType type = 3;
}

message DeliveryMethodOkResponse {
    bool ok = 1;
}
