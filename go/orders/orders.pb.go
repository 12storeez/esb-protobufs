// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: proto/orders.proto

package orders

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ParamsOfflineByClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId int32 `protobuf:"varint,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Limit    int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset   int32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *ParamsOfflineByClient) Reset() {
	*x = ParamsOfflineByClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orders_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsOfflineByClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsOfflineByClient) ProtoMessage() {}

func (x *ParamsOfflineByClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orders_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsOfflineByClient.ProtoReflect.Descriptor instead.
func (*ParamsOfflineByClient) Descriptor() ([]byte, []int) {
	return file_proto_orders_proto_rawDescGZIP(), []int{0}
}

func (x *ParamsOfflineByClient) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *ParamsOfflineByClient) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ParamsOfflineByClient) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ResponseOfflineByClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*OfflineOrder `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	Total  int32           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *ResponseOfflineByClient) Reset() {
	*x = ResponseOfflineByClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orders_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOfflineByClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOfflineByClient) ProtoMessage() {}

func (x *ResponseOfflineByClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orders_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOfflineByClient.ProtoReflect.Descriptor instead.
func (*ResponseOfflineByClient) Descriptor() ([]byte, []int) {
	return file_proto_orders_proto_rawDescGZIP(), []int{1}
}

func (x *ResponseOfflineByClient) GetOrders() []*OfflineOrder {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *ResponseOfflineByClient) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ParamsOnlineByClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId int32 `protobuf:"varint,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
}

func (x *ParamsOnlineByClient) Reset() {
	*x = ParamsOnlineByClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orders_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsOnlineByClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsOnlineByClient) ProtoMessage() {}

func (x *ParamsOnlineByClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orders_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsOnlineByClient.ProtoReflect.Descriptor instead.
func (*ParamsOnlineByClient) Descriptor() ([]byte, []int) {
	return file_proto_orders_proto_rawDescGZIP(), []int{2}
}

func (x *ParamsOnlineByClient) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type ResponseOnlineByClient struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order []int32 `protobuf:"varint,1,rep,packed,name=order,proto3" json:"order,omitempty"`
}

func (x *ResponseOnlineByClient) Reset() {
	*x = ResponseOnlineByClient{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orders_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOnlineByClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOnlineByClient) ProtoMessage() {}

func (x *ResponseOnlineByClient) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orders_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOnlineByClient.ProtoReflect.Descriptor instead.
func (*ResponseOnlineByClient) Descriptor() ([]byte, []int) {
	return file_proto_orders_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseOnlineByClient) GetOrder() []int32 {
	if x != nil {
		return x.Order
	}
	return nil
}

type OfflineOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreName      string `protobuf:"bytes,1,opt,name=store_name,json=storeName,proto3" json:"store_name,omitempty"`
	StoreId        int32  `protobuf:"varint,2,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	CashboxId      int32  `protobuf:"varint,3,opt,name=cashbox_id,json=cashboxId,proto3" json:"cashbox_id,omitempty"`
	OrderId        string `protobuf:"bytes,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	RowReceipt     int32  `protobuf:"varint,5,opt,name=row_receipt,json=rowReceipt,proto3" json:"row_receipt,omitempty"`
	Date           string `protobuf:"bytes,6,opt,name=date,proto3" json:"date,omitempty"`
	Time           string `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	Article        string `protobuf:"bytes,8,opt,name=article,proto3" json:"article,omitempty"`
	Title          string `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	Color          string `protobuf:"bytes,10,opt,name=color,proto3" json:"color,omitempty"`
	Size           string `protobuf:"bytes,11,opt,name=size,proto3" json:"size,omitempty"`
	Barcode        string `protobuf:"bytes,12,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Qty            int32  `protobuf:"varint,13,opt,name=qty,proto3" json:"qty,omitempty"`
	TotalGross     int32  `protobuf:"varint,14,opt,name=total_gross,json=totalGross,proto3" json:"total_gross,omitempty"`
	Discount       int32  `protobuf:"varint,15,opt,name=discount,proto3" json:"discount,omitempty"`
	Total          int32  `protobuf:"varint,16,opt,name=total,proto3" json:"total,omitempty"`
	ClientId       int32  `protobuf:"varint,17,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Seller         string `protobuf:"bytes,18,opt,name=seller,proto3" json:"seller,omitempty"`
	Family         string `protobuf:"bytes,19,opt,name=family,proto3" json:"family,omitempty"`
	Operation      int32  `protobuf:"varint,20,opt,name=operation,proto3" json:"operation,omitempty"`
	Source         string `protobuf:"bytes,21,opt,name=source,proto3" json:"source,omitempty"`
	BonusesWasted  int32  `protobuf:"varint,22,opt,name=bonuses_wasted,json=bonusesWasted,proto3" json:"bonuses_wasted,omitempty"`
	BonusesAccrued int32  `protobuf:"varint,23,opt,name=bonuses_accrued,json=bonusesAccrued,proto3" json:"bonuses_accrued,omitempty"`
}

func (x *OfflineOrder) Reset() {
	*x = OfflineOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_orders_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflineOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflineOrder) ProtoMessage() {}

func (x *OfflineOrder) ProtoReflect() protoreflect.Message {
	mi := &file_proto_orders_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflineOrder.ProtoReflect.Descriptor instead.
func (*OfflineOrder) Descriptor() ([]byte, []int) {
	return file_proto_orders_proto_rawDescGZIP(), []int{4}
}

func (x *OfflineOrder) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *OfflineOrder) GetStoreId() int32 {
	if x != nil {
		return x.StoreId
	}
	return 0
}

func (x *OfflineOrder) GetCashboxId() int32 {
	if x != nil {
		return x.CashboxId
	}
	return 0
}

func (x *OfflineOrder) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *OfflineOrder) GetRowReceipt() int32 {
	if x != nil {
		return x.RowReceipt
	}
	return 0
}

func (x *OfflineOrder) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *OfflineOrder) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *OfflineOrder) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

func (x *OfflineOrder) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OfflineOrder) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *OfflineOrder) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *OfflineOrder) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *OfflineOrder) GetQty() int32 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (x *OfflineOrder) GetTotalGross() int32 {
	if x != nil {
		return x.TotalGross
	}
	return 0
}

func (x *OfflineOrder) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *OfflineOrder) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *OfflineOrder) GetClientId() int32 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *OfflineOrder) GetSeller() string {
	if x != nil {
		return x.Seller
	}
	return ""
}

func (x *OfflineOrder) GetFamily() string {
	if x != nil {
		return x.Family
	}
	return ""
}

func (x *OfflineOrder) GetOperation() int32 {
	if x != nil {
		return x.Operation
	}
	return 0
}

func (x *OfflineOrder) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *OfflineOrder) GetBonusesWasted() int32 {
	if x != nil {
		return x.BonusesWasted
	}
	return 0
}

func (x *OfflineOrder) GetBonusesAccrued() int32 {
	if x != nil {
		return x.BonusesAccrued
	}
	return 0
}

var File_proto_orders_proto protoreflect.FileDescriptor

var file_proto_orders_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x61, 0x0a, 0x15,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22,
	0x5d, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x32,
	0x0a, 0x14, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x79,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x2e, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x22, 0xf7, 0x04, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x77, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x6f,
	0x77, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x47, 0x72, 0x6f, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x5f, 0x77, 0x61, 0x73, 0x74, 0x65, 0x64, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x57, 0x61, 0x73,
	0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x5f, 0x61,
	0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x73, 0x41, 0x63, 0x63, 0x72, 0x75, 0x65, 0x64, 0x32, 0x57, 0x0a, 0x07,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x4c, 0x0a, 0x08, 0x42, 0x79, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x1a, 0x1f, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x79, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x22, 0x00, 0x32, 0x54, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x4a, 0x0a, 0x08, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x1a, 0x1e, 0x2e, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x42, 0x79, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x42, 0x0b, 0x5a, 0x09, 0x67,
	0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_orders_proto_rawDescOnce sync.Once
	file_proto_orders_proto_rawDescData = file_proto_orders_proto_rawDesc
)

func file_proto_orders_proto_rawDescGZIP() []byte {
	file_proto_orders_proto_rawDescOnce.Do(func() {
		file_proto_orders_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_orders_proto_rawDescData)
	})
	return file_proto_orders_proto_rawDescData
}

var file_proto_orders_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_orders_proto_goTypes = []interface{}{
	(*ParamsOfflineByClient)(nil),   // 0: orders.ParamsOfflineByClient
	(*ResponseOfflineByClient)(nil), // 1: orders.ResponseOfflineByClient
	(*ParamsOnlineByClient)(nil),    // 2: orders.ParamsOnlineByClient
	(*ResponseOnlineByClient)(nil),  // 3: orders.ResponseOnlineByClient
	(*OfflineOrder)(nil),            // 4: orders.OfflineOrder
}
var file_proto_orders_proto_depIdxs = []int32{
	4, // 0: orders.ResponseOfflineByClient.orders:type_name -> orders.OfflineOrder
	0, // 1: orders.Offline.ByClient:input_type -> orders.ParamsOfflineByClient
	2, // 2: orders.Online.ByClient:input_type -> orders.ParamsOnlineByClient
	1, // 3: orders.Offline.ByClient:output_type -> orders.ResponseOfflineByClient
	3, // 4: orders.Online.ByClient:output_type -> orders.ResponseOnlineByClient
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_orders_proto_init() }
func file_proto_orders_proto_init() {
	if File_proto_orders_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_orders_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsOfflineByClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orders_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOfflineByClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orders_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsOnlineByClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orders_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOnlineByClient); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_orders_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflineOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_orders_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_orders_proto_goTypes,
		DependencyIndexes: file_proto_orders_proto_depIdxs,
		MessageInfos:      file_proto_orders_proto_msgTypes,
	}.Build()
	File_proto_orders_proto = out.File
	file_proto_orders_proto_rawDesc = nil
	file_proto_orders_proto_goTypes = nil
	file_proto_orders_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OfflineClient is the client API for Offline service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OfflineClient interface {
	ByClient(ctx context.Context, in *ParamsOfflineByClient, opts ...grpc.CallOption) (*ResponseOfflineByClient, error)
}

type offlineClient struct {
	cc grpc.ClientConnInterface
}

func NewOfflineClient(cc grpc.ClientConnInterface) OfflineClient {
	return &offlineClient{cc}
}

func (c *offlineClient) ByClient(ctx context.Context, in *ParamsOfflineByClient, opts ...grpc.CallOption) (*ResponseOfflineByClient, error) {
	out := new(ResponseOfflineByClient)
	err := c.cc.Invoke(ctx, "/orders.Offline/ByClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OfflineServer is the server API for Offline service.
type OfflineServer interface {
	ByClient(context.Context, *ParamsOfflineByClient) (*ResponseOfflineByClient, error)
}

// UnimplementedOfflineServer can be embedded to have forward compatible implementations.
type UnimplementedOfflineServer struct {
}

func (*UnimplementedOfflineServer) ByClient(context.Context, *ParamsOfflineByClient) (*ResponseOfflineByClient, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ByClient not implemented")
}

func RegisterOfflineServer(s *grpc.Server, srv OfflineServer) {
	s.RegisterService(&_Offline_serviceDesc, srv)
}

func _Offline_ByClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamsOfflineByClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OfflineServer).ByClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.Offline/ByClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OfflineServer).ByClient(ctx, req.(*ParamsOfflineByClient))
	}
	return interceptor(ctx, in, info, handler)
}

var _Offline_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orders.Offline",
	HandlerType: (*OfflineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ByClient",
			Handler:    _Offline_ByClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/orders.proto",
}

// OnlineClient is the client API for Online service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnlineClient interface {
	ByClient(ctx context.Context, in *ParamsOnlineByClient, opts ...grpc.CallOption) (*ResponseOnlineByClient, error)
}

type onlineClient struct {
	cc grpc.ClientConnInterface
}

func NewOnlineClient(cc grpc.ClientConnInterface) OnlineClient {
	return &onlineClient{cc}
}

func (c *onlineClient) ByClient(ctx context.Context, in *ParamsOnlineByClient, opts ...grpc.CallOption) (*ResponseOnlineByClient, error) {
	out := new(ResponseOnlineByClient)
	err := c.cc.Invoke(ctx, "/orders.Online/ByClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OnlineServer is the server API for Online service.
type OnlineServer interface {
	ByClient(context.Context, *ParamsOnlineByClient) (*ResponseOnlineByClient, error)
}

// UnimplementedOnlineServer can be embedded to have forward compatible implementations.
type UnimplementedOnlineServer struct {
}

func (*UnimplementedOnlineServer) ByClient(context.Context, *ParamsOnlineByClient) (*ResponseOnlineByClient, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ByClient not implemented")
}

func RegisterOnlineServer(s *grpc.Server, srv OnlineServer) {
	s.RegisterService(&_Online_serviceDesc, srv)
}

func _Online_ByClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ParamsOnlineByClient)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnlineServer).ByClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orders.Online/ByClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnlineServer).ByClient(ctx, req.(*ParamsOnlineByClient))
	}
	return interceptor(ctx, in, info, handler)
}

var _Online_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orders.Online",
	HandlerType: (*OnlineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ByClient",
			Handler:    _Online_ByClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/orders.proto",
}
