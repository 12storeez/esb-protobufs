syntax = "proto3";

option go_package = "go/mercaux";
import "google/protobuf/empty.proto";
package mercaux;

service Stocks {
    rpc Get (StocksGetParams) returns (StocksGetResponse) {
    }
}

service Stores {
    rpc Get (google.protobuf.Empty) returns (StoresGetResponse) {
    }
}

service Sellers {
    rpc Get (google.protobuf.Empty) returns (SellersGetResponse) {
    }
}

service Orders {
    rpc NewOrder (OrdersNewParams) returns (OrdersNewResponse) {
    }
}

message StocksGetParams {
    int32 page = 1;
}

message StocksGetResponse {
    bool ok = 1;
    int32 pages = 2;
    int32 page = 3;
    repeated Stock stocks = 4;
}

message Stock {
    string barcode = 1;
    string category = 2;
    string family = 3;
    string family_id = 4;
    string product_name = 5;
    string product_name_en = 6;
    string picture = 7;
    string url = 8;
    bool is_active = 9;
    int32 price = 10;
    string article = 11;
    string size = 12;
    string color = 13;
    string fabric = 14;
    string model = 15;
    string super_model_id = 16;
    string super_model_name = 17;
    string super_model_name_en = 18;
    string gender = 19;
    repeated string sizes = 20;
    repeated string barcode_alt = 21;
    int32 discount = 22;
    repeated string total_look = 23;
    string description = 24;
    repeated string images = 25;
    Category main_category = 26;
    repeated Category site_category = 27;
    string size_description = 28;
    repeated string recommendations = 29;
    repeated string alternatives = 30;
    string video = 31;
    repeated string instashop = 32;
    string country = 33;
    repeated Quantity quantity = 34;
    string preview = 35;
}

message Category {
    int32 id = 1;
    string slug = 2;
    string title = 3;
}

message Quantity {
    int32 store_id = 1;
    int32 available = 2;
    int32 reserved = 3;
    int32 discount = 4;
    int32 price = 5;
    int32 price_before_discount = 6;
}

message StoresGetResponse {
    bool ok = 1;
    repeated Store stores = 2;
}

message Store {
    int32 store_id = 1;
    string short_title = 2;
    string address = 3;
    string phone = 4;
    string geo = 5;
    string city = 6;
    string country = 7;
    bool active = 8;
}

message SellersGetResponse {
    bool ok = 1;
    repeated Seller sellers = 2;
}

message Seller {
    int32 store_id = 1;
    string seller_id = 2;
    string seller_name = 3;
}

message OrdersNewParams {
    Order order = 1;
    string source = 2;
    string seller_id = 3;
}

message Order {
    string last_name = 1;
    string first_name = 2;
    string phone = 3;
    string email = 4;
    int32 store_id = 5;
    repeated OrderItem items = 6;
}

message OrderItem {
    string id = 1;
    int32 quantity = 2;
    float price = 3;
}

message OrdersNewResponse {
    bool ok = 1;
    string order_id = 2;
    repeated OrderError errors = 3;
}

message OrderError {
    int32 code = 1;
    string message = 2;
    string price = 3;
    int32 available_quantity = 4;
    int64 barcode = 5;
}
