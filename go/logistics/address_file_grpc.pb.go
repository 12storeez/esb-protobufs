// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.9
// source: address_file.proto

package logistics

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	AddressFileService_List_FullMethodName   = "/logistics.AddressFileService/List"
	AddressFileService_Create_FullMethodName = "/logistics.AddressFileService/Create"
)

// AddressFileServiceClient is the client API for AddressFileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type AddressFileServiceClient interface {
	List(ctx context.Context, in *ListAddressFileRequest, opts ...grpc.CallOption) (*UnifiedResponse, error)
	Create(ctx context.Context, in *CreateAddressFile, opts ...grpc.CallOption) (*AddressFile, error)
}

type addressFileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAddressFileServiceClient(cc grpc.ClientConnInterface) AddressFileServiceClient {
	return &addressFileServiceClient{cc}
}

func (c *addressFileServiceClient) List(ctx context.Context, in *ListAddressFileRequest, opts ...grpc.CallOption) (*UnifiedResponse, error) {
	out := new(UnifiedResponse)
	err := c.cc.Invoke(ctx, AddressFileService_List_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *addressFileServiceClient) Create(ctx context.Context, in *CreateAddressFile, opts ...grpc.CallOption) (*AddressFile, error) {
	out := new(AddressFile)
	err := c.cc.Invoke(ctx, AddressFileService_Create_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AddressFileServiceServer is the server API for AddressFileService service.
// All implementations should embed UnimplementedAddressFileServiceServer
// for forward compatibility
type AddressFileServiceServer interface {
	List(context.Context, *ListAddressFileRequest) (*UnifiedResponse, error)
	Create(context.Context, *CreateAddressFile) (*AddressFile, error)
}

// UnimplementedAddressFileServiceServer should be embedded to have forward compatible implementations.
type UnimplementedAddressFileServiceServer struct {
}

func (UnimplementedAddressFileServiceServer) List(context.Context, *ListAddressFileRequest) (*UnifiedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (UnimplementedAddressFileServiceServer) Create(context.Context, *CreateAddressFile) (*AddressFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}

// UnsafeAddressFileServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to AddressFileServiceServer will
// result in compilation errors.
type UnsafeAddressFileServiceServer interface {
	mustEmbedUnimplementedAddressFileServiceServer()
}

func RegisterAddressFileServiceServer(s grpc.ServiceRegistrar, srv AddressFileServiceServer) {
	s.RegisterService(&AddressFileService_ServiceDesc, srv)
}

func _AddressFileService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAddressFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressFileServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AddressFileService_List_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressFileServiceServer).List(ctx, req.(*ListAddressFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AddressFileService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAddressFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AddressFileServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: AddressFileService_Create_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AddressFileServiceServer).Create(ctx, req.(*CreateAddressFile))
	}
	return interceptor(ctx, in, info, handler)
}

// AddressFileService_ServiceDesc is the grpc.ServiceDesc for AddressFileService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var AddressFileService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "logistics.AddressFileService",
	HandlerType: (*AddressFileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _AddressFileService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _AddressFileService_Create_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "address_file.proto",
}
