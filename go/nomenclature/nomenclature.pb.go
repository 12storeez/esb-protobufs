// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: proto/nomenclature.proto

// Package product describes the gRPC interface of the product-go -ms microservice.
// Warning! it`s not equal internal/products

package nomenclature

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Pagination for Request to ms
type PaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// Pagination for Response to ms
type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int64 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int64 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Total  int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationResponse) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PaginationResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// Error
type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target  string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{2}
}

func (x *Error) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Error) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type NomenclatureDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TitleRu string `protobuf:"bytes,2,opt,name=title_ru,json=titleRu,proto3" json:"title_ru,omitempty"`
	TitleEn string `protobuf:"bytes,3,opt,name=title_en,json=titleEn,proto3" json:"title_en,omitempty"`
	// Поле используется только для размеров Size
	IsSampleSale bool `protobuf:"varint,4,opt,name=is_sample_sale,json=isSampleSale,proto3" json:"is_sample_sale,omitempty"`
}

func (x *NomenclatureDescription) Reset() {
	*x = NomenclatureDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NomenclatureDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NomenclatureDescription) ProtoMessage() {}

func (x *NomenclatureDescription) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NomenclatureDescription.ProtoReflect.Descriptor instead.
func (*NomenclatureDescription) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{3}
}

func (x *NomenclatureDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NomenclatureDescription) GetTitleRu() string {
	if x != nil {
		return x.TitleRu
	}
	return ""
}

func (x *NomenclatureDescription) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *NomenclatureDescription) GetIsSampleSale() bool {
	if x != nil {
		return x.IsSampleSale
	}
	return false
}

type SuperModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TitleRu      string `protobuf:"bytes,2,opt,name=title_ru,json=titleRu,proto3" json:"title_ru,omitempty"`
	TitleEn      string `protobuf:"bytes,3,opt,name=title_en,json=titleEn,proto3" json:"title_en,omitempty"`
	IsSampleSale bool   `protobuf:"varint,4,opt,name=is_sample_sale,json=isSampleSale,proto3" json:"is_sample_sale,omitempty"`
	MergingCode  string `protobuf:"bytes,5,opt,name=merging_code,json=mergingCode,proto3" json:"merging_code,omitempty"`
}

func (x *SuperModel) Reset() {
	*x = SuperModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperModel) ProtoMessage() {}

func (x *SuperModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperModel.ProtoReflect.Descriptor instead.
func (*SuperModel) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{4}
}

func (x *SuperModel) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SuperModel) GetTitleRu() string {
	if x != nil {
		return x.TitleRu
	}
	return ""
}

func (x *SuperModel) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *SuperModel) GetIsSampleSale() bool {
	if x != nil {
		return x.IsSampleSale
	}
	return false
}

func (x *SuperModel) GetMergingCode() string {
	if x != nil {
		return x.MergingCode
	}
	return ""
}

type ColorDescription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TitleRu      string `protobuf:"bytes,2,opt,name=title_ru,json=titleRu,proto3" json:"title_ru,omitempty"`
	TitleEn      string `protobuf:"bytes,3,opt,name=title_en,json=titleEn,proto3" json:"title_en,omitempty"`
	IsSampleSale bool   `protobuf:"varint,4,opt,name=is_sample_sale,json=isSampleSale,proto3" json:"is_sample_sale,omitempty"`
	Hex          string `protobuf:"bytes,5,opt,name=hex,proto3" json:"hex,omitempty"`
}

func (x *ColorDescription) Reset() {
	*x = ColorDescription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorDescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorDescription) ProtoMessage() {}

func (x *ColorDescription) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorDescription.ProtoReflect.Descriptor instead.
func (*ColorDescription) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{5}
}

func (x *ColorDescription) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ColorDescription) GetTitleRu() string {
	if x != nil {
		return x.TitleRu
	}
	return ""
}

func (x *ColorDescription) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *ColorDescription) GetIsSampleSale() bool {
	if x != nil {
		return x.IsSampleSale
	}
	return false
}

func (x *ColorDescription) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

type Color struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TitleRu      string              `protobuf:"bytes,2,opt,name=title_ru,json=titleRu,proto3" json:"title_ru,omitempty"`
	TitleEn      string              `protobuf:"bytes,3,opt,name=title_en,json=titleEn,proto3" json:"title_en,omitempty"`
	IsSampleSale bool                `protobuf:"varint,4,opt,name=is_sample_sale,json=isSampleSale,proto3" json:"is_sample_sale,omitempty"`
	Hex          string              `protobuf:"bytes,5,opt,name=hex,proto3" json:"hex,omitempty"`
	ColorGroups  []*ColorDescription `protobuf:"bytes,6,rep,name=color_groups,json=colorGroups,proto3" json:"color_groups,omitempty"`
}

func (x *Color) Reset() {
	*x = Color{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Color) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Color) ProtoMessage() {}

func (x *Color) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Color.ProtoReflect.Descriptor instead.
func (*Color) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{6}
}

func (x *Color) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Color) GetTitleRu() string {
	if x != nil {
		return x.TitleRu
	}
	return ""
}

func (x *Color) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *Color) GetIsSampleSale() bool {
	if x != nil {
		return x.IsSampleSale
	}
	return false
}

func (x *Color) GetHex() string {
	if x != nil {
		return x.Hex
	}
	return ""
}

func (x *Color) GetColorGroups() []*ColorDescription {
	if x != nil {
		return x.ColorGroups
	}
	return nil
}

type Capsules struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ParentSeason string `protobuf:"bytes,3,opt,name=parent_season,json=parentSeason,proto3" json:"parent_season,omitempty"`
}

func (x *Capsules) Reset() {
	*x = Capsules{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Capsules) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Capsules) ProtoMessage() {}

func (x *Capsules) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Capsules.ProtoReflect.Descriptor instead.
func (*Capsules) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{7}
}

func (x *Capsules) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Capsules) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Capsules) GetParentSeason() string {
	if x != nil {
		return x.ParentSeason
	}
	return ""
}

type Alt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source  string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Barcode string `protobuf:"bytes,2,opt,name=barcode,proto3" json:"barcode,omitempty"`
}

func (x *Alt) Reset() {
	*x = Alt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alt) ProtoMessage() {}

func (x *Alt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alt.ProtoReflect.Descriptor instead.
func (*Alt) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{8}
}

func (x *Alt) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Alt) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrencyCode        int64   `protobuf:"varint,1,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	CurrencyIso         string  `protobuf:"bytes,2,opt,name=currency_iso,json=currencyIso,proto3" json:"currency_iso,omitempty"`
	Price               int64   `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	PriceBeforeDiscount int64   `protobuf:"varint,4,opt,name=price_before_discount,json=priceBeforeDiscount,proto3" json:"price_before_discount,omitempty"`
	StoreCode           []int64 `protobuf:"varint,5,rep,packed,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{9}
}

func (x *Price) GetCurrencyCode() int64 {
	if x != nil {
		return x.CurrencyCode
	}
	return 0
}

func (x *Price) GetCurrencyIso() string {
	if x != nil {
		return x.CurrencyIso
	}
	return ""
}

func (x *Price) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Price) GetPriceBeforeDiscount() int64 {
	if x != nil {
		return x.PriceBeforeDiscount
	}
	return 0
}

func (x *Price) GetStoreCode() []int64 {
	if x != nil {
		return x.StoreCode
	}
	return nil
}

type Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Barcode string                   `protobuf:"bytes,1,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Size    *NomenclatureDescription `protobuf:"bytes,2,opt,name=size,proto3" json:"size,omitempty"`
	Alts    []*Alt                   `protobuf:"bytes,3,rep,name=alts,proto3" json:"alts,omitempty"`
	Prices  []*Price                 `protobuf:"bytes,4,rep,name=prices,proto3" json:"prices,omitempty"`
}

func (x *Size) Reset() {
	*x = Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size.ProtoReflect.Descriptor instead.
func (*Size) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{10}
}

func (x *Size) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *Size) GetSize() *NomenclatureDescription {
	if x != nil {
		return x.Size
	}
	return nil
}

func (x *Size) GetAlts() []*Alt {
	if x != nil {
		return x.Alts
	}
	return nil
}

func (x *Size) GetPrices() []*Price {
	if x != nil {
		return x.Prices
	}
	return nil
}

type Nomenclature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Article              string                   `protobuf:"bytes,2,opt,name=article,proto3" json:"article,omitempty"`
	TitleRu              string                   `protobuf:"bytes,3,opt,name=title_ru,json=titleRu,proto3" json:"title_ru,omitempty"`
	IsActive             bool                     `protobuf:"varint,4,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	StartOnlineSaleDate  string                   `protobuf:"bytes,5,opt,name=start_online_sale_date,json=startOnlineSaleDate,proto3" json:"start_online_sale_date,omitempty"`
	StartOfflineSaleDate string                   `protobuf:"bytes,6,opt,name=start_offline_sale_date,json=startOfflineSaleDate,proto3" json:"start_offline_sale_date,omitempty"`
	Category             string                   `protobuf:"bytes,7,opt,name=category,proto3" json:"category,omitempty"`
	Gender               string                   `protobuf:"bytes,8,opt,name=gender,proto3" json:"gender,omitempty"`
	Url                  string                   `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	Fabric               *NomenclatureDescription `protobuf:"bytes,10,opt,name=fabric,proto3" json:"fabric,omitempty"`
	Family               *NomenclatureDescription `protobuf:"bytes,11,opt,name=family,proto3" json:"family,omitempty"`
	ColorModel           *NomenclatureDescription `protobuf:"bytes,12,opt,name=color_model,json=colorModel,proto3" json:"color_model,omitempty"`
	SuperModel           *SuperModel              `protobuf:"bytes,13,opt,name=super_model,json=superModel,proto3" json:"super_model,omitempty"`
	Color                *Color                   `protobuf:"bytes,14,opt,name=color,proto3" json:"color,omitempty"`
	Capsules             *Capsules                `protobuf:"bytes,16,opt,name=capsules,proto3" json:"capsules,omitempty"`
	IsEcological         bool                     `protobuf:"varint,17,opt,name=is_ecological,json=isEcological,proto3" json:"is_ecological,omitempty"`
	PillingGrade         string                   `protobuf:"bytes,18,opt,name=pilling_grade,json=pillingGrade,proto3" json:"pilling_grade,omitempty"`
	Sizes                []*Size                  `protobuf:"bytes,15,rep,name=sizes,proto3" json:"sizes,omitempty"`
}

func (x *Nomenclature) Reset() {
	*x = Nomenclature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Nomenclature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Nomenclature) ProtoMessage() {}

func (x *Nomenclature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Nomenclature.ProtoReflect.Descriptor instead.
func (*Nomenclature) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{11}
}

func (x *Nomenclature) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Nomenclature) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

func (x *Nomenclature) GetTitleRu() string {
	if x != nil {
		return x.TitleRu
	}
	return ""
}

func (x *Nomenclature) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Nomenclature) GetStartOnlineSaleDate() string {
	if x != nil {
		return x.StartOnlineSaleDate
	}
	return ""
}

func (x *Nomenclature) GetStartOfflineSaleDate() string {
	if x != nil {
		return x.StartOfflineSaleDate
	}
	return ""
}

func (x *Nomenclature) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Nomenclature) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Nomenclature) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Nomenclature) GetFabric() *NomenclatureDescription {
	if x != nil {
		return x.Fabric
	}
	return nil
}

func (x *Nomenclature) GetFamily() *NomenclatureDescription {
	if x != nil {
		return x.Family
	}
	return nil
}

func (x *Nomenclature) GetColorModel() *NomenclatureDescription {
	if x != nil {
		return x.ColorModel
	}
	return nil
}

func (x *Nomenclature) GetSuperModel() *SuperModel {
	if x != nil {
		return x.SuperModel
	}
	return nil
}

func (x *Nomenclature) GetColor() *Color {
	if x != nil {
		return x.Color
	}
	return nil
}

func (x *Nomenclature) GetCapsules() *Capsules {
	if x != nil {
		return x.Capsules
	}
	return nil
}

func (x *Nomenclature) GetIsEcological() bool {
	if x != nil {
		return x.IsEcological
	}
	return false
}

func (x *Nomenclature) GetPillingGrade() string {
	if x != nil {
		return x.PillingGrade
	}
	return ""
}

func (x *Nomenclature) GetSizes() []*Size {
	if x != nil {
		return x.Sizes
	}
	return nil
}

type PhotoModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Growth     int32  `protobuf:"varint,3,opt,name=growth,proto3" json:"growth,omitempty"`
	Bust       int32  `protobuf:"varint,4,opt,name=bust,proto3" json:"bust,omitempty"`
	Waist      int32  `protobuf:"varint,5,opt,name=waist,proto3" json:"waist,omitempty"`
	Hips       int32  `protobuf:"varint,6,opt,name=hips,proto3" json:"hips,omitempty"`
	IsModelXl  bool   `protobuf:"varint,7,opt,name=is_model_xl,json=isModelXl,proto3" json:"is_model_xl,omitempty"`
	ImageFiles string `protobuf:"bytes,8,opt,name=image_files,json=imageFiles,proto3" json:"image_files,omitempty"`
	CreatedAt  string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PhotoModel) Reset() {
	*x = PhotoModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoModel) ProtoMessage() {}

func (x *PhotoModel) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoModel.ProtoReflect.Descriptor instead.
func (*PhotoModel) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{12}
}

func (x *PhotoModel) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PhotoModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PhotoModel) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *PhotoModel) GetBust() int32 {
	if x != nil {
		return x.Bust
	}
	return 0
}

func (x *PhotoModel) GetWaist() int32 {
	if x != nil {
		return x.Waist
	}
	return 0
}

func (x *PhotoModel) GetHips() int32 {
	if x != nil {
		return x.Hips
	}
	return 0
}

func (x *PhotoModel) GetIsModelXl() bool {
	if x != nil {
		return x.IsModelXl
	}
	return false
}

func (x *PhotoModel) GetImageFiles() string {
	if x != nil {
		return x.ImageFiles
	}
	return ""
}

func (x *PhotoModel) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PhotoModel) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PhotoModelWithoutID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Growth     int32  `protobuf:"varint,2,opt,name=growth,proto3" json:"growth,omitempty"`
	Bust       int32  `protobuf:"varint,3,opt,name=bust,proto3" json:"bust,omitempty"`
	Waist      int32  `protobuf:"varint,4,opt,name=waist,proto3" json:"waist,omitempty"`
	Hips       int32  `protobuf:"varint,5,opt,name=hips,proto3" json:"hips,omitempty"`
	IsModelXl  bool   `protobuf:"varint,6,opt,name=is_model_xl,json=isModelXl,proto3" json:"is_model_xl,omitempty"`
	ImageFiles string `protobuf:"bytes,7,opt,name=image_files,json=imageFiles,proto3" json:"image_files,omitempty"`
	CreatedAt  string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt  string `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PhotoModelWithoutID) Reset() {
	*x = PhotoModelWithoutID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PhotoModelWithoutID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotoModelWithoutID) ProtoMessage() {}

func (x *PhotoModelWithoutID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotoModelWithoutID.ProtoReflect.Descriptor instead.
func (*PhotoModelWithoutID) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{13}
}

func (x *PhotoModelWithoutID) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PhotoModelWithoutID) GetGrowth() int32 {
	if x != nil {
		return x.Growth
	}
	return 0
}

func (x *PhotoModelWithoutID) GetBust() int32 {
	if x != nil {
		return x.Bust
	}
	return 0
}

func (x *PhotoModelWithoutID) GetWaist() int32 {
	if x != nil {
		return x.Waist
	}
	return 0
}

func (x *PhotoModelWithoutID) GetHips() int32 {
	if x != nil {
		return x.Hips
	}
	return 0
}

func (x *PhotoModelWithoutID) GetIsModelXl() bool {
	if x != nil {
		return x.IsModelXl
	}
	return false
}

func (x *PhotoModelWithoutID) GetImageFiles() string {
	if x != nil {
		return x.ImageFiles
	}
	return ""
}

func (x *PhotoModelWithoutID) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PhotoModelWithoutID) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DictionarySize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid        string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type        string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	State       int32  `protobuf:"varint,4,opt,name=state,proto3" json:"state,omitempty"`
	StateMobile int32  `protobuf:"varint,5,opt,name=state_mobile,json=stateMobile,proto3" json:"state_mobile,omitempty"`
	Order       int32  `protobuf:"varint,6,opt,name=order,proto3" json:"order,omitempty"`
	CreatedAt   string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DictionarySize) Reset() {
	*x = DictionarySize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionarySize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionarySize) ProtoMessage() {}

func (x *DictionarySize) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionarySize.ProtoReflect.Descriptor instead.
func (*DictionarySize) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{14}
}

func (x *DictionarySize) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

func (x *DictionarySize) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DictionarySize) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DictionarySize) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *DictionarySize) GetStateMobile() int32 {
	if x != nil {
		return x.StateMobile
	}
	return 0
}

func (x *DictionarySize) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *DictionarySize) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DictionarySize) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DictionarySizeWithoutGUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	State       int32  `protobuf:"varint,3,opt,name=state,proto3" json:"state,omitempty"`
	StateMobile int32  `protobuf:"varint,4,opt,name=state_mobile,json=stateMobile,proto3" json:"state_mobile,omitempty"`
	Order       int32  `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
	CreatedAt   string `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *DictionarySizeWithoutGUID) Reset() {
	*x = DictionarySizeWithoutGUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionarySizeWithoutGUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionarySizeWithoutGUID) ProtoMessage() {}

func (x *DictionarySizeWithoutGUID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionarySizeWithoutGUID.ProtoReflect.Descriptor instead.
func (*DictionarySizeWithoutGUID) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{15}
}

func (x *DictionarySizeWithoutGUID) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DictionarySizeWithoutGUID) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DictionarySizeWithoutGUID) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *DictionarySizeWithoutGUID) GetStateMobile() int32 {
	if x != nil {
		return x.StateMobile
	}
	return 0
}

func (x *DictionarySizeWithoutGUID) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *DictionarySizeWithoutGUID) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DictionarySizeWithoutGUID) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{16}
}

func (x *GetListRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetNomenclatureListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message    string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Code       int64               `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Errors     []*Error            `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	Data       []*Nomenclature     `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetNomenclatureListResponse) Reset() {
	*x = GetNomenclatureListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNomenclatureListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNomenclatureListResponse) ProtoMessage() {}

func (x *GetNomenclatureListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNomenclatureListResponse.ProtoReflect.Descriptor instead.
func (*GetNomenclatureListResponse) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{17}
}

func (x *GetNomenclatureListResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetNomenclatureListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetNomenclatureListResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetNomenclatureListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetNomenclatureListResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GetNomenclatureListResponse) GetData() []*Nomenclature {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetNomenclatureByArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article string `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
}

func (x *GetNomenclatureByArticleRequest) Reset() {
	*x = GetNomenclatureByArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNomenclatureByArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNomenclatureByArticleRequest) ProtoMessage() {}

func (x *GetNomenclatureByArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNomenclatureByArticleRequest.ProtoReflect.Descriptor instead.
func (*GetNomenclatureByArticleRequest) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{18}
}

func (x *GetNomenclatureByArticleRequest) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

type GetNomenclatureByArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Nomenclature `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Code    int64         `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"`
	Errors  []*Error      `protobuf:"bytes,6,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetNomenclatureByArticleResponse) Reset() {
	*x = GetNomenclatureByArticleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNomenclatureByArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNomenclatureByArticleResponse) ProtoMessage() {}

func (x *GetNomenclatureByArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNomenclatureByArticleResponse.ProtoReflect.Descriptor instead.
func (*GetNomenclatureByArticleResponse) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{19}
}

func (x *GetNomenclatureByArticleResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetNomenclatureByArticleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetNomenclatureByArticleResponse) GetData() *Nomenclature {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetNomenclatureByArticleResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetNomenclatureByArticleResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetPhotoModelListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message    string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Code       int64               `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Errors     []*Error            `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	Data       []*PhotoModel       `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPhotoModelListResponse) Reset() {
	*x = GetPhotoModelListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhotoModelListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhotoModelListResponse) ProtoMessage() {}

func (x *GetPhotoModelListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhotoModelListResponse.ProtoReflect.Descriptor instead.
func (*GetPhotoModelListResponse) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{20}
}

func (x *GetPhotoModelListResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetPhotoModelListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPhotoModelListResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetPhotoModelListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPhotoModelListResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GetPhotoModelListResponse) GetData() []*PhotoModel {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{21}
}

func (x *GetByIDRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPhotoModelByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *PhotoModel `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Code    int64       `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"`
	Errors  []*Error    `protobuf:"bytes,6,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetPhotoModelByIDResponse) Reset() {
	*x = GetPhotoModelByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPhotoModelByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPhotoModelByIDResponse) ProtoMessage() {}

func (x *GetPhotoModelByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPhotoModelByIDResponse.ProtoReflect.Descriptor instead.
func (*GetPhotoModelByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{22}
}

func (x *GetPhotoModelByIDResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetPhotoModelByIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPhotoModelByIDResponse) GetData() *PhotoModel {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetPhotoModelByIDResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPhotoModelByIDResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetDictionarySizeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message    string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Code       int64               `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Errors     []*Error            `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	Data       []*DictionarySize   `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDictionarySizeListResponse) Reset() {
	*x = GetDictionarySizeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionarySizeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionarySizeListResponse) ProtoMessage() {}

func (x *GetDictionarySizeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionarySizeListResponse.ProtoReflect.Descriptor instead.
func (*GetDictionarySizeListResponse) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{23}
}

func (x *GetDictionarySizeListResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDictionarySizeListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDictionarySizeListResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetDictionarySizeListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDictionarySizeListResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GetDictionarySizeListResponse) GetData() []*DictionarySize {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetByGUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid string `protobuf:"bytes,1,opt,name=guid,proto3" json:"guid,omitempty"`
}

func (x *GetByGUID) Reset() {
	*x = GetByGUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByGUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByGUID) ProtoMessage() {}

func (x *GetByGUID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByGUID.ProtoReflect.Descriptor instead.
func (*GetByGUID) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{24}
}

func (x *GetByGUID) GetGuid() string {
	if x != nil {
		return x.Guid
	}
	return ""
}

type GetDictionarySizeByGUIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *DictionarySize `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Code    int64           `protobuf:"varint,5,opt,name=code,proto3" json:"code,omitempty"`
	Errors  []*Error        `protobuf:"bytes,6,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetDictionarySizeByGUIDResponse) Reset() {
	*x = GetDictionarySizeByGUIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_nomenclature_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDictionarySizeByGUIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDictionarySizeByGUIDResponse) ProtoMessage() {}

func (x *GetDictionarySizeByGUIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_nomenclature_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDictionarySizeByGUIDResponse.ProtoReflect.Descriptor instead.
func (*GetDictionarySizeByGUIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_nomenclature_proto_rawDescGZIP(), []int{25}
}

func (x *GetDictionarySizeByGUIDResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDictionarySizeByGUIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDictionarySizeByGUIDResponse) GetData() *DictionarySize {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetDictionarySizeByGUIDResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDictionarySizeByGUIDResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_proto_nomenclature_proto protoreflect.FileDescriptor

var file_proto_nomenclature_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x6f, 0x6d, 0x65,
	0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x58, 0x0a, 0x12, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x17, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x22, 0x9b, 0x01, 0x0a,
	0x0a, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x52, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45,
	0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x72, 0x67, 0x69,
	0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d,
	0x65, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x10, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x45, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68,
	0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x68, 0x65, 0x78, 0x22, 0xc8, 0x01,
	0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x5f, 0x72, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x52, 0x75, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x73, 0x5f, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53,
	0x61, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x68, 0x65, 0x78, 0x12, 0x41, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f,
	0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x55, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x73,
	0x75, 0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x37, 0x0a, 0x03, 0x41, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x49, 0x73, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x13, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0xaf, 0x01, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x25, 0x0a, 0x04, 0x61, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x41,
	0x6c, 0x74, 0x52, 0x04, 0x61, 0x6c, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x06, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x73, 0x22, 0xf6, 0x05, 0x0a, 0x0c, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x75, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a,
	0x17, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x61, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x06, 0x66, 0x61,
	0x62, 0x72, 0x69, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x06, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x12, 0x3d, 0x0a, 0x06, 0x66, 0x61, 0x6d,
	0x69, 0x6c, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x6d, 0x65,
	0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x46, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x39, 0x0a, 0x0b, 0x73, 0x75, 0x70, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52,
	0x0a, 0x73, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c,
	0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x73,
	0x52, 0x08, 0x63, 0x61, 0x70, 0x73, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73,
	0x5f, 0x65, 0x63, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x45, 0x63, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x61, 0x6c, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47,
	0x72, 0x61, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x05, 0x73, 0x69, 0x7a, 0x65, 0x73, 0x22, 0x85,
	0x02, 0x0a, 0x0a, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x75, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x61, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x61,
	0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x68, 0x69, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x78, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x58, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xfe, 0x01, 0x0a, 0x13, 0x50, 0x68, 0x6f, 0x74, 0x6f,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x62, 0x75, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x77, 0x61, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77,
	0x61, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x68, 0x69, 0x70, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x78, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x58, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdb, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x19, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x47,
	0x55, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x60, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4a, 0x04, 0x08,
	0x01, 0x10, 0x02, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22, 0x82, 0x02, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x4e,
	0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x3b, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0xc5,
	0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x6d, 0x65,
	0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xfe, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x68,
	0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e,
	0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0xbc, 0x01, 0x0a, 0x19, 0x47, 0x65,
	0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f,
	0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x86, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12,
	0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x1f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x79, 0x47, 0x55, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75,
	0x69, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x47, 0x55, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79,
	0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2b,
	0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x32, 0x8b, 0x07, 0x0a, 0x13,
	0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e,
	0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63,
	0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x79, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12,
	0x2d, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x79,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e,
	0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x42, 0x79, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x27, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x1c, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x21, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x57, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x49, 0x44, 0x1a, 0x27, 0x2e,
	0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x18, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x27, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x69,
	0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72,
	0x79, 0x53, 0x69, 0x7a, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x61, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x47, 0x55, 0x49, 0x44, 0x12, 0x17, 0x2e, 0x6e,
	0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x47, 0x55, 0x49, 0x44, 0x1a, 0x2d, 0x2e, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x47, 0x55, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x2e, 0x6e,
	0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x1a, 0x2d, 0x2e, 0x6e, 0x6f, 0x6d,
	0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x47, 0x55, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x6f, 0x2f,
	0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x63, 0x6c, 0x61, 0x74, 0x75, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_nomenclature_proto_rawDescOnce sync.Once
	file_proto_nomenclature_proto_rawDescData = file_proto_nomenclature_proto_rawDesc
)

func file_proto_nomenclature_proto_rawDescGZIP() []byte {
	file_proto_nomenclature_proto_rawDescOnce.Do(func() {
		file_proto_nomenclature_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_nomenclature_proto_rawDescData)
	})
	return file_proto_nomenclature_proto_rawDescData
}

var file_proto_nomenclature_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_proto_nomenclature_proto_goTypes = []interface{}{
	(*PaginationRequest)(nil),                // 0: nomenclature.PaginationRequest
	(*PaginationResponse)(nil),               // 1: nomenclature.PaginationResponse
	(*Error)(nil),                            // 2: nomenclature.Error
	(*NomenclatureDescription)(nil),          // 3: nomenclature.NomenclatureDescription
	(*SuperModel)(nil),                       // 4: nomenclature.SuperModel
	(*ColorDescription)(nil),                 // 5: nomenclature.ColorDescription
	(*Color)(nil),                            // 6: nomenclature.Color
	(*Capsules)(nil),                         // 7: nomenclature.Capsules
	(*Alt)(nil),                              // 8: nomenclature.Alt
	(*Price)(nil),                            // 9: nomenclature.Price
	(*Size)(nil),                             // 10: nomenclature.Size
	(*Nomenclature)(nil),                     // 11: nomenclature.Nomenclature
	(*PhotoModel)(nil),                       // 12: nomenclature.PhotoModel
	(*PhotoModelWithoutID)(nil),              // 13: nomenclature.PhotoModelWithoutID
	(*DictionarySize)(nil),                   // 14: nomenclature.DictionarySize
	(*DictionarySizeWithoutGUID)(nil),        // 15: nomenclature.DictionarySizeWithoutGUID
	(*GetListRequest)(nil),                   // 16: nomenclature.GetListRequest
	(*GetNomenclatureListResponse)(nil),      // 17: nomenclature.GetNomenclatureListResponse
	(*GetNomenclatureByArticleRequest)(nil),  // 18: nomenclature.GetNomenclatureByArticleRequest
	(*GetNomenclatureByArticleResponse)(nil), // 19: nomenclature.GetNomenclatureByArticleResponse
	(*GetPhotoModelListResponse)(nil),        // 20: nomenclature.GetPhotoModelListResponse
	(*GetByIDRequest)(nil),                   // 21: nomenclature.GetByIDRequest
	(*GetPhotoModelByIDResponse)(nil),        // 22: nomenclature.GetPhotoModelByIDResponse
	(*GetDictionarySizeListResponse)(nil),    // 23: nomenclature.GetDictionarySizeListResponse
	(*GetByGUID)(nil),                        // 24: nomenclature.GetByGUID
	(*GetDictionarySizeByGUIDResponse)(nil),  // 25: nomenclature.GetDictionarySizeByGUIDResponse
}
var file_proto_nomenclature_proto_depIdxs = []int32{
	5,  // 0: nomenclature.Color.color_groups:type_name -> nomenclature.ColorDescription
	3,  // 1: nomenclature.Size.size:type_name -> nomenclature.NomenclatureDescription
	8,  // 2: nomenclature.Size.alts:type_name -> nomenclature.Alt
	9,  // 3: nomenclature.Size.prices:type_name -> nomenclature.Price
	3,  // 4: nomenclature.Nomenclature.fabric:type_name -> nomenclature.NomenclatureDescription
	3,  // 5: nomenclature.Nomenclature.family:type_name -> nomenclature.NomenclatureDescription
	3,  // 6: nomenclature.Nomenclature.color_model:type_name -> nomenclature.NomenclatureDescription
	4,  // 7: nomenclature.Nomenclature.super_model:type_name -> nomenclature.SuperModel
	6,  // 8: nomenclature.Nomenclature.color:type_name -> nomenclature.Color
	7,  // 9: nomenclature.Nomenclature.capsules:type_name -> nomenclature.Capsules
	10, // 10: nomenclature.Nomenclature.sizes:type_name -> nomenclature.Size
	0,  // 11: nomenclature.GetListRequest.pagination:type_name -> nomenclature.PaginationRequest
	1,  // 12: nomenclature.GetNomenclatureListResponse.pagination:type_name -> nomenclature.PaginationResponse
	2,  // 13: nomenclature.GetNomenclatureListResponse.errors:type_name -> nomenclature.Error
	11, // 14: nomenclature.GetNomenclatureListResponse.data:type_name -> nomenclature.Nomenclature
	11, // 15: nomenclature.GetNomenclatureByArticleResponse.data:type_name -> nomenclature.Nomenclature
	2,  // 16: nomenclature.GetNomenclatureByArticleResponse.errors:type_name -> nomenclature.Error
	1,  // 17: nomenclature.GetPhotoModelListResponse.pagination:type_name -> nomenclature.PaginationResponse
	2,  // 18: nomenclature.GetPhotoModelListResponse.errors:type_name -> nomenclature.Error
	12, // 19: nomenclature.GetPhotoModelListResponse.data:type_name -> nomenclature.PhotoModel
	12, // 20: nomenclature.GetPhotoModelByIDResponse.data:type_name -> nomenclature.PhotoModel
	2,  // 21: nomenclature.GetPhotoModelByIDResponse.errors:type_name -> nomenclature.Error
	1,  // 22: nomenclature.GetDictionarySizeListResponse.pagination:type_name -> nomenclature.PaginationResponse
	2,  // 23: nomenclature.GetDictionarySizeListResponse.errors:type_name -> nomenclature.Error
	14, // 24: nomenclature.GetDictionarySizeListResponse.data:type_name -> nomenclature.DictionarySize
	14, // 25: nomenclature.GetDictionarySizeByGUIDResponse.data:type_name -> nomenclature.DictionarySize
	2,  // 26: nomenclature.GetDictionarySizeByGUIDResponse.errors:type_name -> nomenclature.Error
	16, // 27: nomenclature.NomenclatureService.GetNomenclatureList:input_type -> nomenclature.GetListRequest
	18, // 28: nomenclature.NomenclatureService.GetNomenclatureByArticle:input_type -> nomenclature.GetNomenclatureByArticleRequest
	16, // 29: nomenclature.NomenclatureService.GetPhotoModelList:input_type -> nomenclature.GetListRequest
	21, // 30: nomenclature.NomenclatureService.GetPhotoModelByID:input_type -> nomenclature.GetByIDRequest
	13, // 31: nomenclature.NomenclatureService.CreatePhotoModel:input_type -> nomenclature.PhotoModelWithoutID
	12, // 32: nomenclature.NomenclatureService.UpdatePhotoModel:input_type -> nomenclature.PhotoModel
	16, // 33: nomenclature.NomenclatureService.GetDictionarySizeList:input_type -> nomenclature.GetListRequest
	24, // 34: nomenclature.NomenclatureService.GetDictionarySizeByGUID:input_type -> nomenclature.GetByGUID
	14, // 35: nomenclature.NomenclatureService.UpdateDictionarySize:input_type -> nomenclature.DictionarySize
	17, // 36: nomenclature.NomenclatureService.GetNomenclatureList:output_type -> nomenclature.GetNomenclatureListResponse
	19, // 37: nomenclature.NomenclatureService.GetNomenclatureByArticle:output_type -> nomenclature.GetNomenclatureByArticleResponse
	20, // 38: nomenclature.NomenclatureService.GetPhotoModelList:output_type -> nomenclature.GetPhotoModelListResponse
	22, // 39: nomenclature.NomenclatureService.GetPhotoModelByID:output_type -> nomenclature.GetPhotoModelByIDResponse
	22, // 40: nomenclature.NomenclatureService.CreatePhotoModel:output_type -> nomenclature.GetPhotoModelByIDResponse
	22, // 41: nomenclature.NomenclatureService.UpdatePhotoModel:output_type -> nomenclature.GetPhotoModelByIDResponse
	23, // 42: nomenclature.NomenclatureService.GetDictionarySizeList:output_type -> nomenclature.GetDictionarySizeListResponse
	25, // 43: nomenclature.NomenclatureService.GetDictionarySizeByGUID:output_type -> nomenclature.GetDictionarySizeByGUIDResponse
	25, // 44: nomenclature.NomenclatureService.UpdateDictionarySize:output_type -> nomenclature.GetDictionarySizeByGUIDResponse
	36, // [36:45] is the sub-list for method output_type
	27, // [27:36] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_proto_nomenclature_proto_init() }
func file_proto_nomenclature_proto_init() {
	if File_proto_nomenclature_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_nomenclature_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NomenclatureDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorDescription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Color); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Capsules); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Nomenclature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PhotoModelWithoutID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionarySize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionarySizeWithoutGUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNomenclatureListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNomenclatureByArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNomenclatureByArticleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhotoModelListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPhotoModelByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionarySizeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByGUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_nomenclature_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDictionarySizeByGUIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_nomenclature_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_nomenclature_proto_goTypes,
		DependencyIndexes: file_proto_nomenclature_proto_depIdxs,
		MessageInfos:      file_proto_nomenclature_proto_msgTypes,
	}.Build()
	File_proto_nomenclature_proto = out.File
	file_proto_nomenclature_proto_rawDesc = nil
	file_proto_nomenclature_proto_goTypes = nil
	file_proto_nomenclature_proto_depIdxs = nil
}
