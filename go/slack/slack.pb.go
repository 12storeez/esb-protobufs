// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.1
// source: proto/slack.proto

package slack

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusChangeTicketParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketKey    string `protobuf:"bytes,1,opt,name=ticket_key,json=ticketKey,proto3" json:"ticket_key,omitempty"`
	SlackChannel string `protobuf:"bytes,2,opt,name=slack_channel,json=slackChannel,proto3" json:"slack_channel,omitempty"`
}

func (x *StatusChangeTicketParams) Reset() {
	*x = StatusChangeTicketParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slack_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusChangeTicketParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusChangeTicketParams) ProtoMessage() {}

func (x *StatusChangeTicketParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slack_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusChangeTicketParams.ProtoReflect.Descriptor instead.
func (*StatusChangeTicketParams) Descriptor() ([]byte, []int) {
	return file_proto_slack_proto_rawDescGZIP(), []int{0}
}

func (x *StatusChangeTicketParams) GetTicketKey() string {
	if x != nil {
		return x.TicketKey
	}
	return ""
}

func (x *StatusChangeTicketParams) GetSlackChannel() string {
	if x != nil {
		return x.SlackChannel
	}
	return ""
}

type StatusChangeTicketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *StatusChangeTicketResponse) Reset() {
	*x = StatusChangeTicketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slack_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusChangeTicketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusChangeTicketResponse) ProtoMessage() {}

func (x *StatusChangeTicketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slack_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusChangeTicketResponse.ProtoReflect.Descriptor instead.
func (*StatusChangeTicketResponse) Descriptor() ([]byte, []int) {
	return file_proto_slack_proto_rawDescGZIP(), []int{1}
}

func (x *StatusChangeTicketResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type SendParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel  string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	Email    string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Message  string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	From     string `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	ThreadTs string `protobuf:"bytes,5,opt,name=thread_ts,json=threadTs,proto3" json:"thread_ts,omitempty"`
	Type     string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *SendParams) Reset() {
	*x = SendParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slack_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendParams) ProtoMessage() {}

func (x *SendParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slack_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendParams.ProtoReflect.Descriptor instead.
func (*SendParams) Descriptor() ([]byte, []int) {
	return file_proto_slack_proto_rawDescGZIP(), []int{2}
}

func (x *SendParams) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SendParams) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SendParams) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SendParams) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendParams) GetThreadTs() string {
	if x != nil {
		return x.ThreadTs
	}
	return ""
}

func (x *SendParams) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SendResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok            bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	RespChannel   string `protobuf:"bytes,2,opt,name=resp_channel,json=respChannel,proto3" json:"resp_channel,omitempty"`
	RespTimestamp string `protobuf:"bytes,3,opt,name=resp_timestamp,json=respTimestamp,proto3" json:"resp_timestamp,omitempty"`
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_slack_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_slack_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_proto_slack_proto_rawDescGZIP(), []int{3}
}

func (x *SendResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *SendResponse) GetRespChannel() string {
	if x != nil {
		return x.RespChannel
	}
	return ""
}

func (x *SendResponse) GetRespTimestamp() string {
	if x != nil {
		return x.RespTimestamp
	}
	return ""
}

var File_proto_slack_proto protoreflect.FileDescriptor

var file_proto_slack_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x22, 0x5e, 0x0a, 0x18, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x2c, 0x0a, 0x1a, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x6e,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x54, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x68, 0x0a, 0x0c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x73, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x32, 0x65, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x12, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x1f, 0x2e, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x21, 0x2e, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x39, 0x0a, 0x05, 0x53, 0x6c, 0x61, 0x63, 0x6b,
	0x12, 0x30, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x11, 0x2e, 0x73, 0x6c, 0x61, 0x63, 0x6b,
	0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x13, 0x2e, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08, 0x67, 0x6f, 0x2f, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_slack_proto_rawDescOnce sync.Once
	file_proto_slack_proto_rawDescData = file_proto_slack_proto_rawDesc
)

func file_proto_slack_proto_rawDescGZIP() []byte {
	file_proto_slack_proto_rawDescOnce.Do(func() {
		file_proto_slack_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_slack_proto_rawDescData)
	})
	return file_proto_slack_proto_rawDescData
}

var file_proto_slack_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_slack_proto_goTypes = []interface{}{
	(*StatusChangeTicketParams)(nil),   // 0: slack.StatusChangeTicketParams
	(*StatusChangeTicketResponse)(nil), // 1: slack.StatusChangeTicketResponse
	(*SendParams)(nil),                 // 2: slack.SendParams
	(*SendResponse)(nil),               // 3: slack.SendResponse
}
var file_proto_slack_proto_depIdxs = []int32{
	0, // 0: slack.Tracker.StatusChangeTicket:input_type -> slack.StatusChangeTicketParams
	2, // 1: slack.Slack.Send:input_type -> slack.SendParams
	1, // 2: slack.Tracker.StatusChangeTicket:output_type -> slack.StatusChangeTicketResponse
	3, // 3: slack.Slack.Send:output_type -> slack.SendResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_slack_proto_init() }
func file_proto_slack_proto_init() {
	if File_proto_slack_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_slack_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusChangeTicketParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slack_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusChangeTicketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slack_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_slack_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_slack_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_slack_proto_goTypes,
		DependencyIndexes: file_proto_slack_proto_depIdxs,
		MessageInfos:      file_proto_slack_proto_msgTypes,
	}.Build()
	File_proto_slack_proto = out.File
	file_proto_slack_proto_rawDesc = nil
	file_proto_slack_proto_goTypes = nil
	file_proto_slack_proto_depIdxs = nil
}
