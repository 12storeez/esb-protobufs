// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.9
// source: proto/mindbox.proto

package mindbox

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Platform int32

const (
	Platform_IOS     Platform = 0
	Platform_ANDROID Platform = 1
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0: "IOS",
		1: "ANDROID",
	}
	Platform_value = map[string]int32{
		"IOS":     0,
		"ANDROID": 1,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mindbox_proto_enumTypes[0].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_proto_mindbox_proto_enumTypes[0]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{0}
}

type PushClickParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageUniqueKey string `protobuf:"bytes,1,opt,name=message_unique_key,json=messageUniqueKey,proto3" json:"message_unique_key,omitempty"`
	ButtonUniqueKey  string `protobuf:"bytes,2,opt,name=button_unique_key,json=buttonUniqueKey,proto3" json:"button_unique_key,omitempty"`
}

func (x *PushClickParams) Reset() {
	*x = PushClickParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushClickParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushClickParams) ProtoMessage() {}

func (x *PushClickParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushClickParams.ProtoReflect.Descriptor instead.
func (*PushClickParams) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{0}
}

func (x *PushClickParams) GetMessageUniqueKey() string {
	if x != nil {
		return x.MessageUniqueKey
	}
	return ""
}

func (x *PushClickParams) GetButtonUniqueKey() string {
	if x != nil {
		return x.ButtonUniqueKey
	}
	return ""
}

type PushClickResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *PushClickResponse) Reset() {
	*x = PushClickResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushClickResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushClickResponse) ProtoMessage() {}

func (x *PushClickResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushClickResponse.ProtoReflect.Descriptor instead.
func (*PushClickResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{1}
}

func (x *PushClickResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type IsUserExistParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobilePhone string `protobuf:"bytes,1,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
}

func (x *IsUserExistParams) Reset() {
	*x = IsUserExistParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserExistParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserExistParams) ProtoMessage() {}

func (x *IsUserExistParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserExistParams.ProtoReflect.Descriptor instead.
func (*IsUserExistParams) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{2}
}

func (x *IsUserExistParams) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

type IsUserExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok       bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *IsUserExistResponse) Reset() {
	*x = IsUserExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsUserExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsUserExistResponse) ProtoMessage() {}

func (x *IsUserExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsUserExistResponse.ProtoReflect.Descriptor instead.
func (*IsUserExistResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{3}
}

func (x *IsUserExistResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *IsUserExistResponse) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type InitDeviceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId  string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ApnsToken string `protobuf:"bytes,2,opt,name=apns_token,json=apnsToken,proto3" json:"apns_token,omitempty"`
}

func (x *InitDeviceParams) Reset() {
	*x = InitDeviceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitDeviceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitDeviceParams) ProtoMessage() {}

func (x *InitDeviceParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitDeviceParams.ProtoReflect.Descriptor instead.
func (*InitDeviceParams) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{4}
}

func (x *InitDeviceParams) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *InitDeviceParams) GetApnsToken() string {
	if x != nil {
		return x.ApnsToken
	}
	return ""
}

type InitDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *InitDeviceResponse) Reset() {
	*x = InitDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitDeviceResponse) ProtoMessage() {}

func (x *InitDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitDeviceResponse.ProtoReflect.Descriptor instead.
func (*InitDeviceResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{5}
}

func (x *InitDeviceResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type InitClientParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string   `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ClientId string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Platform Platform `protobuf:"varint,3,opt,name=platform,proto3,enum=mindbox.Platform" json:"platform,omitempty"`
}

func (x *InitClientParams) Reset() {
	*x = InitClientParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitClientParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitClientParams) ProtoMessage() {}

func (x *InitClientParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitClientParams.ProtoReflect.Descriptor instead.
func (*InitClientParams) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{6}
}

func (x *InitClientParams) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *InitClientParams) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *InitClientParams) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_IOS
}

type InitClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *InitClientResponse) Reset() {
	*x = InitClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitClientResponse) ProtoMessage() {}

func (x *InitClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitClientResponse.ProtoReflect.Descriptor instead.
func (*InitClientResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{7}
}

func (x *InitClientResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ParamsUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *ParamsUser) Reset() {
	*x = ParamsUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsUser) ProtoMessage() {}

func (x *ParamsUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsUser.ProtoReflect.Descriptor instead.
func (*ParamsUser) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{8}
}

func (x *ParamsUser) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type ResponseUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName         string             `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName          string             `protobuf:"bytes,2,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Email             string             `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	Phone             string             `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	BonusTotal        int32              `protobuf:"varint,5,opt,name=bonus_total,json=bonusTotal,proto3" json:"bonus_total,omitempty"`
	BonusAvailable    int32              `protobuf:"varint,6,opt,name=bonus_available,json=bonusAvailable,proto3" json:"bonus_available,omitempty"`
	BonusBlocked      int32              `protobuf:"varint,7,opt,name=bonus_blocked,json=bonusBlocked,proto3" json:"bonus_blocked,omitempty"`
	TotalPaidAmount   int32              `protobuf:"varint,8,opt,name=total_paid_amount,json=totalPaidAmount,proto3" json:"total_paid_amount,omitempty"`
	NearestExpiration *NearestExpiration `protobuf:"bytes,9,opt,name=nearest_expiration,json=nearestExpiration,proto3" json:"nearest_expiration,omitempty"`
}

func (x *ResponseUser) Reset() {
	*x = ResponseUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseUser) ProtoMessage() {}

func (x *ResponseUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseUser.ProtoReflect.Descriptor instead.
func (*ResponseUser) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseUser) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ResponseUser) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ResponseUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ResponseUser) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *ResponseUser) GetBonusTotal() int32 {
	if x != nil {
		return x.BonusTotal
	}
	return 0
}

func (x *ResponseUser) GetBonusAvailable() int32 {
	if x != nil {
		return x.BonusAvailable
	}
	return 0
}

func (x *ResponseUser) GetBonusBlocked() int32 {
	if x != nil {
		return x.BonusBlocked
	}
	return 0
}

func (x *ResponseUser) GetTotalPaidAmount() int32 {
	if x != nil {
		return x.TotalPaidAmount
	}
	return 0
}

func (x *ResponseUser) GetNearestExpiration() *NearestExpiration {
	if x != nil {
		return x.NearestExpiration
	}
	return nil
}

type NearestExpiration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int32  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Date  string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *NearestExpiration) Reset() {
	*x = NearestExpiration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NearestExpiration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NearestExpiration) ProtoMessage() {}

func (x *NearestExpiration) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NearestExpiration.ProtoReflect.Descriptor instead.
func (*NearestExpiration) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{10}
}

func (x *NearestExpiration) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NearestExpiration) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type ParamsOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	DateFrom string `protobuf:"bytes,2,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo   string `protobuf:"bytes,3,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
	Limit    int32  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Page     int32  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ParamsOrders) Reset() {
	*x = ParamsOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsOrders) ProtoMessage() {}

func (x *ParamsOrders) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsOrders.ProtoReflect.Descriptor instead.
func (*ParamsOrders) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{11}
}

func (x *ParamsOrders) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ParamsOrders) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *ParamsOrders) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

func (x *ParamsOrders) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ParamsOrders) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ResponseOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total  int32                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Result []*ResponseOrderData `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *ResponseOrders) Reset() {
	*x = ResponseOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOrders) ProtoMessage() {}

func (x *ResponseOrders) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOrders.ProtoReflect.Descriptor instead.
func (*ResponseOrders) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseOrders) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResponseOrders) GetResult() []*ResponseOrderData {
	if x != nil {
		return x.Result
	}
	return nil
}

type ResponseOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId                     string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CreatedDate                 string `protobuf:"bytes,2,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	PaymentType                 string `protobuf:"bytes,3,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	DiscountedTotalPrice        int32  `protobuf:"varint,4,opt,name=discounted_total_price,json=discountedTotalPrice,proto3" json:"discounted_total_price,omitempty"`
	PaymentAmount               int32  `protobuf:"varint,5,opt,name=payment_amount,json=paymentAmount,proto3" json:"payment_amount,omitempty"`
	AppliedDiscount             int32  `protobuf:"varint,6,opt,name=applied_discount,json=appliedDiscount,proto3" json:"applied_discount,omitempty"`
	AcquiredBalanceChange       int32  `protobuf:"varint,7,opt,name=acquired_balance_change,json=acquiredBalanceChange,proto3" json:"acquired_balance_change,omitempty"`
	CreatedTs                   int32  `protobuf:"varint,8,opt,name=created_ts,json=createdTs,proto3" json:"created_ts,omitempty"`
	AvailableFromDateTime       string `protobuf:"bytes,9,opt,name=available_from_date_time,json=availableFromDateTime,proto3" json:"available_from_date_time,omitempty"`
	BalanceChangeKind           string `protobuf:"bytes,10,opt,name=balance_change_kind,json=balanceChangeKind,proto3" json:"balance_change_kind,omitempty"`
	BalanceChangeKindSystemName string `protobuf:"bytes,11,opt,name=balance_change_kind_system_name,json=balanceChangeKindSystemName,proto3" json:"balance_change_kind_system_name,omitempty"`
	ExpirationDateTime          string `protobuf:"bytes,12,opt,name=expiration_date_time,json=expirationDateTime,proto3" json:"expiration_date_time,omitempty"`
}

func (x *ResponseOrderData) Reset() {
	*x = ResponseOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOrderData) ProtoMessage() {}

func (x *ResponseOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOrderData.ProtoReflect.Descriptor instead.
func (*ResponseOrderData) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{13}
}

func (x *ResponseOrderData) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *ResponseOrderData) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

func (x *ResponseOrderData) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *ResponseOrderData) GetDiscountedTotalPrice() int32 {
	if x != nil {
		return x.DiscountedTotalPrice
	}
	return 0
}

func (x *ResponseOrderData) GetPaymentAmount() int32 {
	if x != nil {
		return x.PaymentAmount
	}
	return 0
}

func (x *ResponseOrderData) GetAppliedDiscount() int32 {
	if x != nil {
		return x.AppliedDiscount
	}
	return 0
}

func (x *ResponseOrderData) GetAcquiredBalanceChange() int32 {
	if x != nil {
		return x.AcquiredBalanceChange
	}
	return 0
}

func (x *ResponseOrderData) GetCreatedTs() int32 {
	if x != nil {
		return x.CreatedTs
	}
	return 0
}

func (x *ResponseOrderData) GetAvailableFromDateTime() string {
	if x != nil {
		return x.AvailableFromDateTime
	}
	return ""
}

func (x *ResponseOrderData) GetBalanceChangeKind() string {
	if x != nil {
		return x.BalanceChangeKind
	}
	return ""
}

func (x *ResponseOrderData) GetBalanceChangeKindSystemName() string {
	if x != nil {
		return x.BalanceChangeKindSystemName
	}
	return ""
}

func (x *ResponseOrderData) GetExpirationDateTime() string {
	if x != nil {
		return x.ExpirationDateTime
	}
	return ""
}

type ParamsCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobilePhone string `protobuf:"bytes,1,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
	DeviceId    string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Ip          string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Platform    string `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform,omitempty"`
	Version     string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ParamsCode) Reset() {
	*x = ParamsCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsCode) ProtoMessage() {}

func (x *ParamsCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsCode.ProtoReflect.Descriptor instead.
func (*ParamsCode) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{14}
}

func (x *ParamsCode) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

func (x *ParamsCode) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ParamsCode) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ParamsCode) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *ParamsCode) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ResponseCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool  `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Timestamp int64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *ResponseCode) Reset() {
	*x = ResponseCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCode) ProtoMessage() {}

func (x *ResponseCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCode.ProtoReflect.Descriptor instead.
func (*ResponseCode) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{15}
}

func (x *ResponseCode) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ResponseCode) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ParamsCheckCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MobilePhone string `protobuf:"bytes,1,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *ParamsCheckCode) Reset() {
	*x = ParamsCheckCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsCheckCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsCheckCode) ProtoMessage() {}

func (x *ParamsCheckCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsCheckCode.ProtoReflect.Descriptor instead.
func (*ParamsCheckCode) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{16}
}

func (x *ParamsCheckCode) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

func (x *ParamsCheckCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ResponseCheckCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok        bool   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	ClientId  string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	MindboxId int32  `protobuf:"varint,4,opt,name=mindbox_id,json=mindboxId,proto3" json:"mindbox_id,omitempty"`
}

func (x *ResponseCheckCode) Reset() {
	*x = ResponseCheckCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseCheckCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseCheckCode) ProtoMessage() {}

func (x *ResponseCheckCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseCheckCode.ProtoReflect.Descriptor instead.
func (*ResponseCheckCode) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{17}
}

func (x *ResponseCheckCode) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *ResponseCheckCode) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ResponseCheckCode) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ResponseCheckCode) GetMindboxId() int32 {
	if x != nil {
		return x.MindboxId
	}
	return 0
}

type ParamsEditUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceUuid  string `protobuf:"bytes,1,opt,name=device_uuid,json=deviceUuid,proto3" json:"device_uuid,omitempty"`
	ClientId    string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	MobilePhone string `protobuf:"bytes,3,opt,name=mobile_phone,json=mobilePhone,proto3" json:"mobile_phone,omitempty"`
}

func (x *ParamsEditUser) Reset() {
	*x = ParamsEditUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsEditUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsEditUser) ProtoMessage() {}

func (x *ParamsEditUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsEditUser.ProtoReflect.Descriptor instead.
func (*ParamsEditUser) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{18}
}

func (x *ParamsEditUser) GetDeviceUuid() string {
	if x != nil {
		return x.DeviceUuid
	}
	return ""
}

func (x *ParamsEditUser) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ParamsEditUser) GetMobilePhone() string {
	if x != nil {
		return x.MobilePhone
	}
	return ""
}

type ResponseEditUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseEditUser) Reset() {
	*x = ResponseEditUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseEditUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseEditUser) ProtoMessage() {}

func (x *ResponseEditUser) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseEditUser.ProtoReflect.Descriptor instead.
func (*ResponseEditUser) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{19}
}

func (x *ResponseEditUser) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type ParamsOSMICard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *ParamsOSMICard) Reset() {
	*x = ParamsOSMICard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamsOSMICard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamsOSMICard) ProtoMessage() {}

func (x *ParamsOSMICard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamsOSMICard.ProtoReflect.Descriptor instead.
func (*ParamsOSMICard) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{20}
}

func (x *ParamsOSMICard) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type ResponseOSMICard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *ResponseOSMICard) Reset() {
	*x = ResponseOSMICard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseOSMICard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseOSMICard) ProtoMessage() {}

func (x *ResponseOSMICard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseOSMICard.ProtoReflect.Descriptor instead.
func (*ResponseOSMICard) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{21}
}

func (x *ResponseOSMICard) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type RemoveDeviceParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceId string `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *RemoveDeviceParams) Reset() {
	*x = RemoveDeviceParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDeviceParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDeviceParams) ProtoMessage() {}

func (x *RemoveDeviceParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDeviceParams.ProtoReflect.Descriptor instead.
func (*RemoveDeviceParams) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{22}
}

func (x *RemoveDeviceParams) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type RemoveDeviceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ok bool `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
}

func (x *RemoveDeviceResponse) Reset() {
	*x = RemoveDeviceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveDeviceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveDeviceResponse) ProtoMessage() {}

func (x *RemoveDeviceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveDeviceResponse.ProtoReflect.Descriptor instead.
func (*RemoveDeviceResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveDeviceResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type BonusesHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Filters    *Filters    `protobuf:"bytes,2,opt,name=filters,proto3" json:"filters,omitempty"`
	SiteId     string      `protobuf:"bytes,3,opt,name=site_id,json=siteId,proto3" json:"site_id,omitempty"`
}

func (x *BonusesHistoryRequest) Reset() {
	*x = BonusesHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusesHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusesHistoryRequest) ProtoMessage() {}

func (x *BonusesHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusesHistoryRequest.ProtoReflect.Descriptor instead.
func (*BonusesHistoryRequest) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{24}
}

func (x *BonusesHistoryRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *BonusesHistoryRequest) GetFilters() *Filters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *BonusesHistoryRequest) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{25}
}

func (x *Pagination) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *Pagination) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type Filters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DateFrom string `protobuf:"bytes,1,opt,name=date_from,json=dateFrom,proto3" json:"date_from,omitempty"`
	DateTo   string `protobuf:"bytes,2,opt,name=date_to,json=dateTo,proto3" json:"date_to,omitempty"`
}

func (x *Filters) Reset() {
	*x = Filters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filters) ProtoMessage() {}

func (x *Filters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filters.ProtoReflect.Descriptor instead.
func (*Filters) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{26}
}

func (x *Filters) GetDateFrom() string {
	if x != nil {
		return x.DateFrom
	}
	return ""
}

func (x *Filters) GetDateTo() string {
	if x != nil {
		return x.DateTo
	}
	return ""
}

type BonusesHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string                        `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                        `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code    int64                         `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Data    []*BonusesHistoryResponseData `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	Errors  []*Error                      `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *BonusesHistoryResponse) Reset() {
	*x = BonusesHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusesHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusesHistoryResponse) ProtoMessage() {}

func (x *BonusesHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusesHistoryResponse.ProtoReflect.Descriptor instead.
func (*BonusesHistoryResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{27}
}

func (x *BonusesHistoryResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BonusesHistoryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BonusesHistoryResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BonusesHistoryResponse) GetData() []*BonusesHistoryResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *BonusesHistoryResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target  string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Code    int64  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{28}
}

func (x *Error) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Error) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type BonusesHistoryResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId               string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	CreatedDate           string `protobuf:"bytes,2,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	AcquiredBalanceChange int32  `protobuf:"varint,3,opt,name=acquired_balance_change,json=acquiredBalanceChange,proto3" json:"acquired_balance_change,omitempty"`
	AvailableFromDate     string `protobuf:"bytes,4,opt,name=available_from_date,json=availableFromDate,proto3" json:"available_from_date,omitempty"`
	BalanceChangeKind     string `protobuf:"bytes,5,opt,name=balance_change_kind,json=balanceChangeKind,proto3" json:"balance_change_kind,omitempty"`
	ExpirationDate        string `protobuf:"bytes,6,opt,name=expiration_date,json=expirationDate,proto3" json:"expiration_date,omitempty"`
}

func (x *BonusesHistoryResponseData) Reset() {
	*x = BonusesHistoryResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusesHistoryResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusesHistoryResponseData) ProtoMessage() {}

func (x *BonusesHistoryResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusesHistoryResponseData.ProtoReflect.Descriptor instead.
func (*BonusesHistoryResponseData) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{29}
}

func (x *BonusesHistoryResponseData) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *BonusesHistoryResponseData) GetCreatedDate() string {
	if x != nil {
		return x.CreatedDate
	}
	return ""
}

func (x *BonusesHistoryResponseData) GetAcquiredBalanceChange() int32 {
	if x != nil {
		return x.AcquiredBalanceChange
	}
	return 0
}

func (x *BonusesHistoryResponseData) GetAvailableFromDate() string {
	if x != nil {
		return x.AvailableFromDate
	}
	return ""
}

func (x *BonusesHistoryResponseData) GetBalanceChangeKind() string {
	if x != nil {
		return x.BalanceChangeKind
	}
	return ""
}

func (x *BonusesHistoryResponseData) GetExpirationDate() string {
	if x != nil {
		return x.ExpirationDate
	}
	return ""
}

type CreateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       *string                `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3,oneof" json:"order_id,omitempty"`
	MindboxUserId *string                `protobuf:"bytes,2,opt,name=mindbox_user_id,json=mindboxUserId,proto3,oneof" json:"mindbox_user_id,omitempty"`
	SiteUserId    *string                `protobuf:"bytes,3,opt,name=site_user_id,json=siteUserId,proto3,oneof" json:"site_user_id,omitempty"`
	StoreCode     *string                `protobuf:"bytes,4,opt,name=store_code,json=storeCode,proto3,oneof" json:"store_code,omitempty"`
	TotalPrice    *float32               `protobuf:"fixed32,5,opt,name=total_price,json=totalPrice,proto3,oneof" json:"total_price,omitempty"`
	Positions     []*PositionsCreateData `protobuf:"bytes,6,rep,name=positions,proto3" json:"positions,omitempty"`
	Payments      []*PaymentsCreateData  `protobuf:"bytes,7,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *CreateOrderRequest) Reset() {
	*x = CreateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderRequest) ProtoMessage() {}

func (x *CreateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderRequest.ProtoReflect.Descriptor instead.
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{30}
}

func (x *CreateOrderRequest) GetOrderId() string {
	if x != nil && x.OrderId != nil {
		return *x.OrderId
	}
	return ""
}

func (x *CreateOrderRequest) GetMindboxUserId() string {
	if x != nil && x.MindboxUserId != nil {
		return *x.MindboxUserId
	}
	return ""
}

func (x *CreateOrderRequest) GetSiteUserId() string {
	if x != nil && x.SiteUserId != nil {
		return *x.SiteUserId
	}
	return ""
}

func (x *CreateOrderRequest) GetStoreCode() string {
	if x != nil && x.StoreCode != nil {
		return *x.StoreCode
	}
	return ""
}

func (x *CreateOrderRequest) GetTotalPrice() float32 {
	if x != nil && x.TotalPrice != nil {
		return *x.TotalPrice
	}
	return 0
}

func (x *CreateOrderRequest) GetPositions() []*PositionsCreateData {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *CreateOrderRequest) GetPayments() []*PaymentsCreateData {
	if x != nil {
		return x.Payments
	}
	return nil
}

type PositionsCreateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Quantity       int64   `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price          float32 `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	SequenceNumber int64   `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Status         int64   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	LineId         *int64  `protobuf:"varint,6,opt,name=line_id,json=lineId,proto3,oneof" json:"line_id,omitempty"`
}

func (x *PositionsCreateData) Reset() {
	*x = PositionsCreateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionsCreateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionsCreateData) ProtoMessage() {}

func (x *PositionsCreateData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionsCreateData.ProtoReflect.Descriptor instead.
func (*PositionsCreateData) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{31}
}

func (x *PositionsCreateData) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *PositionsCreateData) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PositionsCreateData) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PositionsCreateData) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *PositionsCreateData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PositionsCreateData) GetLineId() int64 {
	if x != nil && x.LineId != nil {
		return *x.LineId
	}
	return 0
}

type PaymentsCreateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Amount *float32 `protobuf:"fixed32,2,opt,name=amount,proto3,oneof" json:"amount,omitempty"`
}

func (x *PaymentsCreateData) Reset() {
	*x = PaymentsCreateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentsCreateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentsCreateData) ProtoMessage() {}

func (x *PaymentsCreateData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentsCreateData.ProtoReflect.Descriptor instead.
func (*PaymentsCreateData) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{32}
}

func (x *PaymentsCreateData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PaymentsCreateData) GetAmount() float32 {
	if x != nil && x.Amount != nil {
		return *x.Amount
	}
	return 0
}

type CreateOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string                   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *CreateOrderResponseData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Code    int64                    `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Errors  []*Error                 `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CreateOrderResponse) Reset() {
	*x = CreateOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponse) ProtoMessage() {}

func (x *CreateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResponse.ProtoReflect.Descriptor instead.
func (*CreateOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{33}
}

func (x *CreateOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CreateOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateOrderResponse) GetData() *CreateOrderResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateOrderResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateOrderResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CreateOrderResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MindboxId int64 `protobuf:"varint,1,opt,name=mindbox_id,json=mindboxId,proto3" json:"mindbox_id,omitempty"`
}

func (x *CreateOrderResponseData) Reset() {
	*x = CreateOrderResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrderResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrderResponseData) ProtoMessage() {}

func (x *CreateOrderResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrderResponseData.ProtoReflect.Descriptor instead.
func (*CreateOrderResponseData) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{34}
}

func (x *CreateOrderResponseData) GetMindboxId() int64 {
	if x != nil {
		return x.MindboxId
	}
	return 0
}

type UpdateOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId           string                 `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	OrderMindboxId    *int64                 `protobuf:"varint,2,opt,name=order_mindbox_id,json=orderMindboxId,proto3,oneof" json:"order_mindbox_id,omitempty"`
	StoreCode         *string                `protobuf:"bytes,3,opt,name=store_code,json=storeCode,proto3,oneof" json:"store_code,omitempty"`
	CustomFields      *string                `protobuf:"bytes,4,opt,name=custom_fields,json=customFields,proto3,oneof" json:"custom_fields,omitempty"`
	Positions         []*PositionsUpdateData `protobuf:"bytes,5,rep,name=positions,proto3" json:"positions,omitempty"`
	ExecutionDatetime *string                `protobuf:"bytes,6,opt,name=execution_datetime,json=executionDatetime,proto3,oneof" json:"execution_datetime,omitempty"`
}

func (x *UpdateOrderRequest) Reset() {
	*x = UpdateOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderRequest) ProtoMessage() {}

func (x *UpdateOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderRequest.ProtoReflect.Descriptor instead.
func (*UpdateOrderRequest) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *UpdateOrderRequest) GetOrderMindboxId() int64 {
	if x != nil && x.OrderMindboxId != nil {
		return *x.OrderMindboxId
	}
	return 0
}

func (x *UpdateOrderRequest) GetStoreCode() string {
	if x != nil && x.StoreCode != nil {
		return *x.StoreCode
	}
	return ""
}

func (x *UpdateOrderRequest) GetCustomFields() string {
	if x != nil && x.CustomFields != nil {
		return *x.CustomFields
	}
	return ""
}

func (x *UpdateOrderRequest) GetPositions() []*PositionsUpdateData {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *UpdateOrderRequest) GetExecutionDatetime() string {
	if x != nil && x.ExecutionDatetime != nil {
		return *x.ExecutionDatetime
	}
	return ""
}

type PositionsUpdateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *string  `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Quantity        int64    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	DiscountedPrice *float32 `protobuf:"fixed32,3,opt,name=discounted_price,json=discountedPrice,proto3,oneof" json:"discounted_price,omitempty"`
	Status          int64    `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	CustomFields    *string  `protobuf:"bytes,5,opt,name=custom_fields,json=customFields,proto3,oneof" json:"custom_fields,omitempty"`
}

func (x *PositionsUpdateData) Reset() {
	*x = PositionsUpdateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PositionsUpdateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PositionsUpdateData) ProtoMessage() {}

func (x *PositionsUpdateData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PositionsUpdateData.ProtoReflect.Descriptor instead.
func (*PositionsUpdateData) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{36}
}

func (x *PositionsUpdateData) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *PositionsUpdateData) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PositionsUpdateData) GetDiscountedPrice() float32 {
	if x != nil && x.DiscountedPrice != nil {
		return *x.DiscountedPrice
	}
	return 0
}

func (x *PositionsUpdateData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *PositionsUpdateData) GetCustomFields() string {
	if x != nil && x.CustomFields != nil {
		return *x.CustomFields
	}
	return ""
}

type UpdateOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code    int64    `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Errors  []*Error `protobuf:"bytes,4,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *UpdateOrderResponse) Reset() {
	*x = UpdateOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOrderResponse) ProtoMessage() {}

func (x *UpdateOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOrderResponse.ProtoReflect.Descriptor instead.
func (*UpdateOrderResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateOrderResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateOrderResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateOrderResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateOrderResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetOrderInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *GetOrderInfoRequest) Reset() {
	*x = GetOrderInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderInfoRequest) ProtoMessage() {}

func (x *GetOrderInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderInfoRequest.ProtoReflect.Descriptor instead.
func (*GetOrderInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{38}
}

func (x *GetOrderInfoRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type GetOrderInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string                    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code    int64                     `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Data    *GetOrderInfoResponseData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Errors  []*Error                  `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *GetOrderInfoResponse) Reset() {
	*x = GetOrderInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderInfoResponse) ProtoMessage() {}

func (x *GetOrderInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderInfoResponse.ProtoReflect.Descriptor instead.
func (*GetOrderInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{39}
}

func (x *GetOrderInfoResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrderInfoResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetOrderInfoResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetOrderInfoResponse) GetData() *GetOrderInfoResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetOrderInfoResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type GetOrderInfoResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MindboxId            int64                            `protobuf:"varint,2,opt,name=mindbox_id,json=mindboxId,proto3" json:"mindbox_id,omitempty"`
	CreateDatetime       string                           `protobuf:"bytes,3,opt,name=create_datetime,json=createDatetime,proto3" json:"create_datetime,omitempty"`
	DeliveryCost         float32                          `protobuf:"fixed32,4,opt,name=delivery_cost,json=deliveryCost,proto3" json:"delivery_cost,omitempty"`
	DiscountedTotalPrice float32                          `protobuf:"fixed32,5,opt,name=discounted_total_price,json=discountedTotalPrice,proto3" json:"discounted_total_price,omitempty"`
	ProcessingStatus     string                           `protobuf:"bytes,6,opt,name=processing_status,json=processingStatus,proto3" json:"processing_status,omitempty"`
	CustomFields         *string                          `protobuf:"bytes,7,opt,name=custom_fields,json=customFields,proto3,oneof" json:"custom_fields,omitempty"`
	AppliedPromotions    []*GetOrderInfoAppliedPromotions `protobuf:"bytes,8,rep,name=applied_promotions,json=appliedPromotions,proto3" json:"applied_promotions,omitempty"`
	BonusesChanges       []*GetOrderInfoBonusesChanges    `protobuf:"bytes,9,rep,name=bonuses_changes,json=bonusesChanges,proto3" json:"bonuses_changes,omitempty"`
	Payments             []*GetOrderInfoPayments          `protobuf:"bytes,10,rep,name=payments,proto3" json:"payments,omitempty"`
	Positions            []*GetOrderInfoPositions         `protobuf:"bytes,11,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *GetOrderInfoResponseData) Reset() {
	*x = GetOrderInfoResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderInfoResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderInfoResponseData) ProtoMessage() {}

func (x *GetOrderInfoResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderInfoResponseData.ProtoReflect.Descriptor instead.
func (*GetOrderInfoResponseData) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{40}
}

func (x *GetOrderInfoResponseData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetOrderInfoResponseData) GetMindboxId() int64 {
	if x != nil {
		return x.MindboxId
	}
	return 0
}

func (x *GetOrderInfoResponseData) GetCreateDatetime() string {
	if x != nil {
		return x.CreateDatetime
	}
	return ""
}

func (x *GetOrderInfoResponseData) GetDeliveryCost() float32 {
	if x != nil {
		return x.DeliveryCost
	}
	return 0
}

func (x *GetOrderInfoResponseData) GetDiscountedTotalPrice() float32 {
	if x != nil {
		return x.DiscountedTotalPrice
	}
	return 0
}

func (x *GetOrderInfoResponseData) GetProcessingStatus() string {
	if x != nil {
		return x.ProcessingStatus
	}
	return ""
}

func (x *GetOrderInfoResponseData) GetCustomFields() string {
	if x != nil && x.CustomFields != nil {
		return *x.CustomFields
	}
	return ""
}

func (x *GetOrderInfoResponseData) GetAppliedPromotions() []*GetOrderInfoAppliedPromotions {
	if x != nil {
		return x.AppliedPromotions
	}
	return nil
}

func (x *GetOrderInfoResponseData) GetBonusesChanges() []*GetOrderInfoBonusesChanges {
	if x != nil {
		return x.BonusesChanges
	}
	return nil
}

func (x *GetOrderInfoResponseData) GetPayments() []*GetOrderInfoPayments {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *GetOrderInfoResponseData) GetPositions() []*GetOrderInfoPositions {
	if x != nil {
		return x.Positions
	}
	return nil
}

type GetOrderInfoAppliedPromotions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Amount             float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PromotionName      string  `protobuf:"bytes,3,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`
	PromotionType      string  `protobuf:"bytes,4,opt,name=promotion_type,json=promotionType,proto3" json:"promotion_type,omitempty"`
	PromotionId        string  `protobuf:"bytes,5,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
	PromotionMindboxId int64   `protobuf:"varint,6,opt,name=promotion_mindbox_id,json=promotionMindboxId,proto3" json:"promotion_mindbox_id,omitempty"`
	CouponCode         string  `protobuf:"bytes,7,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
}

func (x *GetOrderInfoAppliedPromotions) Reset() {
	*x = GetOrderInfoAppliedPromotions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderInfoAppliedPromotions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderInfoAppliedPromotions) ProtoMessage() {}

func (x *GetOrderInfoAppliedPromotions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderInfoAppliedPromotions.ProtoReflect.Descriptor instead.
func (*GetOrderInfoAppliedPromotions) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{41}
}

func (x *GetOrderInfoAppliedPromotions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetOrderInfoAppliedPromotions) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *GetOrderInfoAppliedPromotions) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

func (x *GetOrderInfoAppliedPromotions) GetPromotionType() string {
	if x != nil {
		return x.PromotionType
	}
	return ""
}

func (x *GetOrderInfoAppliedPromotions) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *GetOrderInfoAppliedPromotions) GetPromotionMindboxId() int64 {
	if x != nil {
		return x.PromotionMindboxId
	}
	return 0
}

func (x *GetOrderInfoAppliedPromotions) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

type GetOrderInfoBonusesChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EarnedAmount          float32 `protobuf:"fixed32,1,opt,name=earned_amount,json=earnedAmount,proto3" json:"earned_amount,omitempty"`
	SpentAmount           float32 `protobuf:"fixed32,2,opt,name=spent_amount,json=spentAmount,proto3" json:"spent_amount,omitempty"`
	BalanceTypeName       string  `protobuf:"bytes,3,opt,name=balance_type_name,json=balanceTypeName,proto3" json:"balance_type_name,omitempty"`
	BalanceTypeSystemName string  `protobuf:"bytes,4,opt,name=balance_type_system_name,json=balanceTypeSystemName,proto3" json:"balance_type_system_name,omitempty"`
}

func (x *GetOrderInfoBonusesChanges) Reset() {
	*x = GetOrderInfoBonusesChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderInfoBonusesChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderInfoBonusesChanges) ProtoMessage() {}

func (x *GetOrderInfoBonusesChanges) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderInfoBonusesChanges.ProtoReflect.Descriptor instead.
func (*GetOrderInfoBonusesChanges) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{42}
}

func (x *GetOrderInfoBonusesChanges) GetEarnedAmount() float32 {
	if x != nil {
		return x.EarnedAmount
	}
	return 0
}

func (x *GetOrderInfoBonusesChanges) GetSpentAmount() float32 {
	if x != nil {
		return x.SpentAmount
	}
	return 0
}

func (x *GetOrderInfoBonusesChanges) GetBalanceTypeName() string {
	if x != nil {
		return x.BalanceTypeName
	}
	return ""
}

func (x *GetOrderInfoBonusesChanges) GetBalanceTypeSystemName() string {
	if x != nil {
		return x.BalanceTypeSystemName
	}
	return ""
}

type GetOrderInfoPayments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Amount float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *GetOrderInfoPayments) Reset() {
	*x = GetOrderInfoPayments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderInfoPayments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderInfoPayments) ProtoMessage() {}

func (x *GetOrderInfoPayments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderInfoPayments.ProtoReflect.Descriptor instead.
func (*GetOrderInfoPayments) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{43}
}

func (x *GetOrderInfoPayments) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetOrderInfoPayments) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type GetOrderInfoPositions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Quantity          int64                            `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price             float32                          `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	DiscountedPrice   float32                          `protobuf:"fixed32,4,opt,name=discounted_price,json=discountedPrice,proto3" json:"discounted_price,omitempty"`
	SequenceNumber    int64                            `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Status            string                           `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	LineId            int64                            `protobuf:"varint,7,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	CustomFields      *string                          `protobuf:"bytes,8,opt,name=custom_fields,json=customFields,proto3,oneof" json:"custom_fields,omitempty"`
	AppliedPromotions []*GetOrderInfoAppliedPromotions `protobuf:"bytes,9,rep,name=applied_promotions,json=appliedPromotions,proto3" json:"applied_promotions,omitempty"`
}

func (x *GetOrderInfoPositions) Reset() {
	*x = GetOrderInfoPositions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderInfoPositions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderInfoPositions) ProtoMessage() {}

func (x *GetOrderInfoPositions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderInfoPositions.ProtoReflect.Descriptor instead.
func (*GetOrderInfoPositions) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{44}
}

func (x *GetOrderInfoPositions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetOrderInfoPositions) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetOrderInfoPositions) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetOrderInfoPositions) GetDiscountedPrice() float32 {
	if x != nil {
		return x.DiscountedPrice
	}
	return 0
}

func (x *GetOrderInfoPositions) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *GetOrderInfoPositions) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetOrderInfoPositions) GetLineId() int64 {
	if x != nil {
		return x.LineId
	}
	return 0
}

func (x *GetOrderInfoPositions) GetCustomFields() string {
	if x != nil && x.CustomFields != nil {
		return *x.CustomFields
	}
	return ""
}

func (x *GetOrderInfoPositions) GetAppliedPromotions() []*GetOrderInfoAppliedPromotions {
	if x != nil {
		return x.AppliedPromotions
	}
	return nil
}

type CalculateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaId              *string                         `protobuf:"bytes,1,opt,name=area_id,json=areaId,proto3,oneof" json:"area_id,omitempty"`
	CashdeskId          *int64                          `protobuf:"varint,2,opt,name=cashdesk_id,json=cashdeskId,proto3,oneof" json:"cashdesk_id,omitempty"`
	DeliveryCost        *float32                        `protobuf:"fixed32,3,opt,name=delivery_cost,json=deliveryCost,proto3,oneof" json:"delivery_cost,omitempty"`
	MindboxUserId       *int64                          `protobuf:"varint,4,opt,name=mindbox_user_id,json=mindboxUserId,proto3,oneof" json:"mindbox_user_id,omitempty"`
	SiteUserId          *string                         `protobuf:"bytes,5,opt,name=site_user_id,json=siteUserId,proto3,oneof" json:"site_user_id,omitempty"`
	CustomFields        *string                         `protobuf:"bytes,6,opt,name=custom_fields,json=customFields,proto3,oneof" json:"custom_fields,omitempty"`
	Bonuses             []*CalculateBonuses             `protobuf:"bytes,7,rep,name=bonuses,proto3" json:"bonuses,omitempty"`
	Coupons             []*CalculateCoupons             `protobuf:"bytes,8,rep,name=coupons,proto3" json:"coupons,omitempty"`
	Payments            []*CalculatePayments            `protobuf:"bytes,9,rep,name=payments,proto3" json:"payments,omitempty"`
	PaymentsByGiftcard  []*CalculatePaymentsByGiftcard  `protobuf:"bytes,10,rep,name=payments_by_giftcard,json=paymentsByGiftcard,proto3" json:"payments_by_giftcard,omitempty"`
	RequestedPromotions []*CalculateRequestedPromotions `protobuf:"bytes,11,rep,name=requested_promotions,json=requestedPromotions,proto3" json:"requested_promotions,omitempty"`
	Positions           []*CalculatePositions           `protobuf:"bytes,12,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *CalculateRequest) Reset() {
	*x = CalculateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRequest) ProtoMessage() {}

func (x *CalculateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRequest.ProtoReflect.Descriptor instead.
func (*CalculateRequest) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{45}
}

func (x *CalculateRequest) GetAreaId() string {
	if x != nil && x.AreaId != nil {
		return *x.AreaId
	}
	return ""
}

func (x *CalculateRequest) GetCashdeskId() int64 {
	if x != nil && x.CashdeskId != nil {
		return *x.CashdeskId
	}
	return 0
}

func (x *CalculateRequest) GetDeliveryCost() float32 {
	if x != nil && x.DeliveryCost != nil {
		return *x.DeliveryCost
	}
	return 0
}

func (x *CalculateRequest) GetMindboxUserId() int64 {
	if x != nil && x.MindboxUserId != nil {
		return *x.MindboxUserId
	}
	return 0
}

func (x *CalculateRequest) GetSiteUserId() string {
	if x != nil && x.SiteUserId != nil {
		return *x.SiteUserId
	}
	return ""
}

func (x *CalculateRequest) GetCustomFields() string {
	if x != nil && x.CustomFields != nil {
		return *x.CustomFields
	}
	return ""
}

func (x *CalculateRequest) GetBonuses() []*CalculateBonuses {
	if x != nil {
		return x.Bonuses
	}
	return nil
}

func (x *CalculateRequest) GetCoupons() []*CalculateCoupons {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *CalculateRequest) GetPayments() []*CalculatePayments {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *CalculateRequest) GetPaymentsByGiftcard() []*CalculatePaymentsByGiftcard {
	if x != nil {
		return x.PaymentsByGiftcard
	}
	return nil
}

func (x *CalculateRequest) GetRequestedPromotions() []*CalculateRequestedPromotions {
	if x != nil {
		return x.RequestedPromotions
	}
	return nil
}

func (x *CalculateRequest) GetPositions() []*CalculatePositions {
	if x != nil {
		return x.Positions
	}
	return nil
}

type CalculateBonuses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount                float32 `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
	BalanceTypeSystemName *string `protobuf:"bytes,2,opt,name=balance_type_system_name,json=balanceTypeSystemName,proto3,oneof" json:"balance_type_system_name,omitempty"`
}

func (x *CalculateBonuses) Reset() {
	*x = CalculateBonuses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateBonuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateBonuses) ProtoMessage() {}

func (x *CalculateBonuses) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateBonuses.ProtoReflect.Descriptor instead.
func (*CalculateBonuses) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{46}
}

func (x *CalculateBonuses) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CalculateBonuses) GetBalanceTypeSystemName() string {
	if x != nil && x.BalanceTypeSystemName != nil {
		return *x.BalanceTypeSystemName
	}
	return ""
}

type CalculateCoupons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code *string `protobuf:"bytes,1,opt,name=code,proto3,oneof" json:"code,omitempty"`
}

func (x *CalculateCoupons) Reset() {
	*x = CalculateCoupons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateCoupons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateCoupons) ProtoMessage() {}

func (x *CalculateCoupons) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateCoupons.ProtoReflect.Descriptor instead.
func (*CalculateCoupons) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{47}
}

func (x *CalculateCoupons) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

type CalculatePayments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	CardHash *int64 `protobuf:"varint,2,opt,name=card_hash,json=cardHash,proto3,oneof" json:"card_hash,omitempty"`
}

func (x *CalculatePayments) Reset() {
	*x = CalculatePayments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatePayments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatePayments) ProtoMessage() {}

func (x *CalculatePayments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatePayments.ProtoReflect.Descriptor instead.
func (*CalculatePayments) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{48}
}

func (x *CalculatePayments) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CalculatePayments) GetCardHash() int64 {
	if x != nil && x.CardHash != nil {
		return *x.CardHash
	}
	return 0
}

type CalculatePaymentsByGiftcard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Cvv  *int64 `protobuf:"varint,3,opt,name=cvv,proto3,oneof" json:"cvv,omitempty"`
}

func (x *CalculatePaymentsByGiftcard) Reset() {
	*x = CalculatePaymentsByGiftcard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatePaymentsByGiftcard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatePaymentsByGiftcard) ProtoMessage() {}

func (x *CalculatePaymentsByGiftcard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatePaymentsByGiftcard.ProtoReflect.Descriptor instead.
func (*CalculatePaymentsByGiftcard) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{49}
}

func (x *CalculatePaymentsByGiftcard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CalculatePaymentsByGiftcard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CalculatePaymentsByGiftcard) GetCvv() int64 {
	if x != nil && x.Cvv != nil {
		return *x.Cvv
	}
	return 0
}

type CalculateRequestedPromotions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type       string  `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Amount     float32 `protobuf:"fixed32,3,opt,name=amount,proto3" json:"amount,omitempty"`
	CouponCode *string `protobuf:"bytes,4,opt,name=coupon_code,json=couponCode,proto3,oneof" json:"coupon_code,omitempty"`
}

func (x *CalculateRequestedPromotions) Reset() {
	*x = CalculateRequestedPromotions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateRequestedPromotions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRequestedPromotions) ProtoMessage() {}

func (x *CalculateRequestedPromotions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRequestedPromotions.ProtoReflect.Descriptor instead.
func (*CalculateRequestedPromotions) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{50}
}

func (x *CalculateRequestedPromotions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CalculateRequestedPromotions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CalculateRequestedPromotions) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CalculateRequestedPromotions) GetCouponCode() string {
	if x != nil && x.CouponCode != nil {
		return *x.CouponCode
	}
	return ""
}

type CalculatePositions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  *string                         `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Quantity            int64                           `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price               float32                         `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	SequenceNumber      *int64                          `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3,oneof" json:"sequence_number,omitempty"`
	Status              int64                           `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	LineId              *int64                          `protobuf:"varint,6,opt,name=line_id,json=lineId,proto3,oneof" json:"line_id,omitempty"`
	CustomFields        *string                         `protobuf:"bytes,7,opt,name=custom_fields,json=customFields,proto3,oneof" json:"custom_fields,omitempty"`
	RequestedPromotions []*CalculateRequestedPromotions `protobuf:"bytes,8,rep,name=requested_promotions,json=requestedPromotions,proto3" json:"requested_promotions,omitempty"`
}

func (x *CalculatePositions) Reset() {
	*x = CalculatePositions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatePositions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatePositions) ProtoMessage() {}

func (x *CalculatePositions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatePositions.ProtoReflect.Descriptor instead.
func (*CalculatePositions) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{51}
}

func (x *CalculatePositions) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CalculatePositions) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CalculatePositions) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CalculatePositions) GetSequenceNumber() int64 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *CalculatePositions) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CalculatePositions) GetLineId() int64 {
	if x != nil && x.LineId != nil {
		return *x.LineId
	}
	return 0
}

func (x *CalculatePositions) GetCustomFields() string {
	if x != nil && x.CustomFields != nil {
		return *x.CustomFields
	}
	return ""
}

func (x *CalculatePositions) GetRequestedPromotions() []*CalculateRequestedPromotions {
	if x != nil {
		return x.RequestedPromotions
	}
	return nil
}

type CalculateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Code    int64                  `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Data    *CalculateResponseData `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Errors  []*Error               `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *CalculateResponse) Reset() {
	*x = CalculateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponse) ProtoMessage() {}

func (x *CalculateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponse.ProtoReflect.Descriptor instead.
func (*CalculateResponse) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{52}
}

func (x *CalculateResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CalculateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CalculateResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CalculateResponse) GetData() *CalculateResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CalculateResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type CalculateResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MindboxId            int64                                 `protobuf:"varint,1,opt,name=mindbox_id,json=mindboxId,proto3" json:"mindbox_id,omitempty"`
	MindboxUserId        int64                                 `protobuf:"varint,2,opt,name=mindbox_user_id,json=mindboxUserId,proto3" json:"mindbox_user_id,omitempty"`
	SiteUserId           string                                `protobuf:"bytes,3,opt,name=site_user_id,json=siteUserId,proto3" json:"site_user_id,omitempty"`
	DeliveryCost         float32                               `protobuf:"fixed32,4,opt,name=delivery_cost,json=deliveryCost,proto3" json:"delivery_cost,omitempty"`
	DiscountedTotalPrice float32                               `protobuf:"fixed32,5,opt,name=discounted_total_price,json=discountedTotalPrice,proto3" json:"discounted_total_price,omitempty"`
	ProcessingStatus     string                                `protobuf:"bytes,6,opt,name=processing_status,json=processingStatus,proto3" json:"processing_status,omitempty"`
	CustomFields         string                                `protobuf:"bytes,7,opt,name=custom_fields,json=customFields,proto3" json:"custom_fields,omitempty"`
	TotalBonuses         *CalculateResponseTotalBonuses        `protobuf:"bytes,8,opt,name=total_bonuses,json=totalBonuses,proto3" json:"total_bonuses,omitempty"`
	AppliedPromotions    []*CalculateResponseAppliedPromotions `protobuf:"bytes,9,rep,name=applied_promotions,json=appliedPromotions,proto3" json:"applied_promotions,omitempty"`
	BonusesChanges       []*CalculateResponseBonusesChanges    `protobuf:"bytes,10,rep,name=bonuses_changes,json=bonusesChanges,proto3" json:"bonuses_changes,omitempty"`
	BonusesInfo          []*CalculateResponseBonusesInfo       `protobuf:"bytes,11,rep,name=bonuses_info,json=bonusesInfo,proto3" json:"bonuses_info,omitempty"`
	Coupons              []*CalculateResponseCoupons           `protobuf:"bytes,12,rep,name=coupons,proto3" json:"coupons,omitempty"`
	Payments             []*CalculateResponsePayments          `protobuf:"bytes,13,rep,name=payments,proto3" json:"payments,omitempty"`
	Placeholders         []*CalculateResponsePlaceholders      `protobuf:"bytes,14,rep,name=placeholders,proto3" json:"placeholders,omitempty"`
	Positions            []*CalculateResponsePositions         `protobuf:"bytes,15,rep,name=positions,proto3" json:"positions,omitempty"`
}

func (x *CalculateResponseData) Reset() {
	*x = CalculateResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseData) ProtoMessage() {}

func (x *CalculateResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseData.ProtoReflect.Descriptor instead.
func (*CalculateResponseData) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{53}
}

func (x *CalculateResponseData) GetMindboxId() int64 {
	if x != nil {
		return x.MindboxId
	}
	return 0
}

func (x *CalculateResponseData) GetMindboxUserId() int64 {
	if x != nil {
		return x.MindboxUserId
	}
	return 0
}

func (x *CalculateResponseData) GetSiteUserId() string {
	if x != nil {
		return x.SiteUserId
	}
	return ""
}

func (x *CalculateResponseData) GetDeliveryCost() float32 {
	if x != nil {
		return x.DeliveryCost
	}
	return 0
}

func (x *CalculateResponseData) GetDiscountedTotalPrice() float32 {
	if x != nil {
		return x.DiscountedTotalPrice
	}
	return 0
}

func (x *CalculateResponseData) GetProcessingStatus() string {
	if x != nil {
		return x.ProcessingStatus
	}
	return ""
}

func (x *CalculateResponseData) GetCustomFields() string {
	if x != nil {
		return x.CustomFields
	}
	return ""
}

func (x *CalculateResponseData) GetTotalBonuses() *CalculateResponseTotalBonuses {
	if x != nil {
		return x.TotalBonuses
	}
	return nil
}

func (x *CalculateResponseData) GetAppliedPromotions() []*CalculateResponseAppliedPromotions {
	if x != nil {
		return x.AppliedPromotions
	}
	return nil
}

func (x *CalculateResponseData) GetBonusesChanges() []*CalculateResponseBonusesChanges {
	if x != nil {
		return x.BonusesChanges
	}
	return nil
}

func (x *CalculateResponseData) GetBonusesInfo() []*CalculateResponseBonusesInfo {
	if x != nil {
		return x.BonusesInfo
	}
	return nil
}

func (x *CalculateResponseData) GetCoupons() []*CalculateResponseCoupons {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *CalculateResponseData) GetPayments() []*CalculateResponsePayments {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *CalculateResponseData) GetPlaceholders() []*CalculateResponsePlaceholders {
	if x != nil {
		return x.Placeholders
	}
	return nil
}

func (x *CalculateResponseData) GetPositions() []*CalculateResponsePositions {
	if x != nil {
		return x.Positions
	}
	return nil
}

type CalculateResponseTotalBonuses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableForOrder float32 `protobuf:"fixed32,1,opt,name=available_for_order,json=availableForOrder,proto3" json:"available_for_order,omitempty"`
	SpentForOrder     float32 `protobuf:"fixed32,2,opt,name=spent_for_order,json=spentForOrder,proto3" json:"spent_for_order,omitempty"`
	Status            string  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Available         float32 `protobuf:"fixed32,4,opt,name=available,proto3" json:"available,omitempty"`
	Blocked           float32 `protobuf:"fixed32,5,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Total             float32 `protobuf:"fixed32,6,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *CalculateResponseTotalBonuses) Reset() {
	*x = CalculateResponseTotalBonuses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseTotalBonuses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseTotalBonuses) ProtoMessage() {}

func (x *CalculateResponseTotalBonuses) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseTotalBonuses.ProtoReflect.Descriptor instead.
func (*CalculateResponseTotalBonuses) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{54}
}

func (x *CalculateResponseTotalBonuses) GetAvailableForOrder() float32 {
	if x != nil {
		return x.AvailableForOrder
	}
	return 0
}

func (x *CalculateResponseTotalBonuses) GetSpentForOrder() float32 {
	if x != nil {
		return x.SpentForOrder
	}
	return 0
}

func (x *CalculateResponseTotalBonuses) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CalculateResponseTotalBonuses) GetAvailable() float32 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *CalculateResponseTotalBonuses) GetBlocked() float32 {
	if x != nil {
		return x.Blocked
	}
	return 0
}

func (x *CalculateResponseTotalBonuses) GetTotal() float32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CalculateResponseAppliedPromotions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Amount             float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	PromotionName      string  `protobuf:"bytes,3,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`
	PromotionType      string  `protobuf:"bytes,4,opt,name=promotion_type,json=promotionType,proto3" json:"promotion_type,omitempty"`
	PromotionId        string  `protobuf:"bytes,5,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
	PromotionMindboxId int64   `protobuf:"varint,6,opt,name=promotion_mindbox_id,json=promotionMindboxId,proto3" json:"promotion_mindbox_id,omitempty"`
	CouponCode         string  `protobuf:"bytes,7,opt,name=coupon_code,json=couponCode,proto3" json:"coupon_code,omitempty"`
}

func (x *CalculateResponseAppliedPromotions) Reset() {
	*x = CalculateResponseAppliedPromotions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseAppliedPromotions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseAppliedPromotions) ProtoMessage() {}

func (x *CalculateResponseAppliedPromotions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseAppliedPromotions.ProtoReflect.Descriptor instead.
func (*CalculateResponseAppliedPromotions) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{55}
}

func (x *CalculateResponseAppliedPromotions) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CalculateResponseAppliedPromotions) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CalculateResponseAppliedPromotions) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

func (x *CalculateResponseAppliedPromotions) GetPromotionType() string {
	if x != nil {
		return x.PromotionType
	}
	return ""
}

func (x *CalculateResponseAppliedPromotions) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *CalculateResponseAppliedPromotions) GetPromotionMindboxId() int64 {
	if x != nil {
		return x.PromotionMindboxId
	}
	return 0
}

func (x *CalculateResponseAppliedPromotions) GetCouponCode() string {
	if x != nil {
		return x.CouponCode
	}
	return ""
}

type CalculateResponseBonusesChanges struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EarnedAmount          float32 `protobuf:"fixed32,1,opt,name=earned_amount,json=earnedAmount,proto3" json:"earned_amount,omitempty"`
	SpentAmount           float32 `protobuf:"fixed32,2,opt,name=spent_amount,json=spentAmount,proto3" json:"spent_amount,omitempty"`
	BalanceTypeName       string  `protobuf:"bytes,3,opt,name=balance_type_name,json=balanceTypeName,proto3" json:"balance_type_name,omitempty"`
	BalanceTypeSystemName string  `protobuf:"bytes,4,opt,name=balance_type_system_name,json=balanceTypeSystemName,proto3" json:"balance_type_system_name,omitempty"`
}

func (x *CalculateResponseBonusesChanges) Reset() {
	*x = CalculateResponseBonusesChanges{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseBonusesChanges) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseBonusesChanges) ProtoMessage() {}

func (x *CalculateResponseBonusesChanges) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseBonusesChanges.ProtoReflect.Descriptor instead.
func (*CalculateResponseBonusesChanges) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{56}
}

func (x *CalculateResponseBonusesChanges) GetEarnedAmount() float32 {
	if x != nil {
		return x.EarnedAmount
	}
	return 0
}

func (x *CalculateResponseBonusesChanges) GetSpentAmount() float32 {
	if x != nil {
		return x.SpentAmount
	}
	return 0
}

func (x *CalculateResponseBonusesChanges) GetBalanceTypeName() string {
	if x != nil {
		return x.BalanceTypeName
	}
	return ""
}

func (x *CalculateResponseBonusesChanges) GetBalanceTypeSystemName() string {
	if x != nil {
		return x.BalanceTypeSystemName
	}
	return ""
}

type CalculateResponseBonusesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableForOrder     float32 `protobuf:"fixed32,1,opt,name=available_for_order,json=availableForOrder,proto3" json:"available_for_order,omitempty"`
	SpentForOrder         float32 `protobuf:"fixed32,2,opt,name=spent_for_order,json=spentForOrder,proto3" json:"spent_for_order,omitempty"`
	Status                string  `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Available             float32 `protobuf:"fixed32,4,opt,name=available,proto3" json:"available,omitempty"`
	Blocked               float32 `protobuf:"fixed32,5,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Total                 float32 `protobuf:"fixed32,6,opt,name=total,proto3" json:"total,omitempty"`
	BalanceTypeName       string  `protobuf:"bytes,7,opt,name=balance_type_name,json=balanceTypeName,proto3" json:"balance_type_name,omitempty"`
	BalanceTypeSystemName string  `protobuf:"bytes,8,opt,name=balance_type_system_name,json=balanceTypeSystemName,proto3" json:"balance_type_system_name,omitempty"`
}

func (x *CalculateResponseBonusesInfo) Reset() {
	*x = CalculateResponseBonusesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseBonusesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseBonusesInfo) ProtoMessage() {}

func (x *CalculateResponseBonusesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseBonusesInfo.ProtoReflect.Descriptor instead.
func (*CalculateResponseBonusesInfo) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{57}
}

func (x *CalculateResponseBonusesInfo) GetAvailableForOrder() float32 {
	if x != nil {
		return x.AvailableForOrder
	}
	return 0
}

func (x *CalculateResponseBonusesInfo) GetSpentForOrder() float32 {
	if x != nil {
		return x.SpentForOrder
	}
	return 0
}

func (x *CalculateResponseBonusesInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CalculateResponseBonusesInfo) GetAvailable() float32 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *CalculateResponseBonusesInfo) GetBlocked() float32 {
	if x != nil {
		return x.Blocked
	}
	return 0
}

func (x *CalculateResponseBonusesInfo) GetTotal() float32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CalculateResponseBonusesInfo) GetBalanceTypeName() string {
	if x != nil {
		return x.BalanceTypeName
	}
	return ""
}

func (x *CalculateResponseBonusesInfo) GetBalanceTypeSystemName() string {
	if x != nil {
		return x.BalanceTypeSystemName
	}
	return ""
}

type CalculateResponseCoupons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiscountForOrder float32 `protobuf:"fixed32,1,opt,name=discount_for_order,json=discountForOrder,proto3" json:"discount_for_order,omitempty"`
	AvailableFrom    string  `protobuf:"bytes,2,opt,name=available_from,json=availableFrom,proto3" json:"available_from,omitempty"`
	AvailableTo      string  `protobuf:"bytes,3,opt,name=available_to,json=availableTo,proto3" json:"available_to,omitempty"`
	Status           string  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UsedDatetime     string  `protobuf:"bytes,5,opt,name=used_datetime,json=usedDatetime,proto3" json:"used_datetime,omitempty"`
	Code             string  `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *CalculateResponseCoupons) Reset() {
	*x = CalculateResponseCoupons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseCoupons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseCoupons) ProtoMessage() {}

func (x *CalculateResponseCoupons) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseCoupons.ProtoReflect.Descriptor instead.
func (*CalculateResponseCoupons) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{58}
}

func (x *CalculateResponseCoupons) GetDiscountForOrder() float32 {
	if x != nil {
		return x.DiscountForOrder
	}
	return 0
}

func (x *CalculateResponseCoupons) GetAvailableFrom() string {
	if x != nil {
		return x.AvailableFrom
	}
	return ""
}

func (x *CalculateResponseCoupons) GetAvailableTo() string {
	if x != nil {
		return x.AvailableTo
	}
	return ""
}

func (x *CalculateResponseCoupons) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CalculateResponseCoupons) GetUsedDatetime() string {
	if x != nil {
		return x.UsedDatetime
	}
	return ""
}

func (x *CalculateResponseCoupons) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type CalculateResponsePayments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                    string                     `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	AvailableAmountForOrder float32                    `protobuf:"fixed32,2,opt,name=available_amount_for_order,json=availableAmountForOrder,proto3" json:"available_amount_for_order,omitempty"`
	Giftcard                *CalculateResponseGiftcard `protobuf:"bytes,3,opt,name=giftcard,proto3" json:"giftcard,omitempty"`
}

func (x *CalculateResponsePayments) Reset() {
	*x = CalculateResponsePayments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponsePayments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponsePayments) ProtoMessage() {}

func (x *CalculateResponsePayments) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponsePayments.ProtoReflect.Descriptor instead.
func (*CalculateResponsePayments) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{59}
}

func (x *CalculateResponsePayments) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CalculateResponsePayments) GetAvailableAmountForOrder() float32 {
	if x != nil {
		return x.AvailableAmountForOrder
	}
	return 0
}

func (x *CalculateResponsePayments) GetGiftcard() *CalculateResponseGiftcard {
	if x != nil {
		return x.Giftcard
	}
	return nil
}

type CalculateResponseGiftcard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status    string  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Available float32 `protobuf:"fixed32,3,opt,name=available,proto3" json:"available,omitempty"`
	Total     float32 `protobuf:"fixed32,4,opt,name=total,proto3" json:"total,omitempty"`
	Used      float32 `protobuf:"fixed32,5,opt,name=used,proto3" json:"used,omitempty"`
}

func (x *CalculateResponseGiftcard) Reset() {
	*x = CalculateResponseGiftcard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseGiftcard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseGiftcard) ProtoMessage() {}

func (x *CalculateResponseGiftcard) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseGiftcard.ProtoReflect.Descriptor instead.
func (*CalculateResponseGiftcard) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{60}
}

func (x *CalculateResponseGiftcard) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CalculateResponseGiftcard) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CalculateResponseGiftcard) GetAvailable() float32 {
	if x != nil {
		return x.Available
	}
	return 0
}

func (x *CalculateResponseGiftcard) GetTotal() float32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CalculateResponseGiftcard) GetUsed() float32 {
	if x != nil {
		return x.Used
	}
	return 0
}

type CalculateResponsePlaceholders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string                      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content []*CalculateResponseContent `protobuf:"bytes,2,rep,name=content,proto3" json:"content,omitempty"`
}

func (x *CalculateResponsePlaceholders) Reset() {
	*x = CalculateResponsePlaceholders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponsePlaceholders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponsePlaceholders) ProtoMessage() {}

func (x *CalculateResponsePlaceholders) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponsePlaceholders.ProtoReflect.Descriptor instead.
func (*CalculateResponsePlaceholders) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{61}
}

func (x *CalculateResponsePlaceholders) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CalculateResponsePlaceholders) GetContent() []*CalculateResponseContent {
	if x != nil {
		return x.Content
	}
	return nil
}

type CalculateResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are assignable to Result:
	//	*CalculateResponseContent_Message
	//	*CalculateResponseContent_PossibleDiscounts
	Result             isCalculateResponseContent_Result `protobuf_oneof:"result"`
	PromotionId        string                            `protobuf:"bytes,4,opt,name=promotion_id,json=promotionId,proto3" json:"promotion_id,omitempty"`
	PromotionMindboxId int64                             `protobuf:"varint,5,opt,name=promotion_mindbox_id,json=promotionMindboxId,proto3" json:"promotion_mindbox_id,omitempty"`
	PromotionName      string                            `protobuf:"bytes,6,opt,name=promotion_name,json=promotionName,proto3" json:"promotion_name,omitempty"`
	PromotionType      string                            `protobuf:"bytes,7,opt,name=promotion_type,json=promotionType,proto3" json:"promotion_type,omitempty"`
}

func (x *CalculateResponseContent) Reset() {
	*x = CalculateResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseContent) ProtoMessage() {}

func (x *CalculateResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseContent.ProtoReflect.Descriptor instead.
func (*CalculateResponseContent) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{62}
}

func (x *CalculateResponseContent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (m *CalculateResponseContent) GetResult() isCalculateResponseContent_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CalculateResponseContent) GetMessage() string {
	if x, ok := x.GetResult().(*CalculateResponseContent_Message); ok {
		return x.Message
	}
	return ""
}

func (x *CalculateResponseContent) GetPossibleDiscounts() *CalculateResponsePossibleDiscounts {
	if x, ok := x.GetResult().(*CalculateResponseContent_PossibleDiscounts); ok {
		return x.PossibleDiscounts
	}
	return nil
}

func (x *CalculateResponseContent) GetPromotionId() string {
	if x != nil {
		return x.PromotionId
	}
	return ""
}

func (x *CalculateResponseContent) GetPromotionMindboxId() int64 {
	if x != nil {
		return x.PromotionMindboxId
	}
	return 0
}

func (x *CalculateResponseContent) GetPromotionName() string {
	if x != nil {
		return x.PromotionName
	}
	return ""
}

func (x *CalculateResponseContent) GetPromotionType() string {
	if x != nil {
		return x.PromotionType
	}
	return ""
}

type isCalculateResponseContent_Result interface {
	isCalculateResponseContent_Result()
}

type CalculateResponseContent_Message struct {
	Message string `protobuf:"bytes,2,opt,name=message,proto3,oneof"`
}

type CalculateResponseContent_PossibleDiscounts struct {
	PossibleDiscounts *CalculateResponsePossibleDiscounts `protobuf:"bytes,3,opt,name=possible_discounts,json=possibleDiscounts,proto3,oneof"`
}

func (*CalculateResponseContent_Message) isCalculateResponseContent_Result() {}

func (*CalculateResponseContent_PossibleDiscounts) isCalculateResponseContent_Result() {}

type CalculateResponsePossibleDiscounts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64                       `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Amount   float32                     `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Type     string                      `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Products []*CalculateResponseProduct `protobuf:"bytes,4,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *CalculateResponsePossibleDiscounts) Reset() {
	*x = CalculateResponsePossibleDiscounts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponsePossibleDiscounts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponsePossibleDiscounts) ProtoMessage() {}

func (x *CalculateResponsePossibleDiscounts) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponsePossibleDiscounts.ProtoReflect.Descriptor instead.
func (*CalculateResponsePossibleDiscounts) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{63}
}

func (x *CalculateResponsePossibleDiscounts) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CalculateResponsePossibleDiscounts) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CalculateResponsePossibleDiscounts) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CalculateResponsePossibleDiscounts) GetProducts() []*CalculateResponseProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

type CalculateResponseProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MindboxId int64  `protobuf:"varint,2,opt,name=mindbox_id,json=mindboxId,proto3" json:"mindbox_id,omitempty"`
}

func (x *CalculateResponseProduct) Reset() {
	*x = CalculateResponseProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponseProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponseProduct) ProtoMessage() {}

func (x *CalculateResponseProduct) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponseProduct.ProtoReflect.Descriptor instead.
func (*CalculateResponseProduct) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{64}
}

func (x *CalculateResponseProduct) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CalculateResponseProduct) GetMindboxId() int64 {
	if x != nil {
		return x.MindboxId
	}
	return 0
}

type CalculateResponsePositions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Quantity          int64                                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price             float32                               `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	DiscountedPrice   float32                               `protobuf:"fixed32,4,opt,name=discounted_price,json=discountedPrice,proto3" json:"discounted_price,omitempty"`
	SequenceNumber    int64                                 `protobuf:"varint,5,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Status            string                                `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	LineId            int64                                 `protobuf:"varint,7,opt,name=line_id,json=lineId,proto3" json:"line_id,omitempty"`
	CustomFields      string                                `protobuf:"bytes,8,opt,name=custom_fields,json=customFields,proto3" json:"custom_fields,omitempty"`
	AppliedPromotions []*CalculateResponseAppliedPromotions `protobuf:"bytes,9,rep,name=applied_promotions,json=appliedPromotions,proto3" json:"applied_promotions,omitempty"`
}

func (x *CalculateResponsePositions) Reset() {
	*x = CalculateResponsePositions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_mindbox_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponsePositions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponsePositions) ProtoMessage() {}

func (x *CalculateResponsePositions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mindbox_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponsePositions.ProtoReflect.Descriptor instead.
func (*CalculateResponsePositions) Descriptor() ([]byte, []int) {
	return file_proto_mindbox_proto_rawDescGZIP(), []int{65}
}

func (x *CalculateResponsePositions) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CalculateResponsePositions) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CalculateResponsePositions) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CalculateResponsePositions) GetDiscountedPrice() float32 {
	if x != nil {
		return x.DiscountedPrice
	}
	return 0
}

func (x *CalculateResponsePositions) GetSequenceNumber() int64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *CalculateResponsePositions) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CalculateResponsePositions) GetLineId() int64 {
	if x != nil {
		return x.LineId
	}
	return 0
}

func (x *CalculateResponsePositions) GetCustomFields() string {
	if x != nil {
		return x.CustomFields
	}
	return ""
}

func (x *CalculateResponsePositions) GetAppliedPromotions() []*CalculateResponseAppliedPromotions {
	if x != nil {
		return x.AppliedPromotions
	}
	return nil
}

var File_proto_mindbox_proto protoreflect.FileDescriptor

var file_proto_mindbox_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x22, 0x6b,
	0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x2a, 0x0a, 0x11, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x4b, 0x65, 0x79, 0x22, 0x23, 0x0a, 0x11, 0x50,
	0x75, 0x73, 0x68, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b,
	0x22, 0x36, 0x0a, 0x11, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x42, 0x0a, 0x13, 0x49, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x10,
	0x49, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x70, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x70, 0x6e, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x24, 0x0a, 0x12,
	0x49, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x6f, 0x6b, 0x22, 0x7b, 0x0a, 0x10, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22,
	0x24, 0x0a, 0x12, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x29, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xdc, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x6e,
	0x75, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x69, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x49, 0x0a, 0x12, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x4e, 0x65, 0x61, 0x72, 0x65,
	0x73, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x6e, 0x65,
	0x61, 0x72, 0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3d, 0x0a, 0x11, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x8b,
	0x01, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x5a, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb4, 0x04, 0x0a, 0x11, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x63, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x61, 0x63, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x73, 0x12, 0x37,
	0x0a, 0x18, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x44, 0x0a, 0x1f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b,
	0x69, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a,
	0x14, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x92, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x6f, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x48, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x77, 0x0a, 0x11,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f,
	0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x49, 0x64, 0x22, 0x71, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x2d, 0x0a, 0x0e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f, 0x53, 0x4d, 0x49, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x53, 0x4d, 0x49, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x6f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22,
	0x31, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x26, 0x0a, 0x14, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x22, 0x3a,
	0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x3f, 0x0a, 0x07, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x22, 0xbf, 0x01, 0x0a, 0x16,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x4d, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9b, 0x02, 0x0a,
	0x1a, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x61, 0x63, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4b, 0x69, 0x6e,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x22, 0x98, 0x03, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x6d, 0x69,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25,
	0x0a, 0x0c, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x09, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x04,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x3a, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x13, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x13, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x06,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x38, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x22, 0xe9,
	0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x3a, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x12, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x11, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x13, 0x0a,
	0x11, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f,
	0x69, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x13, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x01, 0x52,
	0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x13, 0x0a, 0x11,
	0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbb, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xd4, 0x04, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x55, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4c, 0x0a, 0x0f, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x65, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x0e, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x3c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x22, 0x8f, 0x02, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x70,
	0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xf1, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69,
	0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x55, 0x0a,
	0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xf2, 0x05, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x61, 0x73,
	0x68, 0x64, 0x65, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x0a, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x48, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6d, 0x69, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x03, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0c, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a,
	0x73, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a,
	0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x73, 0x52, 0x07, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x73, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x56, 0x0a, 0x14, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x69, 0x66, 0x74, 0x63, 0x61, 0x72, 0x64, 0x52, 0x12, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x69, 0x66, 0x74, 0x63, 0x61, 0x72,
	0x64, 0x12, 0x58, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x69, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x61, 0x73, 0x68, 0x64, 0x65, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x73, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x10,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x18, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x15, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x34, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x57, 0x0a, 0x11, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x22, 0x60, 0x0a, 0x1b, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x47, 0x69, 0x66, 0x74, 0x63, 0x61, 0x72,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x00, 0x52, 0x03, 0x63, 0x76, 0x76, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x63, 0x76, 0x76, 0x22, 0x90, 0x01, 0x0a, 0x1c, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xfc, 0x02, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x13,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x0e, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x07, 0x6c,
	0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x58, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x05, 0x0a,
	0x03, 0x5f, 0x69, 0x64, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0xff,
	0x06, 0x0a, 0x15, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x64,
	0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6d, 0x69, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0c, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x4b,
	0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x12, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x0f, 0x62, 0x6f, 0x6e, 0x75, 0x73,
	0x65, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x52, 0x0e, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0c, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x73, 0x12, 0x3e, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x4a, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x41, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xdd, 0x01, 0x0a, 0x1d, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x70, 0x65,
	0x6e, 0x74, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x94, 0x02, 0x0a, 0x22, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xce, 0x01, 0x0a, 0x1f, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x65, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x37, 0x0a, 0x18, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x15, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc1, 0x02, 0x0a, 0x1c, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f,
	0x6e, 0x75, 0x73, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x70, 0x65,
	0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xe3, 0x01, 0x0a,
	0x18, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46,
	0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a, 0x1a, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x6f, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x3e, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x63, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47,
	0x69, 0x66, 0x74, 0x63, 0x61, 0x72, 0x64, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x63, 0x61, 0x72,
	0x64, 0x22, 0x8b, 0x01, 0x0a, 0x19, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x69, 0x66, 0x74, 0x63, 0x61, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x75, 0x73, 0x65, 0x64, 0x22,
	0x6c, 0x0a, 0x1d, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xd5, 0x02,
	0x0a, 0x18, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5c, 0x0a, 0x12, 0x70, 0x6f,
	0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x22, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6f, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x22, 0x49, 0x0a,
	0x18, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d,
	0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x64, 0x22, 0xe4, 0x02, 0x0a, 0x1a, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x64, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x12, 0x5a, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x5f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x11, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a,
	0x20, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x07, 0x0a, 0x03, 0x49,
	0x4f, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x4e, 0x44, 0x52, 0x4f, 0x49, 0x44, 0x10,
	0x01, 0x32, 0x93, 0x02, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x15, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x15, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x1a, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0c,
	0x53, 0x65, 0x6e, 0x64, 0x4f, 0x53, 0x4d, 0x49, 0x43, 0x61, 0x72, 0x64, 0x12, 0x17, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x4f, 0x53, 0x4d,
	0x49, 0x43, 0x61, 0x72, 0x64, 0x1a, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4f, 0x53, 0x4d, 0x49, 0x43, 0x61, 0x72, 0x64,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb3, 0x04, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x46, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0a, 0x49, 0x6e,
	0x69, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0c, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x1d, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x15, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0x1a, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x08, 0x45,
	0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x1a, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x45, 0x64, 0x69, 0x74, 0x55, 0x73, 0x65, 0x72, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0b, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x6d,
	0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x2e, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x09, 0x50, 0x75, 0x73, 0x68,
	0x43, 0x6c, 0x69, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x43, 0x6c,
	0x69, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x90, 0x03,
	0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x1b, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4d, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1c, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e,
	0x0a, 0x13, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x15, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x55, 0x6e, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x19, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x2e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x0c, 0x5a, 0x0a, 0x67, 0x6f, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_mindbox_proto_rawDescOnce sync.Once
	file_proto_mindbox_proto_rawDescData = file_proto_mindbox_proto_rawDesc
)

func file_proto_mindbox_proto_rawDescGZIP() []byte {
	file_proto_mindbox_proto_rawDescOnce.Do(func() {
		file_proto_mindbox_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_mindbox_proto_rawDescData)
	})
	return file_proto_mindbox_proto_rawDescData
}

var file_proto_mindbox_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_mindbox_proto_msgTypes = make([]protoimpl.MessageInfo, 66)
var file_proto_mindbox_proto_goTypes = []interface{}{
	(Platform)(0),                              // 0: mindbox.Platform
	(*PushClickParams)(nil),                    // 1: mindbox.PushClickParams
	(*PushClickResponse)(nil),                  // 2: mindbox.PushClickResponse
	(*IsUserExistParams)(nil),                  // 3: mindbox.IsUserExistParams
	(*IsUserExistResponse)(nil),                // 4: mindbox.IsUserExistResponse
	(*InitDeviceParams)(nil),                   // 5: mindbox.InitDeviceParams
	(*InitDeviceResponse)(nil),                 // 6: mindbox.InitDeviceResponse
	(*InitClientParams)(nil),                   // 7: mindbox.InitClientParams
	(*InitClientResponse)(nil),                 // 8: mindbox.InitClientResponse
	(*ParamsUser)(nil),                         // 9: mindbox.ParamsUser
	(*ResponseUser)(nil),                       // 10: mindbox.ResponseUser
	(*NearestExpiration)(nil),                  // 11: mindbox.NearestExpiration
	(*ParamsOrders)(nil),                       // 12: mindbox.ParamsOrders
	(*ResponseOrders)(nil),                     // 13: mindbox.ResponseOrders
	(*ResponseOrderData)(nil),                  // 14: mindbox.ResponseOrderData
	(*ParamsCode)(nil),                         // 15: mindbox.ParamsCode
	(*ResponseCode)(nil),                       // 16: mindbox.ResponseCode
	(*ParamsCheckCode)(nil),                    // 17: mindbox.ParamsCheckCode
	(*ResponseCheckCode)(nil),                  // 18: mindbox.ResponseCheckCode
	(*ParamsEditUser)(nil),                     // 19: mindbox.ParamsEditUser
	(*ResponseEditUser)(nil),                   // 20: mindbox.ResponseEditUser
	(*ParamsOSMICard)(nil),                     // 21: mindbox.ParamsOSMICard
	(*ResponseOSMICard)(nil),                   // 22: mindbox.ResponseOSMICard
	(*RemoveDeviceParams)(nil),                 // 23: mindbox.RemoveDeviceParams
	(*RemoveDeviceResponse)(nil),               // 24: mindbox.RemoveDeviceResponse
	(*BonusesHistoryRequest)(nil),              // 25: mindbox.BonusesHistoryRequest
	(*Pagination)(nil),                         // 26: mindbox.Pagination
	(*Filters)(nil),                            // 27: mindbox.Filters
	(*BonusesHistoryResponse)(nil),             // 28: mindbox.BonusesHistoryResponse
	(*Error)(nil),                              // 29: mindbox.Error
	(*BonusesHistoryResponseData)(nil),         // 30: mindbox.BonusesHistoryResponseData
	(*CreateOrderRequest)(nil),                 // 31: mindbox.CreateOrderRequest
	(*PositionsCreateData)(nil),                // 32: mindbox.PositionsCreateData
	(*PaymentsCreateData)(nil),                 // 33: mindbox.PaymentsCreateData
	(*CreateOrderResponse)(nil),                // 34: mindbox.CreateOrderResponse
	(*CreateOrderResponseData)(nil),            // 35: mindbox.CreateOrderResponseData
	(*UpdateOrderRequest)(nil),                 // 36: mindbox.UpdateOrderRequest
	(*PositionsUpdateData)(nil),                // 37: mindbox.PositionsUpdateData
	(*UpdateOrderResponse)(nil),                // 38: mindbox.UpdateOrderResponse
	(*GetOrderInfoRequest)(nil),                // 39: mindbox.GetOrderInfoRequest
	(*GetOrderInfoResponse)(nil),               // 40: mindbox.GetOrderInfoResponse
	(*GetOrderInfoResponseData)(nil),           // 41: mindbox.GetOrderInfoResponseData
	(*GetOrderInfoAppliedPromotions)(nil),      // 42: mindbox.GetOrderInfoAppliedPromotions
	(*GetOrderInfoBonusesChanges)(nil),         // 43: mindbox.GetOrderInfoBonusesChanges
	(*GetOrderInfoPayments)(nil),               // 44: mindbox.GetOrderInfoPayments
	(*GetOrderInfoPositions)(nil),              // 45: mindbox.GetOrderInfoPositions
	(*CalculateRequest)(nil),                   // 46: mindbox.CalculateRequest
	(*CalculateBonuses)(nil),                   // 47: mindbox.CalculateBonuses
	(*CalculateCoupons)(nil),                   // 48: mindbox.CalculateCoupons
	(*CalculatePayments)(nil),                  // 49: mindbox.CalculatePayments
	(*CalculatePaymentsByGiftcard)(nil),        // 50: mindbox.CalculatePaymentsByGiftcard
	(*CalculateRequestedPromotions)(nil),       // 51: mindbox.CalculateRequestedPromotions
	(*CalculatePositions)(nil),                 // 52: mindbox.CalculatePositions
	(*CalculateResponse)(nil),                  // 53: mindbox.CalculateResponse
	(*CalculateResponseData)(nil),              // 54: mindbox.CalculateResponseData
	(*CalculateResponseTotalBonuses)(nil),      // 55: mindbox.CalculateResponseTotalBonuses
	(*CalculateResponseAppliedPromotions)(nil), // 56: mindbox.CalculateResponseAppliedPromotions
	(*CalculateResponseBonusesChanges)(nil),    // 57: mindbox.CalculateResponseBonusesChanges
	(*CalculateResponseBonusesInfo)(nil),       // 58: mindbox.CalculateResponseBonusesInfo
	(*CalculateResponseCoupons)(nil),           // 59: mindbox.CalculateResponseCoupons
	(*CalculateResponsePayments)(nil),          // 60: mindbox.CalculateResponsePayments
	(*CalculateResponseGiftcard)(nil),          // 61: mindbox.CalculateResponseGiftcard
	(*CalculateResponsePlaceholders)(nil),      // 62: mindbox.CalculateResponsePlaceholders
	(*CalculateResponseContent)(nil),           // 63: mindbox.CalculateResponseContent
	(*CalculateResponsePossibleDiscounts)(nil), // 64: mindbox.CalculateResponsePossibleDiscounts
	(*CalculateResponseProduct)(nil),           // 65: mindbox.CalculateResponseProduct
	(*CalculateResponsePositions)(nil),         // 66: mindbox.CalculateResponsePositions
}
var file_proto_mindbox_proto_depIdxs = []int32{
	0,  // 0: mindbox.InitClientParams.platform:type_name -> mindbox.Platform
	11, // 1: mindbox.ResponseUser.nearest_expiration:type_name -> mindbox.NearestExpiration
	14, // 2: mindbox.ResponseOrders.result:type_name -> mindbox.ResponseOrderData
	26, // 3: mindbox.BonusesHistoryRequest.pagination:type_name -> mindbox.Pagination
	27, // 4: mindbox.BonusesHistoryRequest.filters:type_name -> mindbox.Filters
	30, // 5: mindbox.BonusesHistoryResponse.data:type_name -> mindbox.BonusesHistoryResponseData
	29, // 6: mindbox.BonusesHistoryResponse.errors:type_name -> mindbox.Error
	32, // 7: mindbox.CreateOrderRequest.positions:type_name -> mindbox.PositionsCreateData
	33, // 8: mindbox.CreateOrderRequest.payments:type_name -> mindbox.PaymentsCreateData
	35, // 9: mindbox.CreateOrderResponse.data:type_name -> mindbox.CreateOrderResponseData
	29, // 10: mindbox.CreateOrderResponse.errors:type_name -> mindbox.Error
	37, // 11: mindbox.UpdateOrderRequest.positions:type_name -> mindbox.PositionsUpdateData
	29, // 12: mindbox.UpdateOrderResponse.errors:type_name -> mindbox.Error
	41, // 13: mindbox.GetOrderInfoResponse.data:type_name -> mindbox.GetOrderInfoResponseData
	29, // 14: mindbox.GetOrderInfoResponse.errors:type_name -> mindbox.Error
	42, // 15: mindbox.GetOrderInfoResponseData.applied_promotions:type_name -> mindbox.GetOrderInfoAppliedPromotions
	43, // 16: mindbox.GetOrderInfoResponseData.bonuses_changes:type_name -> mindbox.GetOrderInfoBonusesChanges
	44, // 17: mindbox.GetOrderInfoResponseData.payments:type_name -> mindbox.GetOrderInfoPayments
	45, // 18: mindbox.GetOrderInfoResponseData.positions:type_name -> mindbox.GetOrderInfoPositions
	42, // 19: mindbox.GetOrderInfoPositions.applied_promotions:type_name -> mindbox.GetOrderInfoAppliedPromotions
	47, // 20: mindbox.CalculateRequest.bonuses:type_name -> mindbox.CalculateBonuses
	48, // 21: mindbox.CalculateRequest.coupons:type_name -> mindbox.CalculateCoupons
	49, // 22: mindbox.CalculateRequest.payments:type_name -> mindbox.CalculatePayments
	50, // 23: mindbox.CalculateRequest.payments_by_giftcard:type_name -> mindbox.CalculatePaymentsByGiftcard
	51, // 24: mindbox.CalculateRequest.requested_promotions:type_name -> mindbox.CalculateRequestedPromotions
	52, // 25: mindbox.CalculateRequest.positions:type_name -> mindbox.CalculatePositions
	51, // 26: mindbox.CalculatePositions.requested_promotions:type_name -> mindbox.CalculateRequestedPromotions
	54, // 27: mindbox.CalculateResponse.data:type_name -> mindbox.CalculateResponseData
	29, // 28: mindbox.CalculateResponse.errors:type_name -> mindbox.Error
	55, // 29: mindbox.CalculateResponseData.total_bonuses:type_name -> mindbox.CalculateResponseTotalBonuses
	56, // 30: mindbox.CalculateResponseData.applied_promotions:type_name -> mindbox.CalculateResponseAppliedPromotions
	57, // 31: mindbox.CalculateResponseData.bonuses_changes:type_name -> mindbox.CalculateResponseBonusesChanges
	58, // 32: mindbox.CalculateResponseData.bonuses_info:type_name -> mindbox.CalculateResponseBonusesInfo
	59, // 33: mindbox.CalculateResponseData.coupons:type_name -> mindbox.CalculateResponseCoupons
	60, // 34: mindbox.CalculateResponseData.payments:type_name -> mindbox.CalculateResponsePayments
	62, // 35: mindbox.CalculateResponseData.placeholders:type_name -> mindbox.CalculateResponsePlaceholders
	66, // 36: mindbox.CalculateResponseData.positions:type_name -> mindbox.CalculateResponsePositions
	61, // 37: mindbox.CalculateResponsePayments.giftcard:type_name -> mindbox.CalculateResponseGiftcard
	63, // 38: mindbox.CalculateResponsePlaceholders.content:type_name -> mindbox.CalculateResponseContent
	64, // 39: mindbox.CalculateResponseContent.possible_discounts:type_name -> mindbox.CalculateResponsePossibleDiscounts
	65, // 40: mindbox.CalculateResponsePossibleDiscounts.products:type_name -> mindbox.CalculateResponseProduct
	56, // 41: mindbox.CalculateResponsePositions.applied_promotions:type_name -> mindbox.CalculateResponseAppliedPromotions
	9,  // 42: mindbox.User.Info:input_type -> mindbox.ParamsUser
	12, // 43: mindbox.User.Orders:input_type -> mindbox.ParamsOrders
	21, // 44: mindbox.User.SendOSMICard:input_type -> mindbox.ParamsOSMICard
	25, // 45: mindbox.User.BonusesHistory:input_type -> mindbox.BonusesHistoryRequest
	5,  // 46: mindbox.Mobile.InitDevice:input_type -> mindbox.InitDeviceParams
	7,  // 47: mindbox.Mobile.InitClient:input_type -> mindbox.InitClientParams
	23, // 48: mindbox.Mobile.RemoveDevice:input_type -> mindbox.RemoveDeviceParams
	15, // 49: mindbox.Mobile.Code:input_type -> mindbox.ParamsCode
	17, // 50: mindbox.Mobile.CheckCode:input_type -> mindbox.ParamsCheckCode
	19, // 51: mindbox.Mobile.EditUser:input_type -> mindbox.ParamsEditUser
	3,  // 52: mindbox.Mobile.IsUserExist:input_type -> mindbox.IsUserExistParams
	1,  // 53: mindbox.Mobile.PushClick:input_type -> mindbox.PushClickParams
	31, // 54: mindbox.Order.CreateOrder:input_type -> mindbox.CreateOrderRequest
	36, // 55: mindbox.Order.UpdateOrder:input_type -> mindbox.UpdateOrderRequest
	39, // 56: mindbox.Order.GetOrderInfo:input_type -> mindbox.GetOrderInfoRequest
	46, // 57: mindbox.Order.CalculateAuthorized:input_type -> mindbox.CalculateRequest
	46, // 58: mindbox.Order.CalculateUnauthorized:input_type -> mindbox.CalculateRequest
	10, // 59: mindbox.User.Info:output_type -> mindbox.ResponseUser
	13, // 60: mindbox.User.Orders:output_type -> mindbox.ResponseOrders
	22, // 61: mindbox.User.SendOSMICard:output_type -> mindbox.ResponseOSMICard
	28, // 62: mindbox.User.BonusesHistory:output_type -> mindbox.BonusesHistoryResponse
	6,  // 63: mindbox.Mobile.InitDevice:output_type -> mindbox.InitDeviceResponse
	8,  // 64: mindbox.Mobile.InitClient:output_type -> mindbox.InitClientResponse
	24, // 65: mindbox.Mobile.RemoveDevice:output_type -> mindbox.RemoveDeviceResponse
	16, // 66: mindbox.Mobile.Code:output_type -> mindbox.ResponseCode
	18, // 67: mindbox.Mobile.CheckCode:output_type -> mindbox.ResponseCheckCode
	20, // 68: mindbox.Mobile.EditUser:output_type -> mindbox.ResponseEditUser
	4,  // 69: mindbox.Mobile.IsUserExist:output_type -> mindbox.IsUserExistResponse
	2,  // 70: mindbox.Mobile.PushClick:output_type -> mindbox.PushClickResponse
	34, // 71: mindbox.Order.CreateOrder:output_type -> mindbox.CreateOrderResponse
	38, // 72: mindbox.Order.UpdateOrder:output_type -> mindbox.UpdateOrderResponse
	40, // 73: mindbox.Order.GetOrderInfo:output_type -> mindbox.GetOrderInfoResponse
	53, // 74: mindbox.Order.CalculateAuthorized:output_type -> mindbox.CalculateResponse
	53, // 75: mindbox.Order.CalculateUnauthorized:output_type -> mindbox.CalculateResponse
	59, // [59:76] is the sub-list for method output_type
	42, // [42:59] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_proto_mindbox_proto_init() }
func file_proto_mindbox_proto_init() {
	if File_proto_mindbox_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_mindbox_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushClickParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushClickResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserExistParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsUserExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitDeviceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitClientParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NearestExpiration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsCheckCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseCheckCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsEditUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseEditUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamsOSMICard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseOSMICard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDeviceParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveDeviceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusesHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusesHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusesHistoryResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionsCreateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentsCreateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOrderResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PositionsUpdateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderInfoResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderInfoAppliedPromotions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderInfoBonusesChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderInfoPayments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderInfoPositions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateBonuses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateCoupons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatePayments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatePaymentsByGiftcard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateRequestedPromotions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatePositions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseTotalBonuses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseAppliedPromotions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseBonusesChanges); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseBonusesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseCoupons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponsePayments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseGiftcard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponsePlaceholders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponsePossibleDiscounts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponseProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_mindbox_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponsePositions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_mindbox_proto_msgTypes[30].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[31].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[32].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[35].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[36].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[44].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[45].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[46].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[47].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[48].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[49].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[50].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[51].OneofWrappers = []interface{}{}
	file_proto_mindbox_proto_msgTypes[62].OneofWrappers = []interface{}{
		(*CalculateResponseContent_Message)(nil),
		(*CalculateResponseContent_PossibleDiscounts)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_mindbox_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   66,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_proto_mindbox_proto_goTypes,
		DependencyIndexes: file_proto_mindbox_proto_depIdxs,
		EnumInfos:         file_proto_mindbox_proto_enumTypes,
		MessageInfos:      file_proto_mindbox_proto_msgTypes,
	}.Build()
	File_proto_mindbox_proto = out.File
	file_proto_mindbox_proto_rawDesc = nil
	file_proto_mindbox_proto_goTypes = nil
	file_proto_mindbox_proto_depIdxs = nil
}
