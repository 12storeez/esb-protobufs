syntax = "proto3";

import "google/protobuf/empty.proto";

option go_package = "go/user";

package user;

service user {
  rpc Create(CreateRequest) returns (CreateResponse) {}
  rpc Update(UpdateRequest) returns (UpdateResponse) {}
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc GetBySiteID(GetBySiteIDRequest) returns (GetResponse) {}
  rpc GetByUsername(GetByUsernameRequest) returns (GetResponse) {}
  rpc GetByToken(GetByTokenRequest) returns (GetResponse) {}
  rpc GetList(GetListRequest) returns (GetListResponse) {}
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
  rpc Merge(MergeRequest) returns (MergeResponse) {}
  rpc GetUserAddresses(GetUserAddressesRequest) returns (GetUserAddressesResponse) {}
  rpc Restrict(RestrictRequest) returns (GetResponse) {}
  rpc DeleteRestriction(DeleteRestrictionRequest) returns (GetResponse) {}
  rpc GetRestrictionList(google.protobuf.Empty) returns (GetRestrictionListResponse) {}
}

message MergeRequest {
  string main_user_id = 1;
  string duplicate_user_id = 2;
  optional string phone = 3;
  optional string email = 4;
  optional string first_name = 5;
  optional string middle_name = 6;
  optional string last_name = 7;
  optional string birthdate = 8;
  optional string gender = 9;
  optional int32 store_code = 10;
  optional string clothing_size = 11;
  optional string shoe_size = 12;
  optional string country_iso_code = 13;
  optional string city = 14;
  optional string region = 15;
  optional bool is_vic = 16;
  optional string merge_source = 17;
}

message MergeResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  MergeResponseData              data = 5;
}

message MergeResponseData {
  string            history_id = 1;
}


// CreateRequest
message CreateRequest {
  string username = 1;
  string password = 2;
  // основные поля
  string phone = 3;
  string email = 4;
  string first_name = 5;
  string middle_name = 6;
  string last_name = 7;
  string birthdate = 8;
  string gender = 9;
  string create_source = 10;
  int64  site_id = 11;
  string onec_id = 12;
  string country_iso_code = 13;
  string city = 14;
  string region = 15;
  // клиентские поля
  int32  store_code = 16;
  int32  rcrm_id = 17;
  string clothing_upper_size = 18;
  string clothing_lower_size = 19;
  string shoe_size = 20;
  bool   is_fnf = 21;
  bool   is_bad = 22;
  bool   is_personal_policy_accepted = 23;
  // поля внутренних пользователей
  string department = 24;
  string position = 25;
  string wms_id = 26;
}


message CreateResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  User              data = 5;
}

// User
message User {
  string id = 1;
  optional string username = 2;
  optional string password = 3;
  // служебные поля
  optional string created_at = 4;
  optional string updated_at = 5;
  optional string deleted_at = 6;
  // основные поля
  optional string phone = 7;
  optional string email = 8;
  optional string first_name = 9;
  optional string middle_name = 10;
  optional string last_name = 11;
  optional string birthdate = 12;
  optional string gender = 13;
  optional string create_source = 14;
  optional int64  site_id = 15;
  optional string onec_id = 16;
  optional string country_iso_code = 17;
  optional string country_name = 18;
  optional string city = 19;
  optional string region = 20;
  // поля внутренних пользователей
  optional string department = 21;
  optional string position = 22;
  optional string wms_id = 23;
  optional int32  rcrm_manager_id = 24; // поле перемещено в TNT-1067, ранее было в клиентских полях
  optional bool   is_fnf_stylist = 25; // добавлено в TNT-1067
  optional bool   is_seller = 26;  // добавлено в TNT-1067;
  // клиентские поля
  optional int32  store_code = 27;
  optional int32  rcrm_id = 28;
  optional int32  mindbox_id = 29; // добавлено в TNT-1067
  optional string clothing_upper_size = 30;
  optional string clothing_lower_size = 31;
  optional string shoe_size = 32;
  optional bool   is_fnf = 33;
  optional bool   is_bad = 34;
  optional bool   is_vbc = 35; // добавлено в TNT-1067
  optional string reason_for_is_bad = 36; // добавлено в TNT-1067
  optional string reason_for_is_vbc = 37; // добавлено в TNT-1067
  optional bool   is_personal_policy_accepted = 38;
  optional string timezone = 39;
  optional string facebook = 40;
  optional string instagram = 41;
  optional string telegram = 42;
  optional string vk = 43;
  optional string whatsapp = 44;
  repeated string tags = 45;
  optional string comment = 46;
  optional string communication_channel = 47;
  optional string communication_time = 48;
  optional string last_communication = 49;
  optional string brands = 50;
  optional string do_not_propose = 51;
  optional string family = 52;
  optional string hobbies = 53;
  optional string important_dates = 54;
  optional string kind_fo_activity = 55;
  optional string preferences = 56;
  optional string keep_in_mind = 57; // добавлено в TNT-1067
  optional string given_gifts = 58; // добавлено в TNT-1067
  Address  main_address = 59;
  optional bool   is_employee = 60;
  repeated UserRestriction user_restrictions = 61;
  optional string fnf_stylist_id = 62;
  optional string seller_id = 63;
}

message UserShort {
  string id = 1;
  string username = 2;
  string created_at = 3;
  string updated_at = 4;
  optional string restricted_at = 5;
  optional string deleted_at = 6;
  optional string phone = 7;
  optional string email = 8;
  optional string first_name = 9;
  optional string middle_name = 10;
  optional string last_name = 11;
  optional string birthdate = 12;
  optional string gender = 13;
  optional string create_source = 14;
  optional int64  site_id = 15;
  optional string onec_id = 16;
  optional string country_iso_code = 17;
  optional string country_name = 18;
  optional string city = 19;
  optional string region = 20;
  optional int32  rcrm_id = 21;
  optional bool is_fnf = 22;
  optional bool is_bad = 23;
  optional bool is_vbc = 24; // добавлено в TNT-1109 данные берём из client.is_vbc
}

message Address {
  int64 id = 1;
  string full_address = 2;
  string full_address_geo_id = 3;
  string country_iso_code = 4;
  string country_name = 5;
  string region = 6;
  string city = 7;
  string city_geo_id = 8;
  string street = 9;
  string house = 10;
  string housing = 11;
  string building = 12;
  string entrance = 13;
  string floor = 14;
  string flat = 15;
  string postal_code = 16;
  string metro = 17;
  string last_ordered_at = 18;
  string created_at = 19;
  string updated_at = 20;
}

message UpdateResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  User              data = 5;
}

// Get
message GetRequest {
  string id = 1;
}

message GetResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
  User              data = 5;
}

// GetBySiteIDRequest
message GetBySiteIDRequest {
  string site_id = 1;
}

// GetUserAddresses
message GetUserAddressesRequest {
  string     user_id = 1;
  Pagination pagination = 2;
}

message GetUserAddressesResponse {
  string             status = 1;
  string             message = 2;
  int64              code = 3;
  repeated Error     errors = 4;
  repeated Address   data = 5;
  Pagination         pagination = 6;
}

// GetByToken
message GetByTokenRequest {
  string access_token = 1;
}

// GetList
message GetListRequest {
  optional    GetListFilters filters = 1;
  Pagination                 pagination = 2;
  optional    string         search = 3;
}

message GetListResponse {
  string             status = 1;
  string             message = 2;
  int64              code = 3;
  repeated Error     errors = 4;
  repeated UserShort data = 5;
  Pagination         pagination = 6;
}

// Delete
message DeleteRequest {
  string id = 1;
  optional string delete_reason = 2;
}

message DeleteResponse {
  string            status = 1;
  string            message = 2;
  int64             code = 3;
  repeated Error    errors = 4;
}

// Error
message Error {
  string target = 1;
  int64  code = 2;
  string message = 3;
}

enum UserType {
  CLIENT = 0;
  EMPLOYEE = 1;
}

// Filters
message GetListFilters {
  optional string   updated_from     = 1;
  optional string   updated_to       = 2;
  optional UserType type             = 3;
  repeated string   user_ids         = 4;
  optional string   created_from     = 5;
  optional string   created_to       = 6;
  optional string   country_iso_code = 7;
  optional string   region           = 8;
  optional string   city             = 9;
  optional bool     is_fnf           = 10;
  optional bool     is_bad           = 11;
  optional bool     is_vbc           = 12;
  optional bool     is_fnf_stylist   = 13;
  optional bool     is_seller        = 14;
}

// Pagination
message Pagination {
  int64          limit = 1;
  int64          offset = 2;
  optional int64 total = 3;
}

// Restrict
message RestrictRequest { // при получении запроса данные пишем в БД в users.user_restriction
  string             user_id = 1;
  int32              restriction_id = 2;
  string             restriction_reason = 3; // обязательное к заполнению
  string             created_by = 4; // uuid пользователя-админа, который заблокировал клиента
}

// DeleteRestriction
message DeleteRestrictionRequest { // при получении запроса в БД в users.user_restriction заполняем deleted_at для соответствующей записи
  string             user_id = 1;
  int32              restriction_id = 2;
  string             updated_by = 3; // uuid пользователя-админа, который разблокировал клиента
}

// GetByUsername
message GetByUsernameRequest {
  string             username = 1;
}

// GetRestrictionListResponse
message GetRestrictionListResponse {
  string             status = 1;
  string             message = 2;
  int64              code = 3;
  repeated Error     errors = 4;
  repeated Restriction data = 5;
}

message Restriction { // данные берём из БД в users.restriction
  int32              id = 1;
  string             title = 2;
  string             slug = 3;
  string             comment = 4;
  bool               is_auth_disabled = 5;
}

message UserRestriction { // данные берём из БД
  int32              id = 1; // из users.user_restriction.restriction_id
  string             title = 2; // из users.restriction.title, для вывода на фронте
  string             slug = 3; // из users.restriction.slug, для маппинга на фронте
  bool               is_auth_disabled = 4; // из users.restriction.is_auth_disabled
  optional string    restriction_reason = 5; // из users.user_restriction.restriction_reason, для вывода на фронте
  string             created_at = 6; // из users.user_restriction.created_at, для вывода на фронте
}

message UpdateRequest {
  string id = 1;
  optional string username = 2;
  // служебные поля
  optional string created_at = 3;
  optional string updated_at = 4;
  // основные поля
  optional string phone = 5;
  optional string email = 6;
  optional string first_name = 7;
  optional string middle_name = 8;
  optional string last_name = 9;
  optional string birthdate = 10;
  optional string gender = 11;
  optional string create_source = 12;
  optional int64  site_id = 13;
  optional string onec_id = 14;
  optional string country_iso_code = 15;
  optional string city = 16;
  optional string region = 17;
  // поля внутренних пользователей
  optional string department = 18;
  optional string position = 19;
  optional string wms_id = 20;
  optional int32  rcrm_manager_id = 21;
  optional bool   is_fnf_stylist = 22;
  optional bool   is_seller = 23;
  // клиентские поля
  optional int32  store_code = 24;
  optional int32  rcrm_id = 25;
  optional int32  mindbox_id = 26;
  optional string clothing_upper_size = 27;
  optional string clothing_lower_size = 28;
  optional string shoe_size = 29;
  optional bool   is_fnf = 30;
  optional bool   is_bad = 31;
  optional bool   is_vbc = 32;
  optional string reason_for_is_bad = 33;
  optional string reason_for_is_vbc = 34;
  optional bool   is_personal_policy_accepted = 35;
  optional string timezone = 36;
  optional string facebook = 37;
  optional string instagram = 38;
  optional string telegram = 39;
  optional string vk = 40;
  optional string whatsapp = 41;
  repeated string tags = 42;
  optional string comment = 43;
  optional string communication_channel = 44;
  optional string communication_time = 45;
  optional string last_communication = 46;
  optional string brands = 47;
  optional string do_not_propose = 48;
  optional string family = 49;
  optional string hobbies = 50;
  optional string important_dates = 51;
  optional string kind_fo_activity = 52;
  optional string preferences = 53;
  optional string keep_in_mind = 54;
  optional string given_gifts = 55;
  optional string fnf_stylist_id = 56;
  optional string seller_id = 57;
  optional string source = 58; //  добавлено в TNT-1177
}

message UserShortInfo { // добавлено в TNT-1067
  string id = 1;
  optional string first_name = 2;
  optional string middle_name = 3;
  optional string last_name = 4;
}