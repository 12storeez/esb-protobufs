// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/transports.proto

package transport

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GEO_TYPE int32

const (
	GEO_TYPE_DADATA  GEO_TYPE = 0
	GEO_TYPE_GEONAME GEO_TYPE = 1
)

var GEO_TYPE_name = map[int32]string{
	0: "DADATA",
	1: "GEONAME",
}

var GEO_TYPE_value = map[string]int32{
	"DADATA":  0,
	"GEONAME": 1,
}

func (x GEO_TYPE) String() string {
	return proto.EnumName(GEO_TYPE_name, int32(x))
}

func (GEO_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{0}
}

type DELIVERY_TYPE int32

const (
	DELIVERY_TYPE_COURIER         DELIVERY_TYPE = 0
	DELIVERY_TYPE_COURIER_FAST    DELIVERY_TYPE = 1
	DELIVERY_TYPE_COURIER_FITTING DELIVERY_TYPE = 2
	DELIVERY_TYPE_PICKUP_SHOP     DELIVERY_TYPE = 3
	DELIVERY_TYPE_PICKUP_BOXBERRY DELIVERY_TYPE = 4
)

var DELIVERY_TYPE_name = map[int32]string{
	0: "COURIER",
	1: "COURIER_FAST",
	2: "COURIER_FITTING",
	3: "PICKUP_SHOP",
	4: "PICKUP_BOXBERRY",
}

var DELIVERY_TYPE_value = map[string]int32{
	"COURIER":         0,
	"COURIER_FAST":    1,
	"COURIER_FITTING": 2,
	"PICKUP_SHOP":     3,
	"PICKUP_BOXBERRY": 4,
}

func (x DELIVERY_TYPE) String() string {
	return proto.EnumName(DELIVERY_TYPE_name, int32(x))
}

func (DELIVERY_TYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{1}
}

type Dadata struct {
	FiasId               string   `protobuf:"bytes,1,opt,name=fias_id,json=fiasId,proto3" json:"fias_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dadata) Reset()         { *m = Dadata{} }
func (m *Dadata) String() string { return proto.CompactTextString(m) }
func (*Dadata) ProtoMessage()    {}
func (*Dadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{0}
}

func (m *Dadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dadata.Unmarshal(m, b)
}
func (m *Dadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dadata.Marshal(b, m, deterministic)
}
func (m *Dadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dadata.Merge(m, src)
}
func (m *Dadata) XXX_Size() int {
	return xxx_messageInfo_Dadata.Size(m)
}
func (m *Dadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Dadata.DiscardUnknown(m)
}

var xxx_messageInfo_Dadata proto.InternalMessageInfo

func (m *Dadata) GetFiasId() string {
	if m != nil {
		return m.FiasId
	}
	return ""
}

type Geoname struct {
	GeonameId            string   `protobuf:"bytes,1,opt,name=geoname_id,json=geonameId,proto3" json:"geoname_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Geoname) Reset()         { *m = Geoname{} }
func (m *Geoname) String() string { return proto.CompactTextString(m) }
func (*Geoname) ProtoMessage()    {}
func (*Geoname) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{1}
}

func (m *Geoname) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Geoname.Unmarshal(m, b)
}
func (m *Geoname) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Geoname.Marshal(b, m, deterministic)
}
func (m *Geoname) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Geoname.Merge(m, src)
}
func (m *Geoname) XXX_Size() int {
	return xxx_messageInfo_Geoname.Size(m)
}
func (m *Geoname) XXX_DiscardUnknown() {
	xxx_messageInfo_Geoname.DiscardUnknown(m)
}

var xxx_messageInfo_Geoname proto.InternalMessageInfo

func (m *Geoname) GetGeonameId() string {
	if m != nil {
		return m.GeonameId
	}
	return ""
}

type ZoneID struct {
	ZoneId               int32    `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZoneID) Reset()         { *m = ZoneID{} }
func (m *ZoneID) String() string { return proto.CompactTextString(m) }
func (*ZoneID) ProtoMessage()    {}
func (*ZoneID) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{2}
}

func (m *ZoneID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneID.Unmarshal(m, b)
}
func (m *ZoneID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneID.Marshal(b, m, deterministic)
}
func (m *ZoneID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneID.Merge(m, src)
}
func (m *ZoneID) XXX_Size() int {
	return xxx_messageInfo_ZoneID.Size(m)
}
func (m *ZoneID) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneID.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneID proto.InternalMessageInfo

func (m *ZoneID) GetZoneId() int32 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

type Zone struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Active               bool     `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Created              string   `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Updated              string   `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Zone) Reset()         { *m = Zone{} }
func (m *Zone) String() string { return proto.CompactTextString(m) }
func (*Zone) ProtoMessage()    {}
func (*Zone) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{3}
}

func (m *Zone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Zone.Unmarshal(m, b)
}
func (m *Zone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Zone.Marshal(b, m, deterministic)
}
func (m *Zone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Zone.Merge(m, src)
}
func (m *Zone) XXX_Size() int {
	return xxx_messageInfo_Zone.Size(m)
}
func (m *Zone) XXX_DiscardUnknown() {
	xxx_messageInfo_Zone.DiscardUnknown(m)
}

var xxx_messageInfo_Zone proto.InternalMessageInfo

func (m *Zone) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Zone) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Zone) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Zone) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *Zone) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

type UpdateParams struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Active               bool     `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateParams) Reset()         { *m = UpdateParams{} }
func (m *UpdateParams) String() string { return proto.CompactTextString(m) }
func (*UpdateParams) ProtoMessage()    {}
func (*UpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{4}
}

func (m *UpdateParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateParams.Unmarshal(m, b)
}
func (m *UpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateParams.Marshal(b, m, deterministic)
}
func (m *UpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateParams.Merge(m, src)
}
func (m *UpdateParams) XXX_Size() int {
	return xxx_messageInfo_UpdateParams.Size(m)
}
func (m *UpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateParams proto.InternalMessageInfo

func (m *UpdateParams) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateParams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateParams) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type CreateParams struct {
	ZoneName             string   `protobuf:"bytes,1,opt,name=zone_name,json=zoneName,proto3" json:"zone_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateParams) Reset()         { *m = CreateParams{} }
func (m *CreateParams) String() string { return proto.CompactTextString(m) }
func (*CreateParams) ProtoMessage()    {}
func (*CreateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{5}
}

func (m *CreateParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateParams.Unmarshal(m, b)
}
func (m *CreateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateParams.Marshal(b, m, deterministic)
}
func (m *CreateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateParams.Merge(m, src)
}
func (m *CreateParams) XXX_Size() int {
	return xxx_messageInfo_CreateParams.Size(m)
}
func (m *CreateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateParams.DiscardUnknown(m)
}

var xxx_messageInfo_CreateParams proto.InternalMessageInfo

func (m *CreateParams) GetZoneName() string {
	if m != nil {
		return m.ZoneName
	}
	return ""
}

type OkResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OkResponse) Reset()         { *m = OkResponse{} }
func (m *OkResponse) String() string { return proto.CompactTextString(m) }
func (*OkResponse) ProtoMessage()    {}
func (*OkResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{6}
}

func (m *OkResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OkResponse.Unmarshal(m, b)
}
func (m *OkResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OkResponse.Marshal(b, m, deterministic)
}
func (m *OkResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OkResponse.Merge(m, src)
}
func (m *OkResponse) XXX_Size() int {
	return xxx_messageInfo_OkResponse.Size(m)
}
func (m *OkResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OkResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OkResponse proto.InternalMessageInfo

func (m *OkResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type GetAllParams struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset               int32    `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllParams) Reset()         { *m = GetAllParams{} }
func (m *GetAllParams) String() string { return proto.CompactTextString(m) }
func (*GetAllParams) ProtoMessage()    {}
func (*GetAllParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{7}
}

func (m *GetAllParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllParams.Unmarshal(m, b)
}
func (m *GetAllParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllParams.Marshal(b, m, deterministic)
}
func (m *GetAllParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllParams.Merge(m, src)
}
func (m *GetAllParams) XXX_Size() int {
	return xxx_messageInfo_GetAllParams.Size(m)
}
func (m *GetAllParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllParams proto.InternalMessageInfo

func (m *GetAllParams) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *GetAllParams) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetAllResponse struct {
	Total                int32    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Zones                []*Zone  `protobuf:"bytes,2,rep,name=zones,proto3" json:"zones,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllResponse) Reset()         { *m = GetAllResponse{} }
func (m *GetAllResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllResponse) ProtoMessage()    {}
func (*GetAllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{8}
}

func (m *GetAllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllResponse.Unmarshal(m, b)
}
func (m *GetAllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllResponse.Marshal(b, m, deterministic)
}
func (m *GetAllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllResponse.Merge(m, src)
}
func (m *GetAllResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllResponse.Size(m)
}
func (m *GetAllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllResponse proto.InternalMessageInfo

func (m *GetAllResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *GetAllResponse) GetZones() []*Zone {
	if m != nil {
		return m.Zones
	}
	return nil
}

type AddManualPriorityParams struct {
	ZoneId               int32    `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	TkId                 int32    `protobuf:"varint,2,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	DeliveryId           int32    `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Value                float32  `protobuf:"fixed32,4,opt,name=value,proto3" json:"value,omitempty"`
	MaxDays              float32  `protobuf:"fixed32,5,opt,name=max_days,json=maxDays,proto3" json:"max_days,omitempty"`
	Tariff               float32  `protobuf:"fixed32,6,opt,name=tariff,proto3" json:"tariff,omitempty"`
	Active               bool     `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddManualPriorityParams) Reset()         { *m = AddManualPriorityParams{} }
func (m *AddManualPriorityParams) String() string { return proto.CompactTextString(m) }
func (*AddManualPriorityParams) ProtoMessage()    {}
func (*AddManualPriorityParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{9}
}

func (m *AddManualPriorityParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddManualPriorityParams.Unmarshal(m, b)
}
func (m *AddManualPriorityParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddManualPriorityParams.Marshal(b, m, deterministic)
}
func (m *AddManualPriorityParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddManualPriorityParams.Merge(m, src)
}
func (m *AddManualPriorityParams) XXX_Size() int {
	return xxx_messageInfo_AddManualPriorityParams.Size(m)
}
func (m *AddManualPriorityParams) XXX_DiscardUnknown() {
	xxx_messageInfo_AddManualPriorityParams.DiscardUnknown(m)
}

var xxx_messageInfo_AddManualPriorityParams proto.InternalMessageInfo

func (m *AddManualPriorityParams) GetZoneId() int32 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

func (m *AddManualPriorityParams) GetTkId() int32 {
	if m != nil {
		return m.TkId
	}
	return 0
}

func (m *AddManualPriorityParams) GetDeliveryId() int32 {
	if m != nil {
		return m.DeliveryId
	}
	return 0
}

func (m *AddManualPriorityParams) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *AddManualPriorityParams) GetMaxDays() float32 {
	if m != nil {
		return m.MaxDays
	}
	return 0
}

func (m *AddManualPriorityParams) GetTariff() float32 {
	if m != nil {
		return m.Tariff
	}
	return 0
}

func (m *AddManualPriorityParams) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type ManualPriorityParams struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ZoneId               int32    `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	TkId                 int32    `protobuf:"varint,3,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	DeliveryId           int32    `protobuf:"varint,4,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	Value                float32  `protobuf:"fixed32,5,opt,name=value,proto3" json:"value,omitempty"`
	MaxDays              float32  `protobuf:"fixed32,6,opt,name=max_days,json=maxDays,proto3" json:"max_days,omitempty"`
	Tariff               float32  `protobuf:"fixed32,7,opt,name=tariff,proto3" json:"tariff,omitempty"`
	Active               bool     `protobuf:"varint,8,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ManualPriorityParams) Reset()         { *m = ManualPriorityParams{} }
func (m *ManualPriorityParams) String() string { return proto.CompactTextString(m) }
func (*ManualPriorityParams) ProtoMessage()    {}
func (*ManualPriorityParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{10}
}

func (m *ManualPriorityParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManualPriorityParams.Unmarshal(m, b)
}
func (m *ManualPriorityParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManualPriorityParams.Marshal(b, m, deterministic)
}
func (m *ManualPriorityParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManualPriorityParams.Merge(m, src)
}
func (m *ManualPriorityParams) XXX_Size() int {
	return xxx_messageInfo_ManualPriorityParams.Size(m)
}
func (m *ManualPriorityParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ManualPriorityParams.DiscardUnknown(m)
}

var xxx_messageInfo_ManualPriorityParams proto.InternalMessageInfo

func (m *ManualPriorityParams) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ManualPriorityParams) GetZoneId() int32 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

func (m *ManualPriorityParams) GetTkId() int32 {
	if m != nil {
		return m.TkId
	}
	return 0
}

func (m *ManualPriorityParams) GetDeliveryId() int32 {
	if m != nil {
		return m.DeliveryId
	}
	return 0
}

func (m *ManualPriorityParams) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *ManualPriorityParams) GetMaxDays() float32 {
	if m != nil {
		return m.MaxDays
	}
	return 0
}

func (m *ManualPriorityParams) GetTariff() float32 {
	if m != nil {
		return m.Tariff
	}
	return 0
}

func (m *ManualPriorityParams) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type ManualPriorityList struct {
	List                 []*ManualPriorityParams `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ManualPriorityList) Reset()         { *m = ManualPriorityList{} }
func (m *ManualPriorityList) String() string { return proto.CompactTextString(m) }
func (*ManualPriorityList) ProtoMessage()    {}
func (*ManualPriorityList) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{11}
}

func (m *ManualPriorityList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ManualPriorityList.Unmarshal(m, b)
}
func (m *ManualPriorityList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ManualPriorityList.Marshal(b, m, deterministic)
}
func (m *ManualPriorityList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ManualPriorityList.Merge(m, src)
}
func (m *ManualPriorityList) XXX_Size() int {
	return xxx_messageInfo_ManualPriorityList.Size(m)
}
func (m *ManualPriorityList) XXX_DiscardUnknown() {
	xxx_messageInfo_ManualPriorityList.DiscardUnknown(m)
}

var xxx_messageInfo_ManualPriorityList proto.InternalMessageInfo

func (m *ManualPriorityList) GetList() []*ManualPriorityParams {
	if m != nil {
		return m.List
	}
	return nil
}

type ZoneDeliveryManualPriorityID struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZoneDeliveryManualPriorityID) Reset()         { *m = ZoneDeliveryManualPriorityID{} }
func (m *ZoneDeliveryManualPriorityID) String() string { return proto.CompactTextString(m) }
func (*ZoneDeliveryManualPriorityID) ProtoMessage()    {}
func (*ZoneDeliveryManualPriorityID) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{12}
}

func (m *ZoneDeliveryManualPriorityID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneDeliveryManualPriorityID.Unmarshal(m, b)
}
func (m *ZoneDeliveryManualPriorityID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneDeliveryManualPriorityID.Marshal(b, m, deterministic)
}
func (m *ZoneDeliveryManualPriorityID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneDeliveryManualPriorityID.Merge(m, src)
}
func (m *ZoneDeliveryManualPriorityID) XXX_Size() int {
	return xxx_messageInfo_ZoneDeliveryManualPriorityID.Size(m)
}
func (m *ZoneDeliveryManualPriorityID) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneDeliveryManualPriorityID.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneDeliveryManualPriorityID proto.InternalMessageInfo

func (m *ZoneDeliveryManualPriorityID) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AddDeliveryMethodParams struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDeliveryMethodParams) Reset()         { *m = AddDeliveryMethodParams{} }
func (m *AddDeliveryMethodParams) String() string { return proto.CompactTextString(m) }
func (*AddDeliveryMethodParams) ProtoMessage()    {}
func (*AddDeliveryMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{13}
}

func (m *AddDeliveryMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDeliveryMethodParams.Unmarshal(m, b)
}
func (m *AddDeliveryMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDeliveryMethodParams.Marshal(b, m, deterministic)
}
func (m *AddDeliveryMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDeliveryMethodParams.Merge(m, src)
}
func (m *AddDeliveryMethodParams) XXX_Size() int {
	return xxx_messageInfo_AddDeliveryMethodParams.Size(m)
}
func (m *AddDeliveryMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDeliveryMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_AddDeliveryMethodParams proto.InternalMessageInfo

func (m *AddDeliveryMethodParams) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type GetDeliveryMethodResponse struct {
	Id                   int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type                 DELIVERY_TYPE `protobuf:"varint,3,opt,name=type,proto3,enum=transport.DELIVERY_TYPE" json:"type,omitempty"`
	Active               bool          `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	Created              string        `protobuf:"bytes,5,opt,name=created,proto3" json:"created,omitempty"`
	Updated              string        `protobuf:"bytes,6,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetDeliveryMethodResponse) Reset()         { *m = GetDeliveryMethodResponse{} }
func (m *GetDeliveryMethodResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeliveryMethodResponse) ProtoMessage()    {}
func (*GetDeliveryMethodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{14}
}

func (m *GetDeliveryMethodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeliveryMethodResponse.Unmarshal(m, b)
}
func (m *GetDeliveryMethodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeliveryMethodResponse.Marshal(b, m, deterministic)
}
func (m *GetDeliveryMethodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeliveryMethodResponse.Merge(m, src)
}
func (m *GetDeliveryMethodResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeliveryMethodResponse.Size(m)
}
func (m *GetDeliveryMethodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeliveryMethodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeliveryMethodResponse proto.InternalMessageInfo

func (m *GetDeliveryMethodResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetDeliveryMethodResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetDeliveryMethodResponse) GetType() DELIVERY_TYPE {
	if m != nil {
		return m.Type
	}
	return DELIVERY_TYPE_COURIER
}

func (m *GetDeliveryMethodResponse) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *GetDeliveryMethodResponse) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *GetDeliveryMethodResponse) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

type UpdateDeliveryMethodParams struct {
	Id                   int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string        `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Type                 DELIVERY_TYPE `protobuf:"varint,3,opt,name=type,proto3,enum=transport.DELIVERY_TYPE" json:"type,omitempty"`
	Active               bool          `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UpdateDeliveryMethodParams) Reset()         { *m = UpdateDeliveryMethodParams{} }
func (m *UpdateDeliveryMethodParams) String() string { return proto.CompactTextString(m) }
func (*UpdateDeliveryMethodParams) ProtoMessage()    {}
func (*UpdateDeliveryMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{15}
}

func (m *UpdateDeliveryMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateDeliveryMethodParams.Unmarshal(m, b)
}
func (m *UpdateDeliveryMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateDeliveryMethodParams.Marshal(b, m, deterministic)
}
func (m *UpdateDeliveryMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateDeliveryMethodParams.Merge(m, src)
}
func (m *UpdateDeliveryMethodParams) XXX_Size() int {
	return xxx_messageInfo_UpdateDeliveryMethodParams.Size(m)
}
func (m *UpdateDeliveryMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateDeliveryMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateDeliveryMethodParams proto.InternalMessageInfo

func (m *UpdateDeliveryMethodParams) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateDeliveryMethodParams) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateDeliveryMethodParams) GetType() DELIVERY_TYPE {
	if m != nil {
		return m.Type
	}
	return DELIVERY_TYPE_COURIER
}

func (m *UpdateDeliveryMethodParams) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type GetPaymentMethodResponse struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsActive             bool     `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	Created              string   `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Updated              string   `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPaymentMethodResponse) Reset()         { *m = GetPaymentMethodResponse{} }
func (m *GetPaymentMethodResponse) String() string { return proto.CompactTextString(m) }
func (*GetPaymentMethodResponse) ProtoMessage()    {}
func (*GetPaymentMethodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{16}
}

func (m *GetPaymentMethodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPaymentMethodResponse.Unmarshal(m, b)
}
func (m *GetPaymentMethodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPaymentMethodResponse.Marshal(b, m, deterministic)
}
func (m *GetPaymentMethodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPaymentMethodResponse.Merge(m, src)
}
func (m *GetPaymentMethodResponse) XXX_Size() int {
	return xxx_messageInfo_GetPaymentMethodResponse.Size(m)
}
func (m *GetPaymentMethodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPaymentMethodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPaymentMethodResponse proto.InternalMessageInfo

func (m *GetPaymentMethodResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetPaymentMethodResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *GetPaymentMethodResponse) GetIsActive() bool {
	if m != nil {
		return m.IsActive
	}
	return false
}

func (m *GetPaymentMethodResponse) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *GetPaymentMethodResponse) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

type ID struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{17}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AddPaymentMethodParams struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPaymentMethodParams) Reset()         { *m = AddPaymentMethodParams{} }
func (m *AddPaymentMethodParams) String() string { return proto.CompactTextString(m) }
func (*AddPaymentMethodParams) ProtoMessage()    {}
func (*AddPaymentMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{18}
}

func (m *AddPaymentMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPaymentMethodParams.Unmarshal(m, b)
}
func (m *AddPaymentMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPaymentMethodParams.Marshal(b, m, deterministic)
}
func (m *AddPaymentMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPaymentMethodParams.Merge(m, src)
}
func (m *AddPaymentMethodParams) XXX_Size() int {
	return xxx_messageInfo_AddPaymentMethodParams.Size(m)
}
func (m *AddPaymentMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPaymentMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_AddPaymentMethodParams proto.InternalMessageInfo

func (m *AddPaymentMethodParams) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type UpdatePaymentMethodParams struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Active               bool     `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePaymentMethodParams) Reset()         { *m = UpdatePaymentMethodParams{} }
func (m *UpdatePaymentMethodParams) String() string { return proto.CompactTextString(m) }
func (*UpdatePaymentMethodParams) ProtoMessage()    {}
func (*UpdatePaymentMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{19}
}

func (m *UpdatePaymentMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePaymentMethodParams.Unmarshal(m, b)
}
func (m *UpdatePaymentMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePaymentMethodParams.Marshal(b, m, deterministic)
}
func (m *UpdatePaymentMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePaymentMethodParams.Merge(m, src)
}
func (m *UpdatePaymentMethodParams) XXX_Size() int {
	return xxx_messageInfo_UpdatePaymentMethodParams.Size(m)
}
func (m *UpdatePaymentMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePaymentMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePaymentMethodParams proto.InternalMessageInfo

func (m *UpdatePaymentMethodParams) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePaymentMethodParams) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdatePaymentMethodParams) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type AddZoneDeliveryMatrixParams struct {
	ZoneId               int32    `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	CutoffTime           string   `protobuf:"bytes,2,opt,name=cutoff_time,json=cutoffTime,proto3" json:"cutoff_time,omitempty"`
	GapDays              int32    `protobuf:"varint,3,opt,name=gap_days,json=gapDays,proto3" json:"gap_days,omitempty"`
	ConsolidationDays    int32    `protobuf:"varint,4,opt,name=consolidation_days,json=consolidationDays,proto3" json:"consolidation_days,omitempty"`
	DeliveryId           int32    `protobuf:"varint,5,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	PaymentId            int32    `protobuf:"varint,6,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	TotalLess            float32  `protobuf:"fixed32,7,opt,name=total_less,json=totalLess,proto3" json:"total_less,omitempty"`
	TotalMore            float32  `protobuf:"fixed32,8,opt,name=total_more,json=totalMore,proto3" json:"total_more,omitempty"`
	Total                float32  `protobuf:"fixed32,9,opt,name=total,proto3" json:"total,omitempty"`
	DeliveryMinDays      int32    `protobuf:"varint,10,opt,name=delivery_min_days,json=deliveryMinDays,proto3" json:"delivery_min_days,omitempty"`
	Active               bool     `protobuf:"varint,11,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddZoneDeliveryMatrixParams) Reset()         { *m = AddZoneDeliveryMatrixParams{} }
func (m *AddZoneDeliveryMatrixParams) String() string { return proto.CompactTextString(m) }
func (*AddZoneDeliveryMatrixParams) ProtoMessage()    {}
func (*AddZoneDeliveryMatrixParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{20}
}

func (m *AddZoneDeliveryMatrixParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddZoneDeliveryMatrixParams.Unmarshal(m, b)
}
func (m *AddZoneDeliveryMatrixParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddZoneDeliveryMatrixParams.Marshal(b, m, deterministic)
}
func (m *AddZoneDeliveryMatrixParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddZoneDeliveryMatrixParams.Merge(m, src)
}
func (m *AddZoneDeliveryMatrixParams) XXX_Size() int {
	return xxx_messageInfo_AddZoneDeliveryMatrixParams.Size(m)
}
func (m *AddZoneDeliveryMatrixParams) XXX_DiscardUnknown() {
	xxx_messageInfo_AddZoneDeliveryMatrixParams.DiscardUnknown(m)
}

var xxx_messageInfo_AddZoneDeliveryMatrixParams proto.InternalMessageInfo

func (m *AddZoneDeliveryMatrixParams) GetZoneId() int32 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetCutoffTime() string {
	if m != nil {
		return m.CutoffTime
	}
	return ""
}

func (m *AddZoneDeliveryMatrixParams) GetGapDays() int32 {
	if m != nil {
		return m.GapDays
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetConsolidationDays() int32 {
	if m != nil {
		return m.ConsolidationDays
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetDeliveryId() int32 {
	if m != nil {
		return m.DeliveryId
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetPaymentId() int32 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetTotalLess() float32 {
	if m != nil {
		return m.TotalLess
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetTotalMore() float32 {
	if m != nil {
		return m.TotalMore
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetDeliveryMinDays() int32 {
	if m != nil {
		return m.DeliveryMinDays
	}
	return 0
}

func (m *AddZoneDeliveryMatrixParams) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type GetDeliveryMatrixResponse struct {
	List                 []*ZoneDeliveryMatrixModel `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetDeliveryMatrixResponse) Reset()         { *m = GetDeliveryMatrixResponse{} }
func (m *GetDeliveryMatrixResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeliveryMatrixResponse) ProtoMessage()    {}
func (*GetDeliveryMatrixResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{21}
}

func (m *GetDeliveryMatrixResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeliveryMatrixResponse.Unmarshal(m, b)
}
func (m *GetDeliveryMatrixResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeliveryMatrixResponse.Marshal(b, m, deterministic)
}
func (m *GetDeliveryMatrixResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeliveryMatrixResponse.Merge(m, src)
}
func (m *GetDeliveryMatrixResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeliveryMatrixResponse.Size(m)
}
func (m *GetDeliveryMatrixResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeliveryMatrixResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeliveryMatrixResponse proto.InternalMessageInfo

func (m *GetDeliveryMatrixResponse) GetList() []*ZoneDeliveryMatrixModel {
	if m != nil {
		return m.List
	}
	return nil
}

type ZoneDeliveryMatrixModel struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ZoneId               int32    `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	CutoffTime           string   `protobuf:"bytes,3,opt,name=cutoff_time,json=cutoffTime,proto3" json:"cutoff_time,omitempty"`
	GapDays              int32    `protobuf:"varint,4,opt,name=gap_days,json=gapDays,proto3" json:"gap_days,omitempty"`
	ConsolidationDays    int32    `protobuf:"varint,5,opt,name=consolidation_days,json=consolidationDays,proto3" json:"consolidation_days,omitempty"`
	DeliveryId           int32    `protobuf:"varint,6,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	PaymentId            int32    `protobuf:"varint,7,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	TotalLess            float32  `protobuf:"fixed32,8,opt,name=total_less,json=totalLess,proto3" json:"total_less,omitempty"`
	TotalMore            float32  `protobuf:"fixed32,9,opt,name=total_more,json=totalMore,proto3" json:"total_more,omitempty"`
	Total                float32  `protobuf:"fixed32,10,opt,name=total,proto3" json:"total,omitempty"`
	DeliveryMinDays      int32    `protobuf:"varint,11,opt,name=delivery_min_days,json=deliveryMinDays,proto3" json:"delivery_min_days,omitempty"`
	Active               bool     `protobuf:"varint,12,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZoneDeliveryMatrixModel) Reset()         { *m = ZoneDeliveryMatrixModel{} }
func (m *ZoneDeliveryMatrixModel) String() string { return proto.CompactTextString(m) }
func (*ZoneDeliveryMatrixModel) ProtoMessage()    {}
func (*ZoneDeliveryMatrixModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{22}
}

func (m *ZoneDeliveryMatrixModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZoneDeliveryMatrixModel.Unmarshal(m, b)
}
func (m *ZoneDeliveryMatrixModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZoneDeliveryMatrixModel.Marshal(b, m, deterministic)
}
func (m *ZoneDeliveryMatrixModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZoneDeliveryMatrixModel.Merge(m, src)
}
func (m *ZoneDeliveryMatrixModel) XXX_Size() int {
	return xxx_messageInfo_ZoneDeliveryMatrixModel.Size(m)
}
func (m *ZoneDeliveryMatrixModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ZoneDeliveryMatrixModel.DiscardUnknown(m)
}

var xxx_messageInfo_ZoneDeliveryMatrixModel proto.InternalMessageInfo

func (m *ZoneDeliveryMatrixModel) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetZoneId() int32 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetCutoffTime() string {
	if m != nil {
		return m.CutoffTime
	}
	return ""
}

func (m *ZoneDeliveryMatrixModel) GetGapDays() int32 {
	if m != nil {
		return m.GapDays
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetConsolidationDays() int32 {
	if m != nil {
		return m.ConsolidationDays
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetDeliveryId() int32 {
	if m != nil {
		return m.DeliveryId
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetPaymentId() int32 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetTotalLess() float32 {
	if m != nil {
		return m.TotalLess
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetTotalMore() float32 {
	if m != nil {
		return m.TotalMore
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetTotal() float32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetDeliveryMinDays() int32 {
	if m != nil {
		return m.DeliveryMinDays
	}
	return 0
}

func (m *ZoneDeliveryMatrixModel) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type ZonePaymentMethodResponse struct {
	List                 []*ZonePaymentMethodModel `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ZonePaymentMethodResponse) Reset()         { *m = ZonePaymentMethodResponse{} }
func (m *ZonePaymentMethodResponse) String() string { return proto.CompactTextString(m) }
func (*ZonePaymentMethodResponse) ProtoMessage()    {}
func (*ZonePaymentMethodResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{23}
}

func (m *ZonePaymentMethodResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZonePaymentMethodResponse.Unmarshal(m, b)
}
func (m *ZonePaymentMethodResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZonePaymentMethodResponse.Marshal(b, m, deterministic)
}
func (m *ZonePaymentMethodResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZonePaymentMethodResponse.Merge(m, src)
}
func (m *ZonePaymentMethodResponse) XXX_Size() int {
	return xxx_messageInfo_ZonePaymentMethodResponse.Size(m)
}
func (m *ZonePaymentMethodResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ZonePaymentMethodResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ZonePaymentMethodResponse proto.InternalMessageInfo

func (m *ZonePaymentMethodResponse) GetList() []*ZonePaymentMethodModel {
	if m != nil {
		return m.List
	}
	return nil
}

type AddZonePaymentMethodParams struct {
	ZoneId               int32    `protobuf:"varint,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	DeliveryId           int32    `protobuf:"varint,2,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	PaymentId            int32    `protobuf:"varint,3,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	TkId                 int32    `protobuf:"varint,4,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	Active               bool     `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddZonePaymentMethodParams) Reset()         { *m = AddZonePaymentMethodParams{} }
func (m *AddZonePaymentMethodParams) String() string { return proto.CompactTextString(m) }
func (*AddZonePaymentMethodParams) ProtoMessage()    {}
func (*AddZonePaymentMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{24}
}

func (m *AddZonePaymentMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddZonePaymentMethodParams.Unmarshal(m, b)
}
func (m *AddZonePaymentMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddZonePaymentMethodParams.Marshal(b, m, deterministic)
}
func (m *AddZonePaymentMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddZonePaymentMethodParams.Merge(m, src)
}
func (m *AddZonePaymentMethodParams) XXX_Size() int {
	return xxx_messageInfo_AddZonePaymentMethodParams.Size(m)
}
func (m *AddZonePaymentMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_AddZonePaymentMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_AddZonePaymentMethodParams proto.InternalMessageInfo

func (m *AddZonePaymentMethodParams) GetZoneId() int32 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

func (m *AddZonePaymentMethodParams) GetDeliveryId() int32 {
	if m != nil {
		return m.DeliveryId
	}
	return 0
}

func (m *AddZonePaymentMethodParams) GetPaymentId() int32 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *AddZonePaymentMethodParams) GetTkId() int32 {
	if m != nil {
		return m.TkId
	}
	return 0
}

func (m *AddZonePaymentMethodParams) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type ZonePaymentMethodModel struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ZoneId               int32    `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	DeliveryId           int32    `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	PaymentId            int32    `protobuf:"varint,4,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	TkId                 int32    `protobuf:"varint,5,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	Active               bool     `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	Created              string   `protobuf:"bytes,7,opt,name=created,proto3" json:"created,omitempty"`
	Updated              string   `protobuf:"bytes,8,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ZonePaymentMethodModel) Reset()         { *m = ZonePaymentMethodModel{} }
func (m *ZonePaymentMethodModel) String() string { return proto.CompactTextString(m) }
func (*ZonePaymentMethodModel) ProtoMessage()    {}
func (*ZonePaymentMethodModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{25}
}

func (m *ZonePaymentMethodModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ZonePaymentMethodModel.Unmarshal(m, b)
}
func (m *ZonePaymentMethodModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ZonePaymentMethodModel.Marshal(b, m, deterministic)
}
func (m *ZonePaymentMethodModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ZonePaymentMethodModel.Merge(m, src)
}
func (m *ZonePaymentMethodModel) XXX_Size() int {
	return xxx_messageInfo_ZonePaymentMethodModel.Size(m)
}
func (m *ZonePaymentMethodModel) XXX_DiscardUnknown() {
	xxx_messageInfo_ZonePaymentMethodModel.DiscardUnknown(m)
}

var xxx_messageInfo_ZonePaymentMethodModel proto.InternalMessageInfo

func (m *ZonePaymentMethodModel) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ZonePaymentMethodModel) GetZoneId() int32 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

func (m *ZonePaymentMethodModel) GetDeliveryId() int32 {
	if m != nil {
		return m.DeliveryId
	}
	return 0
}

func (m *ZonePaymentMethodModel) GetPaymentId() int32 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *ZonePaymentMethodModel) GetTkId() int32 {
	if m != nil {
		return m.TkId
	}
	return 0
}

func (m *ZonePaymentMethodModel) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *ZonePaymentMethodModel) GetCreated() string {
	if m != nil {
		return m.Created
	}
	return ""
}

func (m *ZonePaymentMethodModel) GetUpdated() string {
	if m != nil {
		return m.Updated
	}
	return ""
}

type UpdateZonePaymentMethodParams struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ZoneId               int32    `protobuf:"varint,2,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	DeliveryId           int32    `protobuf:"varint,3,opt,name=delivery_id,json=deliveryId,proto3" json:"delivery_id,omitempty"`
	PaymentId            int32    `protobuf:"varint,4,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	TkId                 int32    `protobuf:"varint,5,opt,name=tk_id,json=tkId,proto3" json:"tk_id,omitempty"`
	Active               bool     `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateZonePaymentMethodParams) Reset()         { *m = UpdateZonePaymentMethodParams{} }
func (m *UpdateZonePaymentMethodParams) String() string { return proto.CompactTextString(m) }
func (*UpdateZonePaymentMethodParams) ProtoMessage()    {}
func (*UpdateZonePaymentMethodParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{26}
}

func (m *UpdateZonePaymentMethodParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateZonePaymentMethodParams.Unmarshal(m, b)
}
func (m *UpdateZonePaymentMethodParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateZonePaymentMethodParams.Marshal(b, m, deterministic)
}
func (m *UpdateZonePaymentMethodParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateZonePaymentMethodParams.Merge(m, src)
}
func (m *UpdateZonePaymentMethodParams) XXX_Size() int {
	return xxx_messageInfo_UpdateZonePaymentMethodParams.Size(m)
}
func (m *UpdateZonePaymentMethodParams) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateZonePaymentMethodParams.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateZonePaymentMethodParams proto.InternalMessageInfo

func (m *UpdateZonePaymentMethodParams) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateZonePaymentMethodParams) GetZoneId() int32 {
	if m != nil {
		return m.ZoneId
	}
	return 0
}

func (m *UpdateZonePaymentMethodParams) GetDeliveryId() int32 {
	if m != nil {
		return m.DeliveryId
	}
	return 0
}

func (m *UpdateZonePaymentMethodParams) GetPaymentId() int32 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *UpdateZonePaymentMethodParams) GetTkId() int32 {
	if m != nil {
		return m.TkId
	}
	return 0
}

func (m *UpdateZonePaymentMethodParams) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type WinnersParams struct {
	GeoId      string   `protobuf:"bytes,1,opt,name=geo_id,json=geoId,proto3" json:"geo_id,omitempty"`
	GeoType    GEO_TYPE `protobuf:"varint,2,opt,name=geo_type,json=geoType,proto3,enum=transport.GEO_TYPE" json:"geo_type,omitempty"`
	OrderPrice int32    `protobuf:"varint,3,opt,name=order_price,json=orderPrice,proto3" json:"order_price,omitempty"`
	// в рублях
	Locale               string   `protobuf:"bytes,4,opt,name=locale,proto3" json:"locale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WinnersParams) Reset()         { *m = WinnersParams{} }
func (m *WinnersParams) String() string { return proto.CompactTextString(m) }
func (*WinnersParams) ProtoMessage()    {}
func (*WinnersParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{27}
}

func (m *WinnersParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WinnersParams.Unmarshal(m, b)
}
func (m *WinnersParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WinnersParams.Marshal(b, m, deterministic)
}
func (m *WinnersParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WinnersParams.Merge(m, src)
}
func (m *WinnersParams) XXX_Size() int {
	return xxx_messageInfo_WinnersParams.Size(m)
}
func (m *WinnersParams) XXX_DiscardUnknown() {
	xxx_messageInfo_WinnersParams.DiscardUnknown(m)
}

var xxx_messageInfo_WinnersParams proto.InternalMessageInfo

func (m *WinnersParams) GetGeoId() string {
	if m != nil {
		return m.GeoId
	}
	return ""
}

func (m *WinnersParams) GetGeoType() GEO_TYPE {
	if m != nil {
		return m.GeoType
	}
	return GEO_TYPE_DADATA
}

func (m *WinnersParams) GetOrderPrice() int32 {
	if m != nil {
		return m.OrderPrice
	}
	return 0
}

func (m *WinnersParams) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

type WinnersResponse struct {
	Result               []*Winner `protobuf:"bytes,1,rep,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *WinnersResponse) Reset()         { *m = WinnersResponse{} }
func (m *WinnersResponse) String() string { return proto.CompactTextString(m) }
func (*WinnersResponse) ProtoMessage()    {}
func (*WinnersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{28}
}

func (m *WinnersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WinnersResponse.Unmarshal(m, b)
}
func (m *WinnersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WinnersResponse.Marshal(b, m, deterministic)
}
func (m *WinnersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WinnersResponse.Merge(m, src)
}
func (m *WinnersResponse) XXX_Size() int {
	return xxx_messageInfo_WinnersResponse.Size(m)
}
func (m *WinnersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WinnersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WinnersResponse proto.InternalMessageInfo

func (m *WinnersResponse) GetResult() []*Winner {
	if m != nil {
		return m.Result
	}
	return nil
}

type Winner struct {
	DeliveryTypeId    DELIVERY_TYPE    `protobuf:"varint,1,opt,name=delivery_type_id,json=deliveryTypeId,proto3,enum=transport.DELIVERY_TYPE" json:"delivery_type_id,omitempty"`
	DeliveryTypeTitle string           `protobuf:"bytes,2,opt,name=delivery_type_title,json=deliveryTypeTitle,proto3" json:"delivery_type_title,omitempty"`
	WinnerCompany     *DeliveryCompany `protobuf:"bytes,3,opt,name=winner_company,json=winnerCompany,proto3" json:"winner_company,omitempty"`
	Payments          []*PaymentType   `protobuf:"bytes,4,rep,name=payments,proto3" json:"payments,omitempty"`
	// 'YYYY-MM-DD'
	DeliveryDate         []*DeliveryTime `protobuf:"bytes,6,rep,name=delivery_date,json=deliveryDate,proto3" json:"delivery_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Winner) Reset()         { *m = Winner{} }
func (m *Winner) String() string { return proto.CompactTextString(m) }
func (*Winner) ProtoMessage()    {}
func (*Winner) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{29}
}

func (m *Winner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Winner.Unmarshal(m, b)
}
func (m *Winner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Winner.Marshal(b, m, deterministic)
}
func (m *Winner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Winner.Merge(m, src)
}
func (m *Winner) XXX_Size() int {
	return xxx_messageInfo_Winner.Size(m)
}
func (m *Winner) XXX_DiscardUnknown() {
	xxx_messageInfo_Winner.DiscardUnknown(m)
}

var xxx_messageInfo_Winner proto.InternalMessageInfo

func (m *Winner) GetDeliveryTypeId() DELIVERY_TYPE {
	if m != nil {
		return m.DeliveryTypeId
	}
	return DELIVERY_TYPE_COURIER
}

func (m *Winner) GetDeliveryTypeTitle() string {
	if m != nil {
		return m.DeliveryTypeTitle
	}
	return ""
}

func (m *Winner) GetWinnerCompany() *DeliveryCompany {
	if m != nil {
		return m.WinnerCompany
	}
	return nil
}

func (m *Winner) GetPayments() []*PaymentType {
	if m != nil {
		return m.Payments
	}
	return nil
}

func (m *Winner) GetDeliveryDate() []*DeliveryTime {
	if m != nil {
		return m.DeliveryDate
	}
	return nil
}

type DeliveryCompany struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliveryCompany) Reset()         { *m = DeliveryCompany{} }
func (m *DeliveryCompany) String() string { return proto.CompactTextString(m) }
func (*DeliveryCompany) ProtoMessage()    {}
func (*DeliveryCompany) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{30}
}

func (m *DeliveryCompany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliveryCompany.Unmarshal(m, b)
}
func (m *DeliveryCompany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliveryCompany.Marshal(b, m, deterministic)
}
func (m *DeliveryCompany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliveryCompany.Merge(m, src)
}
func (m *DeliveryCompany) XXX_Size() int {
	return xxx_messageInfo_DeliveryCompany.Size(m)
}
func (m *DeliveryCompany) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliveryCompany.DiscardUnknown(m)
}

var xxx_messageInfo_DeliveryCompany proto.InternalMessageInfo

func (m *DeliveryCompany) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *DeliveryCompany) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type PaymentType struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	DeliveryPrice        int32    `protobuf:"varint,3,opt,name=delivery_price,json=deliveryPrice,proto3" json:"delivery_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentType) Reset()         { *m = PaymentType{} }
func (m *PaymentType) String() string { return proto.CompactTextString(m) }
func (*PaymentType) ProtoMessage()    {}
func (*PaymentType) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{31}
}

func (m *PaymentType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentType.Unmarshal(m, b)
}
func (m *PaymentType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentType.Marshal(b, m, deterministic)
}
func (m *PaymentType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentType.Merge(m, src)
}
func (m *PaymentType) XXX_Size() int {
	return xxx_messageInfo_PaymentType.Size(m)
}
func (m *PaymentType) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentType.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentType proto.InternalMessageInfo

func (m *PaymentType) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *PaymentType) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *PaymentType) GetDeliveryPrice() int32 {
	if m != nil {
		return m.DeliveryPrice
	}
	return 0
}

type DeliveryTime struct {
	Date                 string      `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Intervals            []*Interval `protobuf:"bytes,2,rep,name=intervals,proto3" json:"intervals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DeliveryTime) Reset()         { *m = DeliveryTime{} }
func (m *DeliveryTime) String() string { return proto.CompactTextString(m) }
func (*DeliveryTime) ProtoMessage()    {}
func (*DeliveryTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{32}
}

func (m *DeliveryTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliveryTime.Unmarshal(m, b)
}
func (m *DeliveryTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliveryTime.Marshal(b, m, deterministic)
}
func (m *DeliveryTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliveryTime.Merge(m, src)
}
func (m *DeliveryTime) XXX_Size() int {
	return xxx_messageInfo_DeliveryTime.Size(m)
}
func (m *DeliveryTime) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliveryTime.DiscardUnknown(m)
}

var xxx_messageInfo_DeliveryTime proto.InternalMessageInfo

func (m *DeliveryTime) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *DeliveryTime) GetIntervals() []*Interval {
	if m != nil {
		return m.Intervals
	}
	return nil
}

type Interval struct {
	// 10:30 for example
	TimeFrom             string   `protobuf:"bytes,1,opt,name=time_from,json=timeFrom,proto3" json:"time_from,omitempty"`
	TimeTo               string   `protobuf:"bytes,2,opt,name=time_to,json=timeTo,proto3" json:"time_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Interval) Reset()         { *m = Interval{} }
func (m *Interval) String() string { return proto.CompactTextString(m) }
func (*Interval) ProtoMessage()    {}
func (*Interval) Descriptor() ([]byte, []int) {
	return fileDescriptor_b677ccef679cb916, []int{33}
}

func (m *Interval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Interval.Unmarshal(m, b)
}
func (m *Interval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Interval.Marshal(b, m, deterministic)
}
func (m *Interval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Interval.Merge(m, src)
}
func (m *Interval) XXX_Size() int {
	return xxx_messageInfo_Interval.Size(m)
}
func (m *Interval) XXX_DiscardUnknown() {
	xxx_messageInfo_Interval.DiscardUnknown(m)
}

var xxx_messageInfo_Interval proto.InternalMessageInfo

func (m *Interval) GetTimeFrom() string {
	if m != nil {
		return m.TimeFrom
	}
	return ""
}

func (m *Interval) GetTimeTo() string {
	if m != nil {
		return m.TimeTo
	}
	return ""
}

func init() {
	proto.RegisterEnum("transport.GEO_TYPE", GEO_TYPE_name, GEO_TYPE_value)
	proto.RegisterEnum("transport.DELIVERY_TYPE", DELIVERY_TYPE_name, DELIVERY_TYPE_value)
	proto.RegisterType((*Dadata)(nil), "transport.Dadata")
	proto.RegisterType((*Geoname)(nil), "transport.Geoname")
	proto.RegisterType((*ZoneID)(nil), "transport.ZoneID")
	proto.RegisterType((*Zone)(nil), "transport.Zone")
	proto.RegisterType((*UpdateParams)(nil), "transport.UpdateParams")
	proto.RegisterType((*CreateParams)(nil), "transport.CreateParams")
	proto.RegisterType((*OkResponse)(nil), "transport.OkResponse")
	proto.RegisterType((*GetAllParams)(nil), "transport.GetAllParams")
	proto.RegisterType((*GetAllResponse)(nil), "transport.GetAllResponse")
	proto.RegisterType((*AddManualPriorityParams)(nil), "transport.AddManualPriorityParams")
	proto.RegisterType((*ManualPriorityParams)(nil), "transport.ManualPriorityParams")
	proto.RegisterType((*ManualPriorityList)(nil), "transport.ManualPriorityList")
	proto.RegisterType((*ZoneDeliveryManualPriorityID)(nil), "transport.ZoneDeliveryManualPriorityID")
	proto.RegisterType((*AddDeliveryMethodParams)(nil), "transport.AddDeliveryMethodParams")
	proto.RegisterType((*GetDeliveryMethodResponse)(nil), "transport.GetDeliveryMethodResponse")
	proto.RegisterType((*UpdateDeliveryMethodParams)(nil), "transport.UpdateDeliveryMethodParams")
	proto.RegisterType((*GetPaymentMethodResponse)(nil), "transport.GetPaymentMethodResponse")
	proto.RegisterType((*ID)(nil), "transport.ID")
	proto.RegisterType((*AddPaymentMethodParams)(nil), "transport.AddPaymentMethodParams")
	proto.RegisterType((*UpdatePaymentMethodParams)(nil), "transport.UpdatePaymentMethodParams")
	proto.RegisterType((*AddZoneDeliveryMatrixParams)(nil), "transport.AddZoneDeliveryMatrixParams")
	proto.RegisterType((*GetDeliveryMatrixResponse)(nil), "transport.GetDeliveryMatrixResponse")
	proto.RegisterType((*ZoneDeliveryMatrixModel)(nil), "transport.ZoneDeliveryMatrixModel")
	proto.RegisterType((*ZonePaymentMethodResponse)(nil), "transport.ZonePaymentMethodResponse")
	proto.RegisterType((*AddZonePaymentMethodParams)(nil), "transport.AddZonePaymentMethodParams")
	proto.RegisterType((*ZonePaymentMethodModel)(nil), "transport.ZonePaymentMethodModel")
	proto.RegisterType((*UpdateZonePaymentMethodParams)(nil), "transport.UpdateZonePaymentMethodParams")
	proto.RegisterType((*WinnersParams)(nil), "transport.WinnersParams")
	proto.RegisterType((*WinnersResponse)(nil), "transport.WinnersResponse")
	proto.RegisterType((*Winner)(nil), "transport.winner")
	proto.RegisterType((*DeliveryCompany)(nil), "transport.deliveryCompany")
	proto.RegisterType((*PaymentType)(nil), "transport.paymentType")
	proto.RegisterType((*DeliveryTime)(nil), "transport.deliveryTime")
	proto.RegisterType((*Interval)(nil), "transport.interval")
}

func init() { proto.RegisterFile("proto/transports.proto", fileDescriptor_b677ccef679cb916) }

var fileDescriptor_b677ccef679cb916 = []byte{
	// 1762 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcf, 0x72, 0xdb, 0x5c,
	0x15, 0xb7, 0x65, 0x5b, 0xb6, 0x8f, 0x9d, 0xc4, 0xb9, 0x49, 0x13, 0xc7, 0x6d, 0x26, 0xad, 0xda,
	0x30, 0xa1, 0x40, 0x0a, 0x29, 0x2d, 0x03, 0xcd, 0x40, 0xed, 0xd8, 0x75, 0x45, 0x9b, 0xc6, 0xa3,
	0x38, 0x40, 0xba, 0xc0, 0x23, 0xac, 0xeb, 0xa0, 0x89, 0x6c, 0x79, 0xa4, 0x9b, 0x50, 0xb3, 0x67,
	0x06, 0x58, 0xc0, 0xb0, 0x81, 0x05, 0x3b, 0xde, 0x80, 0x05, 0x2b, 0x9e, 0x80, 0x17, 0xe0, 0x01,
	0x78, 0x0b, 0x76, 0xcc, 0xfd, 0x23, 0x45, 0xd7, 0x96, 0x9c, 0xb8, 0x7c, 0xf3, 0xcd, 0xb7, 0xf3,
	0xf9, 0x77, 0xef, 0x39, 0xbf, 0x73, 0xee, 0xb9, 0xf7, 0xc8, 0xb0, 0x31, 0xf6, 0x5c, 0xe2, 0x3e,
	0x23, 0x9e, 0x39, 0xf2, 0xc7, 0xae, 0x47, 0xfc, 0x7d, 0xc6, 0x40, 0xc5, 0x90, 0xa3, 0x3d, 0x02,
	0xb5, 0x69, 0x5a, 0x26, 0x31, 0xd1, 0x26, 0xe4, 0x07, 0xb6, 0xe9, 0xf7, 0x6c, 0xab, 0x9a, 0x7e,
	0x98, 0xde, 0x2b, 0x1a, 0x2a, 0x25, 0x75, 0x4b, 0xdb, 0x83, 0x7c, 0x1b, 0xbb, 0x23, 0x73, 0x88,
	0xd1, 0x36, 0xc0, 0x05, 0xff, 0x79, 0xa3, 0x56, 0x14, 0x1c, 0xdd, 0xa2, 0x8b, 0x7d, 0x74, 0x47,
	0x58, 0x6f, 0xd2, 0xc5, 0x7e, 0xed, 0x8e, 0x42, 0xad, 0x9c, 0xa1, 0x52, 0x52, 0xb7, 0xb4, 0x6b,
	0xc8, 0x52, 0x15, 0xb4, 0x0c, 0x4a, 0x28, 0x53, 0x6c, 0x0b, 0x21, 0xc8, 0xd2, 0x45, 0xaa, 0x0a,
	0x5b, 0x93, 0xfd, 0x46, 0x1b, 0xa0, 0x9a, 0x7d, 0x62, 0x5f, 0xe3, 0x6a, 0xe6, 0x61, 0x7a, 0xaf,
	0x60, 0x08, 0x0a, 0x55, 0x21, 0xdf, 0xf7, 0xb0, 0x49, 0xb0, 0x55, 0xcd, 0x32, 0xf5, 0x80, 0xa4,
	0x92, 0xab, 0xb1, 0xc5, 0x24, 0x39, 0x2e, 0x11, 0xa4, 0xf6, 0x63, 0x28, 0x9f, 0xb1, 0x9f, 0x1d,
	0xd3, 0x33, 0x87, 0xfe, 0xff, 0xb3, 0xbf, 0xf6, 0x0d, 0x28, 0x1f, 0xb1, 0x0d, 0xc5, 0x5a, 0xf7,
	0xa1, 0xc8, 0x82, 0x65, 0x0b, 0x70, 0x50, 0x0a, 0x94, 0xf1, 0xc1, 0x1c, 0x62, 0xed, 0x01, 0xc0,
	0xc9, 0xa5, 0x81, 0xfd, 0xb1, 0x3b, 0xf2, 0x59, 0xd8, 0xee, 0x25, 0xd3, 0x29, 0x18, 0x8a, 0x7b,
	0xa9, 0x1d, 0x42, 0xb9, 0x8d, 0x49, 0xdd, 0x71, 0xc4, 0x52, 0xeb, 0x90, 0x73, 0xec, 0xa1, 0x4d,
	0x84, 0x67, 0x9c, 0xa0, 0x8e, 0xb8, 0x83, 0x81, 0x8f, 0x09, 0x73, 0x2f, 0x67, 0x08, 0x4a, 0x3b,
	0x86, 0x65, 0x6e, 0x1d, 0xae, 0xbf, 0x0e, 0x39, 0xe2, 0x12, 0xd3, 0x09, 0xec, 0x19, 0x81, 0x76,
	0x21, 0x47, 0xfd, 0xf1, 0xab, 0xca, 0xc3, 0xcc, 0x5e, 0xe9, 0x60, 0x65, 0x3f, 0xcc, 0xff, 0x3e,
	0x4d, 0x86, 0xc1, 0xa5, 0xda, 0xbf, 0xd2, 0xb0, 0x59, 0xb7, 0xac, 0x63, 0x73, 0x74, 0x65, 0x3a,
	0x1d, 0xcf, 0x76, 0x3d, 0x9b, 0x4c, 0x84, 0x63, 0x49, 0x09, 0x45, 0x6b, 0x90, 0x23, 0x97, 0x94,
	0xcd, 0x5d, 0xcb, 0x92, 0x4b, 0xdd, 0x42, 0x3b, 0x50, 0xb2, 0xb0, 0x63, 0x5f, 0x63, 0x6f, 0x42,
	0x45, 0x19, 0x26, 0x82, 0x80, 0xa5, 0x5b, 0xd4, 0xcf, 0x6b, 0xd3, 0xb9, 0xc2, 0x2c, 0x81, 0x8a,
	0xc1, 0x09, 0xb4, 0x05, 0x85, 0xa1, 0xf9, 0xa9, 0x67, 0x99, 0x13, 0x9f, 0xe5, 0x4f, 0x31, 0xf2,
	0x43, 0xf3, 0x53, 0xd3, 0x9c, 0xf8, 0x14, 0x02, 0x62, 0x7a, 0xf6, 0x60, 0x50, 0x55, 0x99, 0x40,
	0x50, 0x91, 0x1c, 0xe5, 0xa5, 0x1c, 0xfd, 0x3b, 0x0d, 0xeb, 0xb1, 0x81, 0x4c, 0x27, 0x3e, 0x12,
	0x98, 0x12, 0x1f, 0x58, 0x26, 0x39, 0xb0, 0x6c, 0x72, 0x60, 0xb9, 0xa4, 0xc0, 0xd4, 0xa4, 0xc0,
	0xf2, 0x09, 0x81, 0x15, 0xa4, 0xc0, 0x74, 0x40, 0x72, 0x5c, 0xef, 0x6d, 0x9f, 0xa0, 0xe7, 0x90,
	0x75, 0x6c, 0x9f, 0x96, 0x0d, 0x4d, 0xf0, 0x4e, 0x24, 0xc1, 0x71, 0x20, 0x18, 0x4c, 0x59, 0xdb,
	0x87, 0x07, 0x34, 0xfd, 0x4d, 0xe1, 0xbd, 0xac, 0xa9, 0x37, 0xa7, 0xa1, 0xd2, 0x9e, 0xb1, 0xf2,
	0x08, 0xd5, 0x31, 0xf9, 0xa5, 0x6b, 0xdd, 0xd4, 0x2d, 0xb1, 0x89, 0x13, 0x94, 0x3f, 0x27, 0xb4,
	0x7f, 0xa6, 0x61, 0xab, 0x8d, 0x89, 0x6c, 0x11, 0x3d, 0x0b, 0x52, 0x26, 0xc2, 0x35, 0x94, 0xc8,
	0x1a, 0xe8, 0x9b, 0x90, 0x25, 0x93, 0x31, 0x3f, 0x82, 0xcb, 0x07, 0xd5, 0x48, 0x64, 0xcd, 0xd6,
	0x7b, 0xfd, 0x27, 0x2d, 0xe3, 0xbc, 0xd7, 0x3d, 0xef, 0xb4, 0x0c, 0xa6, 0x15, 0x41, 0x2d, 0x9b,
	0xd4, 0x32, 0x72, 0x89, 0x2d, 0x43, 0x95, 0x5b, 0xc6, 0x6f, 0xd3, 0x50, 0xe3, 0x3d, 0x23, 0x36,
	0xe4, 0x2f, 0xd1, 0x7d, 0xed, 0x4f, 0x69, 0xa8, 0xb6, 0x31, 0xe9, 0x98, 0x93, 0x21, 0x1e, 0x91,
	0xcf, 0xc2, 0xf1, 0x3e, 0x14, 0x6d, 0xbf, 0x27, 0xf5, 0xb3, 0x82, 0xed, 0xd7, 0x3f, 0xbf, 0xa3,
	0xae, 0x83, 0x12, 0x53, 0x23, 0xfb, 0xb0, 0x51, 0xb7, 0x2c, 0xc9, 0xd1, 0xb9, 0x25, 0x72, 0x0e,
	0x5b, 0x41, 0x5f, 0x9e, 0x35, 0xb9, 0x5b, 0x64, 0x49, 0x6d, 0xfa, 0xbf, 0x0a, 0xdc, 0xaf, 0x5b,
	0x96, 0x5c, 0xe2, 0xc4, 0xb3, 0x3f, 0xdd, 0xd6, 0xd2, 0x76, 0xa0, 0xd4, 0xbf, 0x22, 0xee, 0x60,
	0xd0, 0x23, 0x76, 0x78, 0x25, 0x00, 0x67, 0x75, 0xed, 0x21, 0x3b, 0xce, 0x17, 0xe6, 0x98, 0x1f,
	0x67, 0xde, 0x1d, 0xf2, 0x17, 0xe6, 0x98, 0x1d, 0xe7, 0x6f, 0x01, 0xea, 0xbb, 0x23, 0xdf, 0x75,
	0x6c, 0xcb, 0x24, 0xb6, 0x3b, 0xe2, 0x4a, 0xbc, 0x4f, 0xac, 0x4a, 0x12, 0xa6, 0x3e, 0xd5, 0x4f,
	0x72, 0x33, 0xfd, 0x64, 0x1b, 0x60, 0xcc, 0x91, 0xa1, 0x72, 0x95, 0xc9, 0x8b, 0x82, 0xc3, 0xc5,
	0xac, 0xc5, 0xf7, 0x1c, 0xec, 0xfb, 0xa2, 0x83, 0x14, 0x19, 0xe7, 0x3d, 0xf6, 0xfd, 0x1b, 0xf1,
	0xd0, 0xf5, 0x78, 0x23, 0x09, 0xc4, 0xc7, 0xae, 0x17, 0xb9, 0x2d, 0x8a, 0xbc, 0x59, 0xf1, 0xdb,
	0xe2, 0x29, 0xac, 0x86, 0x3e, 0x0d, 0x6d, 0x11, 0x01, 0xb0, 0x9d, 0x57, 0x02, 0xc1, 0xb1, 0x3d,
	0x0a, 0xba, 0x97, 0xc0, 0xbe, 0x24, 0x61, 0x7f, 0x2a, 0x1f, 0x7c, 0x06, 0x7b, 0x58, 0xb0, 0x2f,
	0xa5, 0x66, 0xa5, 0x4d, 0xdd, 0x46, 0xb2, 0xd1, 0xb1, 0x6b, 0x61, 0x47, 0xf4, 0xab, 0xdf, 0x64,
	0x60, 0x33, 0x41, 0xe3, 0xee, 0x6d, 0x7d, 0x2a, 0xb9, 0x99, 0xb9, 0xc9, 0xcd, 0xde, 0x25, 0xb9,
	0xb9, 0x3b, 0x26, 0x57, 0xbd, 0x25, 0xb9, 0xf9, 0xf9, 0xc9, 0x2d, 0xcc, 0x4f, 0x6e, 0x31, 0x31,
	0xb9, 0x70, 0x6b, 0x72, 0x4b, 0xb7, 0x25, 0xb7, 0x2c, 0x25, 0xd7, 0x80, 0x2d, 0x9a, 0x86, 0xf8,
	0x6e, 0xf4, 0x42, 0x4a, 0xee, 0xa3, 0xa9, 0xe4, 0x4a, 0x36, 0xd1, 0xdc, 0xfe, 0x2d, 0x0d, 0x35,
	0x71, 0x58, 0xe3, 0x3a, 0xc1, 0xbc, 0xb3, 0x1a, 0xc5, 0x58, 0xb9, 0x05, 0xe3, 0xcc, 0x34, 0xc6,
	0xe1, 0x2d, 0x9f, 0x8d, 0xdc, 0xf2, 0x37, 0x81, 0xe7, 0xa4, 0xc0, 0xff, 0x93, 0x86, 0x8d, 0xf8,
	0x28, 0x16, 0xaa, 0xbf, 0xf9, 0x4f, 0x23, 0xd9, 0xe1, 0x6c, 0xa2, 0xc3, 0xb9, 0x58, 0x87, 0xd5,
	0xa4, 0x6b, 0x2f, 0x9f, 0xd8, 0xd7, 0x0b, 0x72, 0x5f, 0xff, 0x47, 0x1a, 0xb6, 0x79, 0x4b, 0x4e,
	0x4a, 0xc6, 0x57, 0x32, 0x56, 0xed, 0x8f, 0x69, 0x58, 0xfa, 0xa9, 0x3d, 0x1a, 0x61, 0xcf, 0x17,
	0x7e, 0xde, 0x03, 0xf5, 0x02, 0xbb, 0x37, 0x93, 0x4a, 0xee, 0x02, 0xbb, 0xba, 0x85, 0xf6, 0xa1,
	0x40, 0xd9, 0xec, 0x5a, 0x56, 0xd8, 0xb5, 0xbc, 0x16, 0xa9, 0xd2, 0x76, 0xeb, 0x84, 0xdf, 0xc8,
	0xf9, 0x0b, 0xec, 0x76, 0xe9, 0xa5, 0xbc, 0x03, 0x25, 0xd7, 0xb3, 0xb0, 0xd7, 0x1b, 0x7b, 0x76,
	0x1f, 0x07, 0x51, 0x30, 0x56, 0x87, 0x72, 0xa8, 0x47, 0x8e, 0xdb, 0x37, 0x1d, 0x2c, 0x2e, 0x4f,
	0x41, 0x69, 0x87, 0xb0, 0x22, 0x1c, 0x0a, 0x4f, 0xc7, 0xd7, 0x41, 0xf5, 0xb0, 0x7f, 0xe5, 0x04,
	0xe7, 0x63, 0x35, 0xb2, 0xf3, 0xaf, 0x98, 0xae, 0x21, 0x14, 0xb4, 0xbf, 0x2b, 0xa0, 0x72, 0x16,
	0x6a, 0x40, 0x25, 0xc4, 0x91, 0xba, 0x1d, 0x84, 0x34, 0xef, 0x41, 0xb1, 0x1c, 0x58, 0xd0, 0x18,
	0x58, 0xd4, 0x6b, 0xf2, 0x1a, 0xd1, 0x9b, 0x74, 0x35, 0xaa, 0xdc, 0x65, 0xb7, 0x6a, 0x1d, 0x96,
	0xf9, 0xee, 0xbd, 0xbe, 0x3b, 0x1c, 0x9b, 0xa3, 0x09, 0x0b, 0xbc, 0x74, 0x50, 0x8b, 0xec, 0x18,
	0x58, 0x1d, 0x71, 0x0d, 0x63, 0x89, 0x5b, 0x08, 0x12, 0x1d, 0x40, 0x41, 0xe4, 0x92, 0x76, 0x52,
	0x1a, 0xee, 0x46, 0xc4, 0x58, 0x88, 0xe8, 0x8e, 0x46, 0xa8, 0x87, 0x0e, 0x61, 0x29, 0x74, 0x93,
	0xd6, 0x60, 0x55, 0x65, 0x86, 0x9b, 0x31, 0xbb, 0xd2, 0x6e, 0x6d, 0x94, 0x03, 0xaa, 0x69, 0x12,
	0xac, 0xbd, 0x82, 0x95, 0x29, 0x9f, 0xe8, 0x60, 0xd7, 0x77, 0xad, 0xe0, 0xd5, 0xc1, 0x7e, 0xc7,
	0xbf, 0x23, 0xb4, 0x9f, 0x43, 0x29, 0xe2, 0xd3, 0xdd, 0x0d, 0xd1, 0x2e, 0x84, 0x60, 0x4b, 0x35,
	0x12, 0x46, 0xc2, 0xca, 0x44, 0x3b, 0x83, 0x72, 0xd4, 0x75, 0xba, 0x01, 0x8b, 0x50, 0x6c, 0x40,
	0x7f, 0xa3, 0xef, 0x40, 0xd1, 0x1e, 0x11, 0xec, 0x5d, 0x9b, 0x4e, 0x30, 0xad, 0x45, 0x8b, 0x33,
	0x90, 0x19, 0x37, 0x5a, 0xda, 0x6b, 0x28, 0x04, 0x04, 0x7d, 0xe4, 0xd1, 0x5b, 0xad, 0x37, 0xf0,
	0xdc, 0x61, 0x30, 0x89, 0x52, 0xc6, 0x1b, 0xcf, 0x1d, 0xd2, 0x63, 0xca, 0x84, 0xc4, 0x15, 0xee,
	0xab, 0x94, 0xec, 0xba, 0x4f, 0x1f, 0x43, 0x21, 0xa8, 0x7a, 0x04, 0xa0, 0x36, 0xeb, 0xcd, 0x7a,
	0xb7, 0x5e, 0x49, 0xa1, 0x12, 0xe4, 0xdb, 0xad, 0x93, 0x0f, 0xf5, 0xe3, 0x56, 0x25, 0xfd, 0xd4,
	0x86, 0x25, 0xa9, 0xc0, 0xa8, 0xf4, 0xe8, 0xe4, 0xcc, 0xd0, 0x5b, 0x46, 0x25, 0x85, 0x2a, 0x50,
	0x16, 0x44, 0xef, 0x4d, 0xfd, 0xb4, 0x5b, 0x49, 0xa3, 0x35, 0x58, 0x09, 0x39, 0x7a, 0xb7, 0xab,
	0x7f, 0x68, 0x57, 0x14, 0xb4, 0x02, 0xa5, 0x8e, 0x7e, 0xf4, 0xee, 0xac, 0xd3, 0x3b, 0x7d, 0x7b,
	0xd2, 0xa9, 0x64, 0xa8, 0x96, 0x60, 0x34, 0x4e, 0x7e, 0xd6, 0x68, 0x19, 0xc6, 0x79, 0x25, 0x7b,
	0xf0, 0xe7, 0x0c, 0xe4, 0x68, 0xef, 0xf1, 0xd1, 0x0b, 0x58, 0x6a, 0x63, 0xd2, 0x98, 0xf0, 0x4f,
	0x14, 0x7a, 0x13, 0x45, 0xcf, 0x0b, 0x67, 0xd6, 0xa6, 0xa7, 0x59, 0x2d, 0x85, 0xbe, 0xc7, 0xe6,
	0xe2, 0xc6, 0x44, 0x7c, 0xb6, 0xd0, 0x9b, 0x08, 0x45, 0x4f, 0x38, 0xe7, 0xc6, 0x19, 0x3e, 0x87,
	0x12, 0x33, 0x14, 0x5f, 0x31, 0x56, 0xa7, 0x34, 0xf4, 0x66, 0x9c, 0xd1, 0x4b, 0x50, 0xf9, 0xe7,
	0x00, 0x14, 0xad, 0xd2, 0xe8, 0x17, 0x82, 0xda, 0xec, 0x42, 0x5a, 0x0a, 0xfd, 0x10, 0x54, 0x3e,
	0xbd, 0x4b, 0x76, 0xd1, 0xcf, 0x01, 0xb5, 0xad, 0x19, 0x41, 0xd0, 0x49, 0xb4, 0x14, 0xfa, 0x01,
	0xa8, 0xbc, 0x4f, 0x4b, 0xf6, 0xd1, 0xaf, 0x1c, 0xb5, 0x7b, 0x11, 0xc1, 0xcd, 0x57, 0x08, 0x2d,
	0x85, 0xbe, 0x0b, 0x6a, 0x13, 0x3b, 0x98, 0xe0, 0xb8, 0x18, 0x93, 0xac, 0x0e, 0x7e, 0xa7, 0x00,
	0xa2, 0x3a, 0xf2, 0xa4, 0x88, 0x1a, 0x90, 0xa9, 0x5b, 0x16, 0x8a, 0x3e, 0xe4, 0x12, 0x3e, 0x23,
	0x24, 0x3b, 0xf4, 0x7d, 0xc8, 0xb4, 0x31, 0x89, 0xf3, 0x66, 0x3b, 0x71, 0x98, 0xa5, 0x93, 0xaf,
	0x96, 0x42, 0x8d, 0x10, 0x87, 0xdb, 0xe6, 0xde, 0xe4, 0xed, 0xbf, 0x1d, 0xe2, 0xb1, 0x14, 0x51,
	0x99, 0x87, 0xc5, 0x1f, 0x14, 0x58, 0x96, 0xe7, 0xc2, 0x04, 0x1c, 0xe2, 0x86, 0xc7, 0x64, 0x47,
	0x0e, 0x39, 0x0e, 0x53, 0x5e, 0x3c, 0x91, 0xeb, 0x20, 0x7e, 0xa0, 0xd6, 0x52, 0xe8, 0x6d, 0x08,
	0xc5, 0xee, 0x4c, 0x49, 0x2c, 0xe6, 0xc7, 0xe2, 0x80, 0xfc, 0x5e, 0x81, 0x25, 0xe9, 0xb5, 0x80,
	0xea, 0x1c, 0x8f, 0x47, 0x32, 0x1e, 0x31, 0x2f, 0x8a, 0x64, 0x37, 0x5e, 0xc5, 0xc2, 0xf1, 0x58,
	0x86, 0x23, 0xf6, 0x21, 0xaa, 0xa5, 0x50, 0x3b, 0x44, 0xe3, 0x49, 0xcc, 0x01, 0x59, 0xc0, 0x8b,
	0xc5, 0xc1, 0xf8, 0x8b, 0x38, 0x29, 0xf2, 0xa8, 0x82, 0xde, 0x70, 0x44, 0xbe, 0x26, 0x23, 0x92,
	0x34, 0xa1, 0x26, 0x3b, 0xf4, 0x3a, 0xf1, 0xb4, 0x24, 0x55, 0x8a, 0x34, 0x81, 0x69, 0x29, 0xd4,
	0x0a, 0xb1, 0xb9, 0xc3, 0xfc, 0xf5, 0x45, 0x22, 0xf3, 0x57, 0x05, 0x56, 0x67, 0x1e, 0x96, 0xa8,
	0xc5, 0x81, 0xd9, 0x9d, 0x05, 0x66, 0xa1, 0x44, 0xdd, 0x0d, 0x97, 0xc4, 0xe1, 0x45, 0x4b, 0xa1,
	0x77, 0x21, 0x2e, 0x7b, 0x33, 0x35, 0xb3, 0xb0, 0x3b, 0x8b, 0xa3, 0x73, 0x0a, 0x15, 0xf1, 0x64,
	0xe4, 0xef, 0x17, 0x1b, 0xfb, 0xe8, 0x47, 0x90, 0x17, 0x3c, 0x14, 0x7d, 0xee, 0x49, 0x6f, 0xdd,
	0x5a, 0x6d, 0x56, 0x12, 0x2c, 0xdb, 0x58, 0xfe, 0x58, 0xbe, 0x88, 0xfc, 0x0b, 0xf0, 0x0b, 0x95,
	0xfd, 0x0b, 0xf0, 0xfc, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x41, 0x94, 0x31, 0x1a, 0x1f, 0x18,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ZonesClient is the client API for Zones service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZonesClient interface {
	GetByDadataID(ctx context.Context, in *Dadata, opts ...grpc.CallOption) (*Zone, error)
	GetByGeonameID(ctx context.Context, in *Geoname, opts ...grpc.CallOption) (*Zone, error)
	GetByZoneID(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*Zone, error)
	Create(ctx context.Context, in *CreateParams, opts ...grpc.CallOption) (*ZoneID, error)
	GetAll(ctx context.Context, in *GetAllParams, opts ...grpc.CallOption) (*GetAllResponse, error)
	Update(ctx context.Context, in *UpdateParams, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*OkResponse, error)
}

type zonesClient struct {
	cc *grpc.ClientConn
}

func NewZonesClient(cc *grpc.ClientConn) ZonesClient {
	return &zonesClient{cc}
}

func (c *zonesClient) GetByDadataID(ctx context.Context, in *Dadata, opts ...grpc.CallOption) (*Zone, error) {
	out := new(Zone)
	err := c.cc.Invoke(ctx, "/transport.Zones/GetByDadataID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) GetByGeonameID(ctx context.Context, in *Geoname, opts ...grpc.CallOption) (*Zone, error) {
	out := new(Zone)
	err := c.cc.Invoke(ctx, "/transport.Zones/GetByGeonameID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) GetByZoneID(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*Zone, error) {
	out := new(Zone)
	err := c.cc.Invoke(ctx, "/transport.Zones/GetByZoneID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) Create(ctx context.Context, in *CreateParams, opts ...grpc.CallOption) (*ZoneID, error) {
	out := new(ZoneID)
	err := c.cc.Invoke(ctx, "/transport.Zones/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) GetAll(ctx context.Context, in *GetAllParams, opts ...grpc.CallOption) (*GetAllResponse, error) {
	out := new(GetAllResponse)
	err := c.cc.Invoke(ctx, "/transport.Zones/GetAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) Update(ctx context.Context, in *UpdateParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.Zones/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonesClient) Delete(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.Zones/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZonesServer is the server API for Zones service.
type ZonesServer interface {
	GetByDadataID(context.Context, *Dadata) (*Zone, error)
	GetByGeonameID(context.Context, *Geoname) (*Zone, error)
	GetByZoneID(context.Context, *ZoneID) (*Zone, error)
	Create(context.Context, *CreateParams) (*ZoneID, error)
	GetAll(context.Context, *GetAllParams) (*GetAllResponse, error)
	Update(context.Context, *UpdateParams) (*OkResponse, error)
	Delete(context.Context, *ZoneID) (*OkResponse, error)
}

// UnimplementedZonesServer can be embedded to have forward compatible implementations.
type UnimplementedZonesServer struct {
}

func (*UnimplementedZonesServer) GetByDadataID(ctx context.Context, req *Dadata) (*Zone, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByDadataID not implemented")
}
func (*UnimplementedZonesServer) GetByGeonameID(ctx context.Context, req *Geoname) (*Zone, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByGeonameID not implemented")
}
func (*UnimplementedZonesServer) GetByZoneID(ctx context.Context, req *ZoneID) (*Zone, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByZoneID not implemented")
}
func (*UnimplementedZonesServer) Create(ctx context.Context, req *CreateParams) (*ZoneID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedZonesServer) GetAll(ctx context.Context, req *GetAllParams) (*GetAllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAll not implemented")
}
func (*UnimplementedZonesServer) Update(ctx context.Context, req *UpdateParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedZonesServer) Delete(ctx context.Context, req *ZoneID) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterZonesServer(s *grpc.Server, srv ZonesServer) {
	s.RegisterService(&_Zones_serviceDesc, srv)
}

func _Zones_GetByDadataID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Dadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).GetByDadataID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/GetByDadataID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).GetByDadataID(ctx, req.(*Dadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_GetByGeonameID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Geoname)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).GetByGeonameID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/GetByGeonameID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).GetByGeonameID(ctx, req.(*Geoname))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_GetByZoneID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).GetByZoneID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/GetByZoneID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).GetByZoneID(ctx, req.(*ZoneID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).Create(ctx, req.(*CreateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_GetAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAllParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).GetAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/GetAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).GetAll(ctx, req.(*GetAllParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).Update(ctx, req.(*UpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Zones_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Zones/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonesServer).Delete(ctx, req.(*ZoneID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Zones_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.Zones",
	HandlerType: (*ZonesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetByDadataID",
			Handler:    _Zones_GetByDadataID_Handler,
		},
		{
			MethodName: "GetByGeonameID",
			Handler:    _Zones_GetByGeonameID_Handler,
		},
		{
			MethodName: "GetByZoneID",
			Handler:    _Zones_GetByZoneID_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _Zones_Create_Handler,
		},
		{
			MethodName: "GetAll",
			Handler:    _Zones_GetAll_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Zones_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Zones_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// ZoneManualPriorityClient is the client API for ZoneManualPriority service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZoneManualPriorityClient interface {
	Add(ctx context.Context, in *AddManualPriorityParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*ManualPriorityList, error)
	Update(ctx context.Context, in *ManualPriorityParams, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error)
}

type zoneManualPriorityClient struct {
	cc *grpc.ClientConn
}

func NewZoneManualPriorityClient(cc *grpc.ClientConn) ZoneManualPriorityClient {
	return &zoneManualPriorityClient{cc}
}

func (c *zoneManualPriorityClient) Add(ctx context.Context, in *AddManualPriorityParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneManualPriority/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneManualPriorityClient) Get(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*ManualPriorityList, error) {
	out := new(ManualPriorityList)
	err := c.cc.Invoke(ctx, "/transport.ZoneManualPriority/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneManualPriorityClient) Update(ctx context.Context, in *ManualPriorityParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneManualPriority/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneManualPriorityClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneManualPriority/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZoneManualPriorityServer is the server API for ZoneManualPriority service.
type ZoneManualPriorityServer interface {
	Add(context.Context, *AddManualPriorityParams) (*OkResponse, error)
	Get(context.Context, *ZoneID) (*ManualPriorityList, error)
	Update(context.Context, *ManualPriorityParams) (*OkResponse, error)
	Delete(context.Context, *ID) (*OkResponse, error)
}

// UnimplementedZoneManualPriorityServer can be embedded to have forward compatible implementations.
type UnimplementedZoneManualPriorityServer struct {
}

func (*UnimplementedZoneManualPriorityServer) Add(ctx context.Context, req *AddManualPriorityParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedZoneManualPriorityServer) Get(ctx context.Context, req *ZoneID) (*ManualPriorityList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedZoneManualPriorityServer) Update(ctx context.Context, req *ManualPriorityParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedZoneManualPriorityServer) Delete(ctx context.Context, req *ID) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterZoneManualPriorityServer(s *grpc.Server, srv ZoneManualPriorityServer) {
	s.RegisterService(&_ZoneManualPriority_serviceDesc, srv)
}

func _ZoneManualPriority_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddManualPriorityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManualPriorityServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneManualPriority/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManualPriorityServer).Add(ctx, req.(*AddManualPriorityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneManualPriority_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManualPriorityServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneManualPriority/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManualPriorityServer).Get(ctx, req.(*ZoneID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneManualPriority_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ManualPriorityParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManualPriorityServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneManualPriority/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManualPriorityServer).Update(ctx, req.(*ManualPriorityParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneManualPriority_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneManualPriorityServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneManualPriority/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneManualPriorityServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZoneManualPriority_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.ZoneManualPriority",
	HandlerType: (*ZoneManualPriorityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ZoneManualPriority_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ZoneManualPriority_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ZoneManualPriority_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ZoneManualPriority_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// DeliveryMethodClient is the client API for DeliveryMethod service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeliveryMethodClient interface {
	Add(ctx context.Context, in *AddDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetDeliveryMethodResponse, error)
	Update(ctx context.Context, in *UpdateDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error)
}

type deliveryMethodClient struct {
	cc *grpc.ClientConn
}

func NewDeliveryMethodClient(cc *grpc.ClientConn) DeliveryMethodClient {
	return &deliveryMethodClient{cc}
}

func (c *deliveryMethodClient) Add(ctx context.Context, in *AddDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.DeliveryMethod/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryMethodClient) Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetDeliveryMethodResponse, error) {
	out := new(GetDeliveryMethodResponse)
	err := c.cc.Invoke(ctx, "/transport.DeliveryMethod/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryMethodClient) Update(ctx context.Context, in *UpdateDeliveryMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.DeliveryMethod/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deliveryMethodClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.DeliveryMethod/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeliveryMethodServer is the server API for DeliveryMethod service.
type DeliveryMethodServer interface {
	Add(context.Context, *AddDeliveryMethodParams) (*OkResponse, error)
	Get(context.Context, *ID) (*GetDeliveryMethodResponse, error)
	Update(context.Context, *UpdateDeliveryMethodParams) (*OkResponse, error)
	Delete(context.Context, *ID) (*OkResponse, error)
}

// UnimplementedDeliveryMethodServer can be embedded to have forward compatible implementations.
type UnimplementedDeliveryMethodServer struct {
}

func (*UnimplementedDeliveryMethodServer) Add(ctx context.Context, req *AddDeliveryMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedDeliveryMethodServer) Get(ctx context.Context, req *ID) (*GetDeliveryMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedDeliveryMethodServer) Update(ctx context.Context, req *UpdateDeliveryMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedDeliveryMethodServer) Delete(ctx context.Context, req *ID) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterDeliveryMethodServer(s *grpc.Server, srv DeliveryMethodServer) {
	s.RegisterService(&_DeliveryMethod_serviceDesc, srv)
}

func _DeliveryMethod_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryMethodServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.DeliveryMethod/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryMethodServer).Add(ctx, req.(*AddDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryMethod_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryMethodServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.DeliveryMethod/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryMethodServer).Get(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryMethod_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateDeliveryMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryMethodServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.DeliveryMethod/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryMethodServer).Update(ctx, req.(*UpdateDeliveryMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _DeliveryMethod_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeliveryMethodServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.DeliveryMethod/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeliveryMethodServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _DeliveryMethod_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.DeliveryMethod",
	HandlerType: (*DeliveryMethodServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _DeliveryMethod_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _DeliveryMethod_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _DeliveryMethod_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _DeliveryMethod_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// PaymentMethodClient is the client API for PaymentMethod service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentMethodClient interface {
	Add(ctx context.Context, in *AddPaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetPaymentMethodResponse, error)
	Update(ctx context.Context, in *UpdatePaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error)
}

type paymentMethodClient struct {
	cc *grpc.ClientConn
}

func NewPaymentMethodClient(cc *grpc.ClientConn) PaymentMethodClient {
	return &paymentMethodClient{cc}
}

func (c *paymentMethodClient) Add(ctx context.Context, in *AddPaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.PaymentMethod/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodClient) Get(ctx context.Context, in *ID, opts ...grpc.CallOption) (*GetPaymentMethodResponse, error) {
	out := new(GetPaymentMethodResponse)
	err := c.cc.Invoke(ctx, "/transport.PaymentMethod/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodClient) Update(ctx context.Context, in *UpdatePaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.PaymentMethod/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentMethodClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.PaymentMethod/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentMethodServer is the server API for PaymentMethod service.
type PaymentMethodServer interface {
	Add(context.Context, *AddPaymentMethodParams) (*OkResponse, error)
	Get(context.Context, *ID) (*GetPaymentMethodResponse, error)
	Update(context.Context, *UpdatePaymentMethodParams) (*OkResponse, error)
	Delete(context.Context, *ID) (*OkResponse, error)
}

// UnimplementedPaymentMethodServer can be embedded to have forward compatible implementations.
type UnimplementedPaymentMethodServer struct {
}

func (*UnimplementedPaymentMethodServer) Add(ctx context.Context, req *AddPaymentMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedPaymentMethodServer) Get(ctx context.Context, req *ID) (*GetPaymentMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedPaymentMethodServer) Update(ctx context.Context, req *UpdatePaymentMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedPaymentMethodServer) Delete(ctx context.Context, req *ID) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterPaymentMethodServer(s *grpc.Server, srv PaymentMethodServer) {
	s.RegisterService(&_PaymentMethod_serviceDesc, srv)
}

func _PaymentMethod_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPaymentMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.PaymentMethod/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodServer).Add(ctx, req.(*AddPaymentMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMethod_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.PaymentMethod/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodServer).Get(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMethod_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePaymentMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.PaymentMethod/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodServer).Update(ctx, req.(*UpdatePaymentMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentMethod_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentMethodServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.PaymentMethod/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentMethodServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentMethod_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.PaymentMethod",
	HandlerType: (*PaymentMethodServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _PaymentMethod_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _PaymentMethod_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _PaymentMethod_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _PaymentMethod_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// ZoneDeliveryMatrixClient is the client API for ZoneDeliveryMatrix service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZoneDeliveryMatrixClient interface {
	Add(ctx context.Context, in *AddZoneDeliveryMatrixParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*GetDeliveryMatrixResponse, error)
	Update(ctx context.Context, in *ZoneDeliveryMatrixModel, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error)
}

type zoneDeliveryMatrixClient struct {
	cc *grpc.ClientConn
}

func NewZoneDeliveryMatrixClient(cc *grpc.ClientConn) ZoneDeliveryMatrixClient {
	return &zoneDeliveryMatrixClient{cc}
}

func (c *zoneDeliveryMatrixClient) Add(ctx context.Context, in *AddZoneDeliveryMatrixParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneDeliveryMatrix/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneDeliveryMatrixClient) Get(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*GetDeliveryMatrixResponse, error) {
	out := new(GetDeliveryMatrixResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneDeliveryMatrix/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneDeliveryMatrixClient) Update(ctx context.Context, in *ZoneDeliveryMatrixModel, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneDeliveryMatrix/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zoneDeliveryMatrixClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZoneDeliveryMatrix/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZoneDeliveryMatrixServer is the server API for ZoneDeliveryMatrix service.
type ZoneDeliveryMatrixServer interface {
	Add(context.Context, *AddZoneDeliveryMatrixParams) (*OkResponse, error)
	Get(context.Context, *ZoneID) (*GetDeliveryMatrixResponse, error)
	Update(context.Context, *ZoneDeliveryMatrixModel) (*OkResponse, error)
	Delete(context.Context, *ID) (*OkResponse, error)
}

// UnimplementedZoneDeliveryMatrixServer can be embedded to have forward compatible implementations.
type UnimplementedZoneDeliveryMatrixServer struct {
}

func (*UnimplementedZoneDeliveryMatrixServer) Add(ctx context.Context, req *AddZoneDeliveryMatrixParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedZoneDeliveryMatrixServer) Get(ctx context.Context, req *ZoneID) (*GetDeliveryMatrixResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedZoneDeliveryMatrixServer) Update(ctx context.Context, req *ZoneDeliveryMatrixModel) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedZoneDeliveryMatrixServer) Delete(ctx context.Context, req *ID) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterZoneDeliveryMatrixServer(s *grpc.Server, srv ZoneDeliveryMatrixServer) {
	s.RegisterService(&_ZoneDeliveryMatrix_serviceDesc, srv)
}

func _ZoneDeliveryMatrix_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddZoneDeliveryMatrixParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneDeliveryMatrixServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneDeliveryMatrix/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneDeliveryMatrixServer).Add(ctx, req.(*AddZoneDeliveryMatrixParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneDeliveryMatrix_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneDeliveryMatrixServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneDeliveryMatrix/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneDeliveryMatrixServer).Get(ctx, req.(*ZoneID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneDeliveryMatrix_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneDeliveryMatrixModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneDeliveryMatrixServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneDeliveryMatrix/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneDeliveryMatrixServer).Update(ctx, req.(*ZoneDeliveryMatrixModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZoneDeliveryMatrix_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZoneDeliveryMatrixServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZoneDeliveryMatrix/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZoneDeliveryMatrixServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZoneDeliveryMatrix_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.ZoneDeliveryMatrix",
	HandlerType: (*ZoneDeliveryMatrixServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ZoneDeliveryMatrix_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ZoneDeliveryMatrix_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ZoneDeliveryMatrix_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ZoneDeliveryMatrix_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// ZonePaymentMethodClient is the client API for ZonePaymentMethod service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ZonePaymentMethodClient interface {
	Add(ctx context.Context, in *AddZonePaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Get(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*ZonePaymentMethodResponse, error)
	Update(ctx context.Context, in *UpdateZonePaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error)
	Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error)
}

type zonePaymentMethodClient struct {
	cc *grpc.ClientConn
}

func NewZonePaymentMethodClient(cc *grpc.ClientConn) ZonePaymentMethodClient {
	return &zonePaymentMethodClient{cc}
}

func (c *zonePaymentMethodClient) Add(ctx context.Context, in *AddZonePaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZonePaymentMethod/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonePaymentMethodClient) Get(ctx context.Context, in *ZoneID, opts ...grpc.CallOption) (*ZonePaymentMethodResponse, error) {
	out := new(ZonePaymentMethodResponse)
	err := c.cc.Invoke(ctx, "/transport.ZonePaymentMethod/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonePaymentMethodClient) Update(ctx context.Context, in *UpdateZonePaymentMethodParams, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZonePaymentMethod/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *zonePaymentMethodClient) Delete(ctx context.Context, in *ID, opts ...grpc.CallOption) (*OkResponse, error) {
	out := new(OkResponse)
	err := c.cc.Invoke(ctx, "/transport.ZonePaymentMethod/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ZonePaymentMethodServer is the server API for ZonePaymentMethod service.
type ZonePaymentMethodServer interface {
	Add(context.Context, *AddZonePaymentMethodParams) (*OkResponse, error)
	Get(context.Context, *ZoneID) (*ZonePaymentMethodResponse, error)
	Update(context.Context, *UpdateZonePaymentMethodParams) (*OkResponse, error)
	Delete(context.Context, *ID) (*OkResponse, error)
}

// UnimplementedZonePaymentMethodServer can be embedded to have forward compatible implementations.
type UnimplementedZonePaymentMethodServer struct {
}

func (*UnimplementedZonePaymentMethodServer) Add(ctx context.Context, req *AddZonePaymentMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedZonePaymentMethodServer) Get(ctx context.Context, req *ZoneID) (*ZonePaymentMethodResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedZonePaymentMethodServer) Update(ctx context.Context, req *UpdateZonePaymentMethodParams) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedZonePaymentMethodServer) Delete(ctx context.Context, req *ID) (*OkResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterZonePaymentMethodServer(s *grpc.Server, srv ZonePaymentMethodServer) {
	s.RegisterService(&_ZonePaymentMethod_serviceDesc, srv)
}

func _ZonePaymentMethod_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddZonePaymentMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonePaymentMethodServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZonePaymentMethod/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonePaymentMethodServer).Add(ctx, req.(*AddZonePaymentMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZonePaymentMethod_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ZoneID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonePaymentMethodServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZonePaymentMethod/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonePaymentMethodServer).Get(ctx, req.(*ZoneID))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZonePaymentMethod_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateZonePaymentMethodParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonePaymentMethodServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZonePaymentMethod/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonePaymentMethodServer).Update(ctx, req.(*UpdateZonePaymentMethodParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _ZonePaymentMethod_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ZonePaymentMethodServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.ZonePaymentMethod/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ZonePaymentMethodServer).Delete(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

var _ZonePaymentMethod_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.ZonePaymentMethod",
	HandlerType: (*ZonePaymentMethodServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _ZonePaymentMethod_Add_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _ZonePaymentMethod_Get_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ZonePaymentMethod_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ZonePaymentMethod_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}

// WinnersCompaniesClient is the client API for WinnersCompanies service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WinnersCompaniesClient interface {
	Winners(ctx context.Context, in *WinnersParams, opts ...grpc.CallOption) (*WinnersResponse, error)
}

type winnersCompaniesClient struct {
	cc *grpc.ClientConn
}

func NewWinnersCompaniesClient(cc *grpc.ClientConn) WinnersCompaniesClient {
	return &winnersCompaniesClient{cc}
}

func (c *winnersCompaniesClient) Winners(ctx context.Context, in *WinnersParams, opts ...grpc.CallOption) (*WinnersResponse, error) {
	out := new(WinnersResponse)
	err := c.cc.Invoke(ctx, "/transport.WinnersCompanies/Winners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WinnersCompaniesServer is the server API for WinnersCompanies service.
type WinnersCompaniesServer interface {
	Winners(context.Context, *WinnersParams) (*WinnersResponse, error)
}

// UnimplementedWinnersCompaniesServer can be embedded to have forward compatible implementations.
type UnimplementedWinnersCompaniesServer struct {
}

func (*UnimplementedWinnersCompaniesServer) Winners(ctx context.Context, req *WinnersParams) (*WinnersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Winners not implemented")
}

func RegisterWinnersCompaniesServer(s *grpc.Server, srv WinnersCompaniesServer) {
	s.RegisterService(&_WinnersCompanies_serviceDesc, srv)
}

func _WinnersCompanies_Winners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WinnersParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WinnersCompaniesServer).Winners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.WinnersCompanies/Winners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WinnersCompaniesServer).Winners(ctx, req.(*WinnersParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _WinnersCompanies_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.WinnersCompanies",
	HandlerType: (*WinnersCompaniesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Winners",
			Handler:    _WinnersCompanies_Winners_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/transports.proto",
}
