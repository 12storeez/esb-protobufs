// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v3.21.9
// source: proto/store.proto

package store

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaginationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_store_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_store_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_proto_store_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type PaginationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset uint32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Total  uint32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PaginationResponse) Reset() {
	*x = PaginationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_store_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaginationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationResponse) ProtoMessage() {}

func (x *PaginationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_store_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationResponse.ProtoReflect.Descriptor instead.
func (*PaginationResponse) Descriptor() ([]byte, []int) {
	return file_proto_store_proto_rawDescGZIP(), []int{1}
}

func (x *PaginationResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *PaginationResponse) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *PaginationResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Target  string `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	Code    uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_store_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_proto_store_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_proto_store_proto_rawDescGZIP(), []int{2}
}

func (x *Error) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

func (x *Error) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *PaginationRequest `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"` //Filters    filters = 2;
}

func (x *GetListRequest) Reset() {
	*x = GetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_store_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListRequest) ProtoMessage() {}

func (x *GetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_store_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListRequest.ProtoReflect.Descriptor instead.
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return file_proto_store_proto_rawDescGZIP(), []int{3}
}

func (x *GetListRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     string              `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message    string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Code       int64               `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Errors     []*Error            `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
	Data       []*Store            `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetListResponse) Reset() {
	*x = GetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_store_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListResponse) ProtoMessage() {}

func (x *GetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_store_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListResponse.ProtoReflect.Descriptor instead.
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return file_proto_store_proto_rawDescGZIP(), []int{4}
}

func (x *GetListResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetListResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetListResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetListResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetListResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

func (x *GetListResponse) GetData() []*Store {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetByStoreCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreCode int32 `protobuf:"varint,1,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
}

func (x *GetByStoreCodeRequest) Reset() {
	*x = GetByStoreCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_store_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByStoreCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByStoreCodeRequest) ProtoMessage() {}

func (x *GetByStoreCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_store_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByStoreCodeRequest.ProtoReflect.Descriptor instead.
func (*GetByStoreCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_store_proto_rawDescGZIP(), []int{5}
}

func (x *GetByStoreCodeRequest) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

type StoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *Store   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Code    int64    `protobuf:"varint,4,opt,name=code,proto3" json:"code,omitempty"`
	Errors  []*Error `protobuf:"bytes,5,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *StoreResponse) Reset() {
	*x = StoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_store_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreResponse) ProtoMessage() {}

func (x *StoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_store_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreResponse.ProtoReflect.Descriptor instead.
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return file_proto_store_proto_rawDescGZIP(), []int{6}
}

func (x *StoreResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StoreResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StoreResponse) GetData() *Store {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StoreResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *StoreResponse) GetErrors() []*Error {
	if x != nil {
		return x.Errors
	}
	return nil
}

type Store struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreCode       int32   `protobuf:"varint,1,opt,name=store_code,json=storeCode,proto3" json:"store_code,omitempty"`
	CreatedAt       string  `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string  `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt       *string `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	TitleRu         *string `protobuf:"bytes,6,opt,name=title_ru,json=titleRu,proto3,oneof" json:"title_ru,omitempty"`
	ShortTitleRu    *string `protobuf:"bytes,7,opt,name=short_title_ru,json=shortTitleRu,proto3,oneof" json:"short_title_ru,omitempty"`
	TitleEn         *string `protobuf:"bytes,8,opt,name=title_en,json=titleEn,proto3,oneof" json:"title_en,omitempty"`
	ShortTitleEn    *string `protobuf:"bytes,9,opt,name=short_title_en,json=shortTitleEn,proto3,oneof" json:"short_title_en,omitempty"`
	Phone           string  `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	Email           *string `protobuf:"bytes,11,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Latitude        *string `protobuf:"bytes,12,opt,name=latitude,proto3,oneof" json:"latitude,omitempty"`
	Longitude       *string `protobuf:"bytes,13,opt,name=longitude,proto3,oneof" json:"longitude,omitempty"`
	CountmaxId      *int64  `protobuf:"varint,14,opt,name=countmax_id,json=countmaxId,proto3,oneof" json:"countmax_id,omitempty"`
	City            *string `protobuf:"bytes,15,opt,name=city,proto3,oneof" json:"city,omitempty"`
	CityEn          *string `protobuf:"bytes,16,opt,name=city_en,json=cityEn,proto3,oneof" json:"city_en,omitempty"`
	Country         *string `protobuf:"bytes,17,opt,name=country,proto3,oneof" json:"country,omitempty"`
	CountryIsoCode  *string `protobuf:"bytes,18,opt,name=country_iso_code,json=countryIsoCode,proto3,oneof" json:"country_iso_code,omitempty"`
	MonFrom         *string `protobuf:"bytes,19,opt,name=mon_from,json=monFrom,proto3,oneof" json:"mon_from,omitempty"`
	MonTo           *string `protobuf:"bytes,20,opt,name=mon_to,json=monTo,proto3,oneof" json:"mon_to,omitempty"`
	TueFrom         *string `protobuf:"bytes,21,opt,name=tue_from,json=tueFrom,proto3,oneof" json:"tue_from,omitempty"`
	TueTo           *string `protobuf:"bytes,22,opt,name=tue_to,json=tueTo,proto3,oneof" json:"tue_to,omitempty"`
	WedFrom         *string `protobuf:"bytes,23,opt,name=wed_from,json=wedFrom,proto3,oneof" json:"wed_from,omitempty"`
	WedTo           *string `protobuf:"bytes,24,opt,name=wed_to,json=wedTo,proto3,oneof" json:"wed_to,omitempty"`
	ThuFrom         *string `protobuf:"bytes,25,opt,name=thu_from,json=thuFrom,proto3,oneof" json:"thu_from,omitempty"`
	ThuTo           *string `protobuf:"bytes,26,opt,name=thu_to,json=thuTo,proto3,oneof" json:"thu_to,omitempty"`
	FriFrom         *string `protobuf:"bytes,27,opt,name=fri_from,json=friFrom,proto3,oneof" json:"fri_from,omitempty"`
	FriTo           *string `protobuf:"bytes,28,opt,name=fri_to,json=friTo,proto3,oneof" json:"fri_to,omitempty"`
	SatFrom         *string `protobuf:"bytes,29,opt,name=sat_from,json=satFrom,proto3,oneof" json:"sat_from,omitempty"`
	SatTo           *string `protobuf:"bytes,30,opt,name=sat_to,json=satTo,proto3,oneof" json:"sat_to,omitempty"`
	SunFrom         *string `protobuf:"bytes,31,opt,name=sun_from,json=sunFrom,proto3,oneof" json:"sun_from,omitempty"`
	SunTo           *string `protobuf:"bytes,32,opt,name=sun_to,json=sunTo,proto3,oneof" json:"sun_to,omitempty"`
	PictureUrl      *string `protobuf:"bytes,33,opt,name=picture_url,json=pictureUrl,proto3,oneof" json:"picture_url,omitempty"`
	Cluster         *string `protobuf:"bytes,34,opt,name=cluster,proto3,oneof" json:"cluster,omitempty"`
	Postal          *string `protobuf:"bytes,35,opt,name=postal,proto3,oneof" json:"postal,omitempty"`
	Street          *string `protobuf:"bytes,36,opt,name=street,proto3,oneof" json:"street,omitempty"`
	House           *string `protobuf:"bytes,37,opt,name=house,proto3,oneof" json:"house,omitempty"`
	Housing         *string `protobuf:"bytes,38,opt,name=housing,proto3,oneof" json:"housing,omitempty"`
	Building        *string `protobuf:"bytes,39,opt,name=building,proto3,oneof" json:"building,omitempty"`
	Block           *string `protobuf:"bytes,40,opt,name=block,proto3,oneof" json:"block,omitempty"`
	Floor           *string `protobuf:"bytes,41,opt,name=floor,proto3,oneof" json:"floor,omitempty"`
	MetroRu         *string `protobuf:"bytes,42,opt,name=metro_ru,json=metroRu,proto3,oneof" json:"metro_ru,omitempty"`
	Route           *string `protobuf:"bytes,43,opt,name=route,proto3,oneof" json:"route,omitempty"`
	IsVisible       bool    `protobuf:"varint,44,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	IsVisibleMobile bool    `protobuf:"varint,45,opt,name=is_visible_mobile,json=isVisibleMobile,proto3" json:"is_visible_mobile,omitempty"`
	IsActive        bool    `protobuf:"varint,46,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	IsForSale       bool    `protobuf:"varint,47,opt,name=is_for_sale,json=isForSale,proto3" json:"is_for_sale,omitempty"`
	IsForCncLight   bool    `protobuf:"varint,48,opt,name=is_for_cnc_light,json=isForCncLight,proto3" json:"is_for_cnc_light,omitempty"`
	IsForCncBig     bool    `protobuf:"varint,49,opt,name=is_for_cnc_big,json=isForCncBig,proto3" json:"is_for_cnc_big,omitempty"`
	MaxCells        int32   `protobuf:"varint,50,opt,name=max_cells,json=maxCells,proto3" json:"max_cells,omitempty"`
}

func (x *Store) Reset() {
	*x = Store{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_store_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Store) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Store) ProtoMessage() {}

func (x *Store) ProtoReflect() protoreflect.Message {
	mi := &file_proto_store_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Store.ProtoReflect.Descriptor instead.
func (*Store) Descriptor() ([]byte, []int) {
	return file_proto_store_proto_rawDescGZIP(), []int{7}
}

func (x *Store) GetStoreCode() int32 {
	if x != nil {
		return x.StoreCode
	}
	return 0
}

func (x *Store) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Store) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Store) GetDeletedAt() string {
	if x != nil && x.DeletedAt != nil {
		return *x.DeletedAt
	}
	return ""
}

func (x *Store) GetTitleRu() string {
	if x != nil && x.TitleRu != nil {
		return *x.TitleRu
	}
	return ""
}

func (x *Store) GetShortTitleRu() string {
	if x != nil && x.ShortTitleRu != nil {
		return *x.ShortTitleRu
	}
	return ""
}

func (x *Store) GetTitleEn() string {
	if x != nil && x.TitleEn != nil {
		return *x.TitleEn
	}
	return ""
}

func (x *Store) GetShortTitleEn() string {
	if x != nil && x.ShortTitleEn != nil {
		return *x.ShortTitleEn
	}
	return ""
}

func (x *Store) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Store) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *Store) GetLatitude() string {
	if x != nil && x.Latitude != nil {
		return *x.Latitude
	}
	return ""
}

func (x *Store) GetLongitude() string {
	if x != nil && x.Longitude != nil {
		return *x.Longitude
	}
	return ""
}

func (x *Store) GetCountmaxId() int64 {
	if x != nil && x.CountmaxId != nil {
		return *x.CountmaxId
	}
	return 0
}

func (x *Store) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *Store) GetCityEn() string {
	if x != nil && x.CityEn != nil {
		return *x.CityEn
	}
	return ""
}

func (x *Store) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *Store) GetCountryIsoCode() string {
	if x != nil && x.CountryIsoCode != nil {
		return *x.CountryIsoCode
	}
	return ""
}

func (x *Store) GetMonFrom() string {
	if x != nil && x.MonFrom != nil {
		return *x.MonFrom
	}
	return ""
}

func (x *Store) GetMonTo() string {
	if x != nil && x.MonTo != nil {
		return *x.MonTo
	}
	return ""
}

func (x *Store) GetTueFrom() string {
	if x != nil && x.TueFrom != nil {
		return *x.TueFrom
	}
	return ""
}

func (x *Store) GetTueTo() string {
	if x != nil && x.TueTo != nil {
		return *x.TueTo
	}
	return ""
}

func (x *Store) GetWedFrom() string {
	if x != nil && x.WedFrom != nil {
		return *x.WedFrom
	}
	return ""
}

func (x *Store) GetWedTo() string {
	if x != nil && x.WedTo != nil {
		return *x.WedTo
	}
	return ""
}

func (x *Store) GetThuFrom() string {
	if x != nil && x.ThuFrom != nil {
		return *x.ThuFrom
	}
	return ""
}

func (x *Store) GetThuTo() string {
	if x != nil && x.ThuTo != nil {
		return *x.ThuTo
	}
	return ""
}

func (x *Store) GetFriFrom() string {
	if x != nil && x.FriFrom != nil {
		return *x.FriFrom
	}
	return ""
}

func (x *Store) GetFriTo() string {
	if x != nil && x.FriTo != nil {
		return *x.FriTo
	}
	return ""
}

func (x *Store) GetSatFrom() string {
	if x != nil && x.SatFrom != nil {
		return *x.SatFrom
	}
	return ""
}

func (x *Store) GetSatTo() string {
	if x != nil && x.SatTo != nil {
		return *x.SatTo
	}
	return ""
}

func (x *Store) GetSunFrom() string {
	if x != nil && x.SunFrom != nil {
		return *x.SunFrom
	}
	return ""
}

func (x *Store) GetSunTo() string {
	if x != nil && x.SunTo != nil {
		return *x.SunTo
	}
	return ""
}

func (x *Store) GetPictureUrl() string {
	if x != nil && x.PictureUrl != nil {
		return *x.PictureUrl
	}
	return ""
}

func (x *Store) GetCluster() string {
	if x != nil && x.Cluster != nil {
		return *x.Cluster
	}
	return ""
}

func (x *Store) GetPostal() string {
	if x != nil && x.Postal != nil {
		return *x.Postal
	}
	return ""
}

func (x *Store) GetStreet() string {
	if x != nil && x.Street != nil {
		return *x.Street
	}
	return ""
}

func (x *Store) GetHouse() string {
	if x != nil && x.House != nil {
		return *x.House
	}
	return ""
}

func (x *Store) GetHousing() string {
	if x != nil && x.Housing != nil {
		return *x.Housing
	}
	return ""
}

func (x *Store) GetBuilding() string {
	if x != nil && x.Building != nil {
		return *x.Building
	}
	return ""
}

func (x *Store) GetBlock() string {
	if x != nil && x.Block != nil {
		return *x.Block
	}
	return ""
}

func (x *Store) GetFloor() string {
	if x != nil && x.Floor != nil {
		return *x.Floor
	}
	return ""
}

func (x *Store) GetMetroRu() string {
	if x != nil && x.MetroRu != nil {
		return *x.MetroRu
	}
	return ""
}

func (x *Store) GetRoute() string {
	if x != nil && x.Route != nil {
		return *x.Route
	}
	return ""
}

func (x *Store) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

func (x *Store) GetIsVisibleMobile() bool {
	if x != nil {
		return x.IsVisibleMobile
	}
	return false
}

func (x *Store) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Store) GetIsForSale() bool {
	if x != nil {
		return x.IsForSale
	}
	return false
}

func (x *Store) GetIsForCncLight() bool {
	if x != nil {
		return x.IsForCncLight
	}
	return false
}

func (x *Store) GetIsForCncBig() bool {
	if x != nil {
		return x.IsForCncBig
	}
	return false
}

func (x *Store) GetMaxCells() int32 {
	if x != nil {
		return x.MaxCells
	}
	return 0
}

var File_proto_store_proto protoreflect.FileDescriptor

var file_proto_store_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x22, 0x41, 0x0a, 0x11, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x58, 0x0a,
	0x12, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4d, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x12, 0x20, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x36, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x24, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x82, 0x10, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x75, 0x88,
	0x01, 0x01, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x72, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0c, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x75, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a,
	0x08, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x45, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x6c, 0x61, 0x74,
	0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x08, 0x6c,
	0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52,
	0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x48, 0x08, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x6d, 0x61, 0x78, 0x49, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x65, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52,
	0x06, 0x63, 0x69, 0x74, 0x79, 0x45, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0b, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x0c, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x73,
	0x6f, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x6d, 0x6f, 0x6e, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x07, 0x6d, 0x6f,
	0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x5f,
	0x74, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0e, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x54,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x75, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0f, 0x52, 0x07, 0x74, 0x75, 0x65, 0x46, 0x72, 0x6f,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x74, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x05, 0x74, 0x75, 0x65, 0x54, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x77, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x11, 0x52, 0x07, 0x77, 0x65, 0x64, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x06, 0x77, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x12, 0x52, 0x05, 0x77, 0x65, 0x64, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x74, 0x68, 0x75, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13,
	0x52, 0x07, 0x74, 0x68, 0x75, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06,
	0x74, 0x68, 0x75, 0x5f, 0x74, 0x6f, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52, 0x05,
	0x74, 0x68, 0x75, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x66, 0x72, 0x69, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x07, 0x66, 0x72,
	0x69, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x66, 0x72, 0x69, 0x5f,
	0x74, 0x6f, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x16, 0x52, 0x05, 0x66, 0x72, 0x69, 0x54,
	0x6f, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x73, 0x61, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x48, 0x17, 0x52, 0x07, 0x73, 0x61, 0x74, 0x46, 0x72, 0x6f,
	0x6d, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x73, 0x61, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x18, 0x52, 0x05, 0x73, 0x61, 0x74, 0x54, 0x6f, 0x88, 0x01, 0x01,
	0x12, 0x1e, 0x0a, 0x08, 0x73, 0x75, 0x6e, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x19, 0x52, 0x07, 0x73, 0x75, 0x6e, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01,
	0x12, 0x1a, 0x0a, 0x06, 0x73, 0x75, 0x6e, 0x5f, 0x74, 0x6f, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x1a, 0x52, 0x05, 0x73, 0x75, 0x6e, 0x54, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x21, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x1b, 0x52, 0x0a, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x1c, 0x52, 0x07, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x1d, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1e,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x48, 0x1f, 0x52, 0x05, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69, 0x6e,
	0x67, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x48, 0x20, 0x52, 0x07, 0x68, 0x6f, 0x75, 0x73, 0x69,
	0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x48, 0x21, 0x52, 0x08, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x48, 0x22, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x23, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x72, 0x6f, 0x5f, 0x72, 0x75, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x24,
	0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x52, 0x75, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x48, 0x25, 0x52, 0x05, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x2e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x53, 0x61, 0x6c, 0x65, 0x12,
	0x27, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x63, 0x6e, 0x63, 0x5f, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x6f, 0x72,
	0x43, 0x6e, 0x63, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x23, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x66,
	0x6f, 0x72, 0x5f, 0x63, 0x6e, 0x63, 0x5f, 0x62, 0x69, 0x67, 0x18, 0x31, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6e, 0x63, 0x42, 0x69, 0x67, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x65, 0x6c, 0x6c, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x72, 0x75, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x65, 0x6e, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x13, 0x0a, 0x11, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x73, 0x6f, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x74, 0x75, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x75,
	0x65, 0x5f, 0x74, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x77, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x77, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x74, 0x68, 0x75, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x68,
	0x75, 0x5f, 0x74, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x72, 0x69, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x66, 0x72, 0x69, 0x5f, 0x74, 0x6f, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x73, 0x61, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x61,
	0x74, 0x5f, 0x74, 0x6f, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x75, 0x6e, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x75, 0x6e, 0x5f, 0x74, 0x6f, 0x42, 0x0e, 0x0a, 0x0c,
	0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x70, 0x6f, 0x73,
	0x74, 0x61, 0x6c, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x68, 0x6f, 0x75,
	0x73, 0x69, 0x6e, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x66, 0x6c, 0x6f, 0x6f, 0x72, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6d, 0x65, 0x74, 0x72, 0x6f, 0x5f,
	0x72, 0x75, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x32, 0xcd, 0x01, 0x0a,
	0x0c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x1a, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0a, 0x5a, 0x08,
	0x67, 0x6f, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_store_proto_rawDescOnce sync.Once
	file_proto_store_proto_rawDescData = file_proto_store_proto_rawDesc
)

func file_proto_store_proto_rawDescGZIP() []byte {
	file_proto_store_proto_rawDescOnce.Do(func() {
		file_proto_store_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_store_proto_rawDescData)
	})
	return file_proto_store_proto_rawDescData
}

var file_proto_store_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_store_proto_goTypes = []interface{}{
	(*PaginationRequest)(nil),     // 0: store.PaginationRequest
	(*PaginationResponse)(nil),    // 1: store.PaginationResponse
	(*Error)(nil),                 // 2: store.Error
	(*GetListRequest)(nil),        // 3: store.GetListRequest
	(*GetListResponse)(nil),       // 4: store.GetListResponse
	(*GetByStoreCodeRequest)(nil), // 5: store.GetByStoreCodeRequest
	(*StoreResponse)(nil),         // 6: store.StoreResponse
	(*Store)(nil),                 // 7: store.Store
}
var file_proto_store_proto_depIdxs = []int32{
	0, // 0: store.GetListRequest.pagination:type_name -> store.PaginationRequest
	1, // 1: store.GetListResponse.pagination:type_name -> store.PaginationResponse
	2, // 2: store.GetListResponse.errors:type_name -> store.Error
	7, // 3: store.GetListResponse.data:type_name -> store.Store
	7, // 4: store.StoreResponse.data:type_name -> store.Store
	2, // 5: store.StoreResponse.errors:type_name -> store.Error
	7, // 6: store.StoreService.UpdateByStoreCode:input_type -> store.Store
	3, // 7: store.StoreService.GetList:input_type -> store.GetListRequest
	5, // 8: store.StoreService.GetByStoreCode:input_type -> store.GetByStoreCodeRequest
	6, // 9: store.StoreService.UpdateByStoreCode:output_type -> store.StoreResponse
	4, // 10: store.StoreService.GetList:output_type -> store.GetListResponse
	6, // 11: store.StoreService.GetByStoreCode:output_type -> store.StoreResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_proto_store_proto_init() }
func file_proto_store_proto_init() {
	if File_proto_store_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_store_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_store_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaginationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_store_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_store_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_store_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_store_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByStoreCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_store_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_store_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Store); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_store_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_store_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_store_proto_goTypes,
		DependencyIndexes: file_proto_store_proto_depIdxs,
		MessageInfos:      file_proto_store_proto_msgTypes,
	}.Build()
	File_proto_store_proto = out.File
	file_proto_store_proto_rawDesc = nil
	file_proto_store_proto_goTypes = nil
	file_proto_store_proto_depIdxs = nil
}
