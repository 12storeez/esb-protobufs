syntax = "proto3";

option go_package = "go/transport";

package transport;

service Zones {
    rpc GetByDadataID (Dadata) returns (Zone) {
    }
    rpc GetByGeonameID (Geoname) returns (Zone) {
    }
    rpc GetByZoneID (ZoneID) returns (Zone) {
    }
    rpc Create (CreateParams) returns (ZoneID) {
    }
    rpc GetAll (GetAllParams) returns (GetAllResponse) {
    }
    rpc Update (UpdateParams) returns (OkResponse) {
    }
    rpc Delete (ZoneID) returns (OkResponse) {
    }
}

message Dadata {
    string fias_id = 1;
}

message Geoname {
    string geoname_id = 1;
}

message ZoneID {
    int32 zone_id = 1;
}

message Zone {
    int32 id = 1;
    string name = 2;
    bool active = 3;
    string created = 4;
    string updated = 5;
}

message UpdateParams {
    int32 id = 1;
    string name = 2;
    bool active = 3;
}

message CreateParams {
    string zone_name = 1;
}

message OkResponse {
    bool ok = 1;
}

message GetAllParams {
    int32 limit = 1;
    int32 offset = 2;
}

message GetAllResponse {
    int32 total = 1;
    repeated Zone zones = 2;
}

service ZoneManualPriority {
    rpc Add (AddManualPriorityParams) returns (OkResponse) {
    }
    rpc Get (ZoneID) returns (ManualPriorityList) {
    }
    rpc Update (ManualPriorityParams) returns (OkResponse) {
    }
    rpc Delete (ID) returns (OkResponse) {
    }
}

message AddManualPriorityParams {
    int32 zone_id = 1;
    int32 tk_id = 2;
    int32 delivery_id = 3;
    float value = 4;
    float max_days = 5;
    float tariff = 6;
    bool active = 7;
}

message ManualPriorityParams {
    int32 id = 1;
    int32 zone_id = 2;
    int32 tk_id = 3;
    int32 delivery_id = 4;
    float value = 5;
    float max_days = 6;
    float tariff = 7;
    bool active = 8;
}

message ManualPriorityList {
    repeated ManualPriorityParams list = 1;
}

message ZoneDeliveryManualPriorityID {
    int32 id = 1;
}

service DeliveryMethod {
    rpc Add (AddDeliveryMethodParams) returns (OkResponse) {
    }
    rpc Get (ID) returns (GetDeliveryMethodResponse) {
    }
    rpc Update (UpdateDeliveryMethodParams) returns (OkResponse) {
    }
    rpc Delete (ID) returns (OkResponse) {
    }
}

message AddDeliveryMethodParams {
    string title = 1;
}

message GetDeliveryMethodResponse {
    int32 id = 1;
    string title = 2;
    DELIVERY_TYPE type = 3;
    bool active = 4;
    string created = 5;
    string updated = 6;
}

message UpdateDeliveryMethodParams {
    int32 id = 1;
    string title = 2;
    DELIVERY_TYPE type = 3;
    bool active = 4;
}

service PaymentMethod {
    rpc Add (AddPaymentMethodParams) returns (OkResponse) {
    }
    rpc Get (ID) returns (GetPaymentMethodResponse) {
    }
    rpc Update (UpdatePaymentMethodParams) returns (OkResponse) {
    }
    rpc Delete (ID) returns (OkResponse) {
    }
}

message GetPaymentMethodResponse {
    int32 id = 1;
    string title = 2;
    bool is_active = 3;
    string created = 4;
    string updated = 5;
}

message ID {
    int32 id = 1;
}

message AddPaymentMethodParams {
    string title = 1;
}

message UpdatePaymentMethodParams {
    int32 id = 1;
    string title = 2;
    bool active = 3;
}

service ZoneDeliveryMatrix {
    rpc Add (AddZoneDeliveryMatrixParams) returns (OkResponse) {
    }
    rpc Get (ZoneID) returns (GetDeliveryMatrixResponse) {
    }
    rpc Update (ZoneDeliveryMatrixModel) returns (OkResponse) {
    }
    rpc Delete (ID) returns (OkResponse) {
    }
}

message AddZoneDeliveryMatrixParams {
    int32 zone_id = 1;
    string cutoff_time = 2;
    int32 gap_days = 3;
    int32 consolidation_days = 4;
    int32 delivery_id = 5;
    int32 payment_id = 6;
    float total_less = 7;
    float total_more = 8;
    float total = 9;
    int32 delivery_min_days = 10;
    bool active = 11;
}

message GetDeliveryMatrixResponse {
    repeated ZoneDeliveryMatrixModel list = 1;
}

message ZoneDeliveryMatrixModel {
    int32 id = 1;
    int32 zone_id = 2;
    string cutoff_time = 3;
    int32 gap_days = 4;
    int32 consolidation_days = 5;
    int32 delivery_id = 6;
    int32 payment_id = 7;
    float total_less = 8;
    float total_more = 9;
    float total = 10;
    int32 delivery_min_days = 11;
    bool active = 12;
}

service ZonePaymentMethod {
    rpc Add (AddZonePaymentMethodParams) returns (OkResponse) {
    }
    rpc Get (ZoneID) returns (ZonePaymentMethodResponse) {
    }
    rpc Update (UpdateZonePaymentMethodParams) returns (OkResponse) {
    }
    rpc Delete (ID) returns (OkResponse) {
    }
}

message ZonePaymentMethodResponse {
    repeated ZonePaymentMethodModel list = 1;
}

message AddZonePaymentMethodParams {
    int32 zone_id = 1;
    int32 delivery_id = 2;
    int32 payment_id = 3;
    int32 tk_id = 4;
    bool active = 5;
}

message ZonePaymentMethodModel {
    int32 id = 1;
    int32 zone_id = 2;
    int32 delivery_id = 3;
    int32 payment_id = 4;
    int32 tk_id = 5;
    bool active = 6;
    string created = 7;
    string updated = 8;
}

message UpdateZonePaymentMethodParams {
    int32 id = 1;
    int32 zone_id = 2;
    int32 delivery_id = 3;
    int32 payment_id = 4;
    int32 tk_id = 5;
    bool active = 6;
}

service WinnersCompanies {
    rpc Winners (WinnersParams) returns (WinnersResponse);
}

enum GEO_TYPE {
    DADATA = 0;
    GEONAME = 1;
}

message WinnersParams {
    string geo_id = 1;
    GEO_TYPE geo_type = 2;
    int32 order_price = 3;
    // в рублях
    string locale = 4;
}

message WinnersResponse {
    repeated winner result = 1;
}

enum DELIVERY_TYPE {
    COURIER = 0;
    COURIER_FAST = 1;
    COURIER_FITTING = 2;
    PICKUP_SHOP = 3;
    PICKUP_BOXBERRY = 4;
}

message winner {
    DELIVERY_TYPE delivery_type_id = 1;
    string delivery_type_title = 2;
    deliveryCompany winner_company = 3;
    repeated paymentType payments = 4;
    // 'YYYY-MM-DD'
    repeated deliveryTime delivery_date = 6;
}

message deliveryCompany {
    string code = 1;
    string title = 2;
}

message paymentType {
    string code = 1;
    string title = 2;
    int32 delivery_price = 3;
}

message deliveryTime {
    string date = 1;
    repeated interval intervals = 2;
}

message interval {
    // 10:30 for example
    string time_from = 1;
    string time_to = 2;
}
