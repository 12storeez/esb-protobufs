syntax = "proto3";

option go_package = "go/mercaux";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

package mercaux;

service StocksService {
    rpc List(ListRequest) returns (ListStocksResponse) {
        option (google.api.http) = {
            get: "/api/v1/stocks"
        };
    }
}

service CatalogService {
    rpc List(ListRequest) returns (ListCatalogResponse) {
        option (google.api.http) = {
            get: "/api/v1/catalog"
        };
    }
}

service StoresService {
    rpc List(google.protobuf.Empty) returns (ListStoresResponse) {
        option (google.api.http) = {
            get: "/api/v1/stores"
        };
    }
}

service SellersService {
    rpc List(google.protobuf.Empty) returns (ListSellersResponse) {
        option (google.api.http) = {
            get: "/api/v1/sellers"
        };
    }
}

service OrdersService {
    rpc New(NewOrderRequest) returns (NewOrderResponse) {
        option (google.api.http) = {
            post: "/api/v1/order"
            body: "*"
        };
    }
}

message ListRequest {
    int32   limit = 1;
    int32   offset = 2;
}

message ListCatalogResponse {
    repeated Catalog results = 1;
    int32            total = 2;
}

message ListStocksResponse {
    repeated Stock results = 1;
    int32           total = 2;
}

message Catalog {
    int64             barcode = 1;
    string            category = 2;
    string            family = 3;
    string            product_name = 4;
    string            url = 5;
    bool              is_active = 6;
    int32             article = 7;
    string            size = 8;
    string            color = 9;
    string            fabric = 10;
    string            super_model_name = 11;
    string            gender = 12;
    repeated string   sizes = 13;
    repeated string   barcode_alt = 14;
    repeated string   total_look = 15;
    string            description = 16;
    repeated string   images = 17;
    repeated Category site_category = 18;
    string            size_description = 19;
    repeated string   alternatives = 20;
    string            video = 21;
    repeated string   instashop = 22;
    string            preview = 23;
    Capsules          capsules = 24;
    bool              is_sample_sale = 25;
}

message Stock {
    int64     barcode = 1;
    string    country = 2;
    repeated  Quantity quantity = 3;
}

message Capsules {
    string id = 1;
    string title = 2;
    string parent_season = 3;
}

message Category {
    int32 id = 1;
    string slug = 2;
    string title = 3;
}

message Quantity {
    int32 store_id = 1;
    int32 available = 2;
    int32 reserved = 3;
    int32 discount = 4;
    int32 price = 5;
    int32 price_before_discount = 6;
}

message ListStoresResponse {
    bool ok = 1;
    repeated Store stores = 2;
}

message Store {
    int32 store_id = 1;
    string short_title = 2;
    string address = 3;
    string phone = 4;
    string geo = 5;
    string city = 6;
    string country = 7;
    bool active = 8;
}

message ListSellersResponse {
    bool ok = 1;
    repeated Seller sellers = 2;
}

message Seller {
    int32 store_id = 1;
    string seller_id = 2;
    string seller_name = 3;
}

message NewOrderRequest {
    Order order = 1;
    string source = 2;
    string seller_id = 3;
}

message Order {
    string last_name = 1;
    string first_name = 2;
    string phone = 3;
    string email = 4;
    int32 store_id = 5;
    repeated OrderItem items = 6;
}

message OrderItem {
    string id = 1;
    int32 quantity = 2;
    float price = 3;
}

message NewOrderResponse {
    bool ok = 1;
    string order_id = 2;
    repeated OrderError errors = 3;
}

message OrderError {
    int32  code = 1;
    string message = 2;
    float  price = 3;
    int32  available_quantity = 4;
    string barcode = 5;
}
