syntax = "proto3";

option go_package = "go/logistics";

package logistics;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "store.proto";
import "delivery_type.proto";
import "message.proto";


service StoreDeliveryTypeService {
  rpc List(ListStoreDeliveryTypeRequest) returns (ListStoreDeliveryTypeResponse) {
    option (google.api.http) = {
      get: "/api/v1/store-delivery-type"
    };
  }

  rpc Create(CreateStoreDeliveryType) returns (StoreDeliveryType) {
    option (google.api.http) = {
      post: "/api/v1/store-delivery-type"
      body: "*"
    };
  }

  rpc Get(StoreDeliveryTypeId) returns (StoreDeliveryType) {
    option (google.api.http) = {
      get: "/api/v1/store-delivery-type/{id}"
    };
  }

  rpc Update(UpdateStoreDeliveryType) returns (StoreDeliveryType) {
    option (google.api.http) = {
      patch: "/api/v1/store-delivery-type/{id}"
      body: "*"
    };
  }

  rpc Delete(StoreDeliveryTypeId) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/v1/store-delivery-type/{id}"
    };
  }

  rpc Suggest(SuggestStoreDeliveryTypeRequest) returns (SuggestStoreDeliveryTypeResponse) {
    option (google.api.http) = {
      get: "/api/v1/store-delivery-type/suggest"
    };
  }
}

message StoreDeliveryTypeId {
  int32 id = 1;
}

message CreateStoreDeliveryType {
  int32   store_code = 1;
  int32   pickup_delivery_type_id = 2;
  int32   shipment_delivery_type_id = 3;
  int32   max_cells = 4;
  bool    is_active_pickup = 5;
  bool    is_active_shipment = 6;
}

message ListStoreDeliveryTypeRequest {
  int32   limit = 1;
  int32   offset = 2;
  string  search = 3;
  string  sort = 4;
}

message ListStoreDeliveryTypeResponse {
  repeated StoreDeliveryType  results = 1;
  int32                       total = 2;
}

message StoreDeliveryType {
  int32             id = 1;
  Store             store = 2;
  optional DeliveryTypeShort delivery_type_pickup = 3;
  optional DeliveryTypeShort delivery_type_shipment = 4;
  int32             max_cells = 5;
  int32             busy_cells = 6;
  int32             free_cells = 7;
  bool              is_active_pickup = 8;
  bool              is_active_pickup_by_cells = 9;
  bool              is_active_shipment = 10;
  string            created_at = 11;
  string            updated_at = 12;
  string            postal = 13;
  string            street = 14;
  string            house = 15;
  string            housing = 16;
  string            floor = 17;
  repeated Rel      rels = 18;
}

message UpdateStoreDeliveryType {
  int32             id = 1;
  int32             store_code = 2;
  int32             pickup_delivery_type_id = 3;
  int32             shipment_delivery_type_id = 4;
  int32             max_cells = 5;
  bool              is_active_pickup = 6;
  bool              is_active_shipment = 7;
}

message SuggestStoreDeliveryTypeRequest {
  int32  limit = 1;
  string search = 2;
}

message SuggestStoreDeliveryType {
  int32  id = 1;
  string name = 2;
  bool   is_active_pickup = 3;
  int32  store_code = 4;
  string postal = 5;
  string street = 6;
  string house = 7;
  string housing = 8;
  string floor = 9;
  bool   is_active_shipment = 10;
}

message SuggestStoreDeliveryTypeResponse {
  repeated SuggestStoreDeliveryType   results = 1;
  int32                               total = 2;
}
